{"version":3,"sources":["components/Header/Header.js","actions.js","components/Filter/Filter.js","components/Filter/FilterContainer.js","components/Loader/Loader.js","components/PizzaItem/PizzaItem.js","components/PizzaItem/PizzaItemContainer.js","components/PizzaList/PizzaList.js","pizza-service.js","components/Pages/MainPage.js","components/CartItem/CartItem.js","components/CartList/CartList.js","components/Pages/CartPage.js","components/CartFailure/CartFailure.js","components/Pages/CartFailurePage.js","components/Login/Login.js","components/Pages/LoginPage.js","components/App/App.js","reducers/pizza-list.js","reducers/shopping-cart.js","reducers/login-page.js","reducers/index.js","store.js","index.js"],"names":["Header","cartButtonRender","onToggleMenu","mobileMenuClass","loginButton","className","onClick","src","alt","to","connect","shoppingCart","total","cartCount","mobileMenuActive","loginPage","nickName","logged","dispatch","type","onLogout","simpleHeader","Filter","filterList","sortList","currentSort","onToggleSort","arrowClass","sortListClass","onToggleFilter","mobileFilterClass","pizzaList","filter","sort","sortActive","mobileFilterActive","onFilter","filterKey","payload","onSort","sortType","changeSort","sortListRendered","label","map","item","idx","key","filterListRendered","Loader","PizzaItem","name","price","img","thicknessSettingsRender","sizeSettingsRender","onCartPizza","id","renderCount","pizzaItemImage","pizzaImageClass","ref","cartPizzasNameList","cartPizzasKind","onChooseType","choosePizzaType","onChooseSize","size","choosePizzaSize","toggleAddAnimation","addPizzaToCart","totalPrice","settings","thickness","animation","useRef","count","pizzaName","currentPizzasCount","length","getPizzaCount","thinClass","classicClass","thicknessSettings","smallPizzaClass","mediumPizzaClass","largePizzaClass","sizeSettings","pizzaService","pizzas","markup","thin","classic","small","medium","large","class","popularity","Promise","resolve","setTimeout","filterPizzas","loader","pizzasLoaded","data","fetchError","err","fetchRequest","useEffect","getPizzas","then","catch","pizza","renderPizzas","MainPage","onIncrease","increasePizza","onDecrease","decreasePizza","onDelete","deletePizza","cartPizzas","onClearCart","renderCartPizzas","emptyCart","CartFailure","title","subtitle","logout","login","cartIsEmpty","onLogin","nick","password","loginRequest","hidden","action","placeholder","htmlFor","App","path","component","exact","CartPage","CartFailurePage","render","LoginPage","filterItems","listToFilter","uniquePizzaId","newId","initialId","includes","sortItems","listToSort","a","b","updatePizzaList","state","filterPizzasList","sortedAndFilteredList","error","updatedTypeList","changeThicknessType","updatedSizeList","changeSizeSettings","pizzaClass","filteredList","e","sortedItems","currentPizzasList","pizzaIdToAnimate","newListToAnimate","increaseCartPizza","cartedPizzaId","pizzaItem","newCartCount","pizzaPricePerPiece","newTotal","updatedList","deletedPizza","deletedPizzaId","newList","newPizzaKindList","indexOfPizzaKind","indexOf","splice","updateShoppingCart","actionAddPizzaId","newCartedPizza","pizzaId","selectedPizza","find","createCartPizza","isPizzaCartedChecker","increaseId","pizzaToInc","decreasePizzaId","pizzaToDec","lastIndexOf","decreaseCartPizza","updateLoginPage","initState","reducer","store","createStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99bfe8a5.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Header.scss'\r\nimport { connect } from 'react-redux'\r\nimport { toggleMenuWindow, logout } from '../../actions'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst HeaderContainer = ({\r\n    simpleHeader,\r\n    onToggleMenu,\r\n    mobileMenuActive,\r\n    total, cartCount,\r\n    nickName, logged,\r\n    onLogout,\r\n}) => {\r\n    let mobileMenuClass = mobileMenuActive ?\r\n        'header__buttons-block header__buttons-block--active' : 'header__buttons-block'\r\n\r\n    const cartButtonRender = simpleHeader ?\r\n        null : (\r\n            <div className=\"cart\" onClick={() => onToggleMenu()}>\r\n                <div className=\"cart__price\">{total}₴</div>\r\n                <div className=\"cart__line\"></div>\r\n                <div className=\"cart__count\">\r\n                    <i className=\"fas fa-shopping-cart cart__icon\"></i>\r\n                    {cartCount}\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    const loginButton = logged ?\r\n\r\n        <div className=\"header__welcome\">\r\n            <p>Ласкаво просимо - </p>\r\n            <p className=\" header__welcome header__welcome--nick\">\r\n                {nickName}!\r\n            </p>\r\n            <p className=\"header__logout\" onClick={() => onLogout()}>\r\n                Вийти\r\n            </p>\r\n        </div>\r\n        :\r\n        <Link to=\"/login\">\r\n            <section onClick={() => onToggleMenu()}\r\n                className=\"header__login\">\r\n                Увійти\r\n                </section>\r\n        </Link>\r\n\r\n\r\n    return <Header\r\n        onToggleMenu={onToggleMenu}\r\n        mobileMenuClass={mobileMenuClass}\r\n        cartButtonRender={cartButtonRender}\r\n        loginButton={loginButton}\r\n    />\r\n}\r\n\r\nconst Header = ({\r\n    cartButtonRender,\r\n    onToggleMenu,\r\n    mobileMenuClass,\r\n    loginButton\r\n}) => {\r\n    return <header className=\"header\">\r\n        <div className=\"header__burger\"\r\n            onClick={() => onToggleMenu()}>\r\n            XXX\r\n        </div>\r\n\r\n\r\n        <section className=\"header__logo-block\">\r\n            <img src=\"./logo.svg\" className=\"header__logo\" alt=\"logo\" />\r\n            <Link to=\"/\">\r\n                <section className=\"header__text-block\">\r\n                    <h1 className=\"header__title\">Pizza Delivery</h1>\r\n                    <p className=\"header__subtitle\">Найсмачніша піцца у нашому вимірі</p>\r\n                </section>\r\n            </Link>\r\n        </section>\r\n\r\n\r\n        <section className={mobileMenuClass}>\r\n            <section className=\"header__close\" onClick={() => onToggleMenu()}> X </section>\r\n\r\n            {loginButton}\r\n\r\n            <Link to=\"/cart\">\r\n                {cartButtonRender}\r\n            </Link>\r\n\r\n        </section>\r\n    </header>\r\n}\r\n\r\nconst mapStateToProps = ({ shoppingCart:\r\n    { total, cartCount },\r\n    mobileMenuActive,\r\n    loginPage: { nickName, logged } }) => {\r\n    return {\r\n        mobileMenuActive,\r\n        total,\r\n        cartCount,\r\n        nickName,\r\n        logged\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onToggleMenu: () => dispatch(toggleMenuWindow()),\r\n        onLogout: () => dispatch(logout())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderContainer)","const fetchPizzas = (pizzas) => {\r\n    return {\r\n        type: 'FETCH_PIZZAS_SUCCES',\r\n        payload: pizzas\r\n    }\r\n}\r\nconst fetchError = (err) => {\r\n    return {\r\n        type: 'FETCH_PIZZAS_FAILURE',\r\n        payload: err\r\n    }\r\n}\r\nconst fetchRequest = () => {\r\n    return {\r\n        type: 'FETCH_PIZZAS_REQUEST'\r\n    }\r\n}\r\n\r\nconst choosePizzaType = (id, type, name) => {\r\n    return {\r\n        type: 'TYPE_PIZZA_CHOOSE',\r\n        payload: {\r\n            id,\r\n            type,\r\n            name,\r\n        }\r\n    }\r\n}\r\n\r\nconst choosePizzaSize = (id, size, name) => {\r\n    return {\r\n        type: 'SIZE_PIZZA_CHOOSE',\r\n        payload: {\r\n            id,\r\n            size,\r\n            name\r\n        }\r\n    }\r\n}\r\n\r\nconst changeFilter = (filter) => {\r\n    return {\r\n        type: 'FILTER_CHANGE',\r\n        payload: filter,\r\n    }\r\n}\r\nconst changeSort = (sortType) => {\r\n    return {\r\n        type: 'SORT_CHANGE',\r\n        payload: sortType,\r\n    }\r\n}\r\nconst toggleSortWindow = () => {\r\n    return {\r\n        type: 'SORT_TOGGLE'\r\n    }\r\n}\r\nconst toggleMenuWindow = () => {\r\n    return {\r\n        type: 'MOBILE_MENU_TOGGLE'\r\n    }\r\n}\r\nconst toggleFilterWindow = () => {\r\n    return {\r\n        type: 'MOBILE_FILTER_TOGGLE'\r\n    }\r\n}\r\nconst addPizzaToCart = (id) => {\r\n    return {\r\n        type: 'CART_PIZZA_ADD',\r\n        payload: id\r\n    }\r\n}\r\nconst increasePizza = (id) => {\r\n    return {\r\n        type: 'CART_PIZZA_INCREASE',\r\n        payload: id\r\n    }\r\n}\r\nconst decreasePizza = (id) => {\r\n    return {\r\n        type: 'CART_PIZZA_DECREASE',\r\n        payload: id\r\n    }\r\n}\r\n\r\nconst deletePizza = (id) => {\r\n    return {\r\n        type: 'CART_PIZZA_DELETE',\r\n        payload: id,\r\n    }\r\n}\r\nconst clearCart = () => {\r\n    return {\r\n        type: 'CART_CLEAR'\r\n    }\r\n}\r\nconst toggleAddAnimation = (id) => {\r\n    return {\r\n        type: 'ANIMATION_PIZZA_TOGGLE',\r\n        payload: id,\r\n    }\r\n}\r\n\r\nconst loginRequest = (nick, password) => {\r\n    return {\r\n        type: 'LOGIN_REQUEST',\r\n        payload: {\r\n            nick,\r\n            password\r\n        }\r\n    }\r\n}\r\nconst logout = () => {\r\n    return {\r\n        type: 'LOG_OUT'\r\n    }\r\n}\r\nexport {\r\n    fetchRequest,\r\n    fetchPizzas,\r\n    fetchError,\r\n    choosePizzaType,\r\n    choosePizzaSize,\r\n    changeFilter,\r\n    changeSort,\r\n    toggleSortWindow,\r\n    toggleMenuWindow,\r\n    toggleFilterWindow,\r\n    addPizzaToCart,\r\n    increasePizza,\r\n    decreasePizza,\r\n    deletePizza,\r\n    clearCart,\r\n    toggleAddAnimation,\r\n    loginRequest,\r\n    logout,\r\n}","import React from 'react'\r\nimport './Filter.scss'\r\n\r\n\r\nconst Filter = ({ filterList, sortList,\r\n    currentSort, onToggleSort,\r\n    arrowClass, sortListClass,\r\n    onToggleFilter, mobileFilterClass }) => {\r\n\r\n    return <>\r\n        <section className=\"filter__mobile-trigger\"\r\n            onClick={onToggleFilter}>\r\n            Настройки пошуку\r\n    </section>\r\n        <section className={mobileFilterClass} >\r\n\r\n            <ul className=\"filter__filter-list\">\r\n                {filterList}\r\n            </ul>\r\n            <section className=\"filter__sort \" onClick={onToggleSort}>\r\n                <img src=\"./sort-arrow.svg\" className={arrowClass} alt=\"arrow\" />\r\n                <p className=\"filter__sort-text\">\r\n                    Сортувати за:\r\n                <span className=\"filter__sort-type\" > {currentSort}</span></p>\r\n                <ul className={sortListClass}>\r\n                    {sortList}\r\n                </ul>\r\n            </section>\r\n        </section>\r\n    </>\r\n}\r\n\r\n\r\n\r\nexport default Filter","import React from 'react'\r\nimport './Filter.scss'\r\nimport { connect } from 'react-redux'\r\nimport Filter from './Filter'\r\nimport {\r\n    changeFilter, changeSort,\r\n    toggleSortWindow,\r\n    toggleFilterWindow\r\n} from '../../actions'\r\n\r\n\r\nconst FilterContainer = ({ filter, sort,\r\n    onFilter, onSort,\r\n    sortActive, onToggleSort,\r\n    onToggleFilter, mobileFilterActive }) => {\r\n    let currentSort = sort\r\n\r\n    switch (currentSort) {\r\n        case 'popularity': currentSort = 'популярністю'; break;\r\n        case 'cost': currentSort = 'ціною'; break;\r\n        case 'alphabet': currentSort = 'алфавітом'; break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    const filterList = [\r\n        { type: 'all', label: \"Всі\" },\r\n        { type: 'meat', label: \"М'ясні\" },\r\n        { type: 'vegetable', label: \"Овочеві\" },\r\n        { type: 'spicy', label: 'Гострі' }\r\n    ]\r\n    const sortList = [\r\n        { type: 'popularity', label: \"Популярністю\" },\r\n        { type: 'cost', label: 'Ціною' },\r\n        { type: 'alphabet', label: \"Алфавітом\" }\r\n    ]\r\n\r\n    const sortListRendered = sortList.map((item, idx) => {\r\n        if (sort === item.type) return (\r\n            <li key={idx}\r\n                className=\"sort__item sort__item--active\"\r\n                onClick={() => onSort(item.type)}>\r\n                {item.label}\r\n            </li>\r\n        )\r\n        return <li key={idx}\r\n            className=\"sort__item\"\r\n            onClick={() => onSort(item.type)}>\r\n            {item.label}\r\n        </li>\r\n    });\r\n\r\n    const filterListRendered = filterList.map((item, idx) => {\r\n        if (item.type === filter) return (\r\n            <li key={idx}\r\n                onClick={() => onFilter(item.type)}\r\n                className=\"filter-list__item filter-list__item--active\">\r\n                {item.label}\r\n            </li>\r\n        )\r\n\r\n        return (\r\n            <li key={idx}\r\n                onClick={() => onFilter(item.type)}\r\n                className=\"filter-list__item\">\r\n                {item.label}\r\n            </li>\r\n        )\r\n    })\r\n\r\n    const mobileFilterClass = mobileFilterActive ?\r\n        'filter-container filter-container--active' : 'filter-container'\r\n    const sortListClass = sortActive ?\r\n        'sort__list sort__list--active' : 'sort__list'\r\n    const arrowClass = sortActive ?\r\n        'sort__arrow-disabled' : 'sort__arrow-active'\r\n\r\n\r\n\r\n    return <Filter filterList={filterListRendered}\r\n        sortList={sortListRendered}\r\n        currentSort={currentSort}\r\n        onSort={onSort}\r\n        onToggleSort={onToggleSort}\r\n        arrowClass={arrowClass}\r\n        sortListClass={sortListClass}\r\n        onToggleFilter={onToggleFilter}\r\n        mobileFilterClass={mobileFilterClass} />\r\n}\r\n\r\nconst mapStateToProps = ({ pizzaList: { filter, sort, sortActive, mobileFilterActive } }) => {\r\n    return { filter, sort, sortActive, mobileFilterActive }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onFilter: (filterKey) => dispatch(changeFilter(filterKey)),\r\n        onSort: (sortType) => dispatch(changeSort(sortType)),\r\n        onToggleSort: () => dispatch(toggleSortWindow()),\r\n        onToggleFilter: () => dispatch(toggleFilterWindow())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterContainer) ","import React from 'react'\r\nimport './Loader.scss'\r\n\r\nconst Loader = () => {\r\n    return <div className=\"lds-hourglass\"></div>\r\n}\r\n\r\nexport default Loader","import React from 'react'\r\nimport './PizzaItem.scss'\r\n\r\nconst PizzaItem = ({ name,\r\n    price, img,\r\n    thicknessSettingsRender,\r\n    sizeSettingsRender, onCartPizza,\r\n    id, renderCount,\r\n    pizzaItemImage,\r\n    pizzaImageClass }) => {\r\n\r\n    return <section className=\"pizza-item__container\">\r\n        <div className=\"pizza-item__image-block\">\r\n            <img src={img} className=\"pizza-item__image-static\" alt=\"pizza\" />\r\n            <img src={img} className={pizzaImageClass} ref={pizzaItemImage} alt=\"pizza for animation\" />\r\n        </div>\r\n        <div className=\"pizza-item__title\">\r\n            <p className=\"pizza-item__text\">{name}</p>\r\n        </div>\r\n        <div className=\"pizza-settings__container pizza-item__text pizza-item__text--settings\">\r\n            {thicknessSettingsRender}\r\n            {sizeSettingsRender}\r\n\r\n        </div>\r\n        <div className=\"pizza-item__order\">\r\n            <p className=\"pizza-item__price pizza-item__text pizza-item__text--price\">{price} ₴</p>\r\n            <button onClick={() => onCartPizza(id)}\r\n                className=\"pizza-item__order-button\">\r\n                <img src=\"./plus.png\" className=\"pizza-item__plus\" alt=\"plus\" />\r\n                <p className=\"pizza-item__order-text\">\r\n                    Добавити\r\n                </p>\r\n                {renderCount}\r\n            </button>\r\n        </div>\r\n    </section>\r\n}\r\n\r\nexport default PizzaItem","import React, { useRef } from 'react'\r\nimport './PizzaItem.scss'\r\nimport PizzaItem from './PizzaItem'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { choosePizzaType, choosePizzaSize, addPizzaToCart, toggleAddAnimation } from '../../actions'\r\n\r\n\r\nconst PizzaItemContainer = ({\r\n    name, id,\r\n    totalPrice, img,\r\n    settings: { type: thickness = 'thin',\r\n        size = 'small' },\r\n    onChooseType,\r\n    onChooseSize,\r\n    onCartPizza,\r\n    cartPizzasNameList,\r\n    animation }) => {\r\n\r\n    const pizzaItemImage = useRef(null)\r\n\r\n    const getPizzaCount = (cartPizzasNameList, pizzaName) => {\r\n        const currentPizzasCount = cartPizzasNameList.filter((name) => name === pizzaName)\r\n        if (currentPizzasCount.length > 0) return currentPizzasCount.length\r\n        return null\r\n    }\r\n\r\n    const thicknessSettings = (thickness) => {\r\n        let thinClass = \"pizza-settings__thickness\"\r\n        let classicClass = \"pizza-settings__thickness\"\r\n\r\n        if (thickness === 'classic') classicClass += ' pizza-settings__thickness--active'\r\n        if (thickness === 'thin') thinClass += ' pizza-settings__thickness--active'\r\n        return (\r\n            <>\r\n                <div className={thinClass} onClick={() => onChooseType(id, 'thin', name)}>тонка</div>\r\n                <div className={classicClass} onClick={() => onChooseType(id, 'classic', name)}>стандартна</div>\r\n            </>\r\n        )\r\n    }\r\n    const sizeSettings = (size) => {\r\n\r\n        let smallPizzaClass = 'pizza-settings__size';\r\n        let mediumPizzaClass = 'pizza-settings__size';\r\n        let largePizzaClass = 'pizza-settings__size';\r\n\r\n        if (size === 'small') smallPizzaClass += ' pizza-settings__size--active'\r\n        if (size === 'medium') mediumPizzaClass += ' pizza-settings__size--active'\r\n        if (size === 'large') largePizzaClass += ' pizza-settings__size--active'\r\n\r\n        return (\r\n            <>\r\n                <div className={smallPizzaClass} onClick={() => onChooseSize(id, 'small', name)}>26 см.</div>\r\n                <div className={mediumPizzaClass} onClick={() => onChooseSize(id, 'medium', name)}>30 см.</div>\r\n                <div className={largePizzaClass} onClick={() => onChooseSize(id, 'large', name)}>40 см.</div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const count = getPizzaCount(cartPizzasNameList, name)\r\n    const renderCount = count > 0 ?\r\n        <p className=\"pizza-item__order-count\">{count}</p> : null\r\n\r\n    const pizzaImageClass = animation ?\r\n        'pizza-item__image pizza-item__image--animated' : 'pizza-item__image'\r\n\r\n    return <PizzaItem name={name}\r\n        price={totalPrice}\r\n        img={img}\r\n        thicknessSettingsRender={thicknessSettings(thickness)}\r\n        sizeSettingsRender={sizeSettings(size)}\r\n        onCartPizza={onCartPizza}\r\n        id={id}\r\n        renderCount={renderCount}\r\n        pizzaItemImage={pizzaItemImage}\r\n        pizzaImageClass={pizzaImageClass}\r\n    />\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ shoppingCart: { cartPizzasKind: cartPizzasNameList } }) => {\r\n    return { cartPizzasNameList }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onChooseType: (id, type, name) => dispatch(choosePizzaType(id, type, name)),\r\n        onChooseSize: (id, size, name) => dispatch(choosePizzaSize(id, size, name)),\r\n        onCartPizza: (id) => {\r\n            dispatch(toggleAddAnimation(id))\r\n            dispatch(addPizzaToCart(id))\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PizzaItemContainer)","import React, { useEffect } from 'react'\r\nimport './PizzaList.scss'\r\nimport { connect } from 'react-redux'\r\n\r\nimport Loader from '../Loader/Loader'\r\nimport PizzaItem from '../PizzaItem/PizzaItemContainer'\r\nimport PizzaService from '../../pizza-service'\r\nimport { fetchPizzas, fetchError, fetchRequest } from '../../actions'\r\n\r\n\r\nconst pizzaService = new PizzaService()\r\n\r\nconst renderPizzas = (pizzas) => {\r\n    return pizzas.map((pizza) => {\r\n        return <PizzaItem key={pizza.id}\r\n            {...pizza}\r\n        />\r\n    })\r\n}\r\nconst PizzaList = ({ pizzas,\r\n    sort,\r\n    fetchRequest,\r\n    pizzasLoaded,\r\n    filter,\r\n    fetchError,\r\n    loader, }) => {\r\n\r\n    useEffect(() => {\r\n        fetchRequest()\r\n        pizzaService.getPizzas()\r\n            .then((data) => pizzasLoaded(data))\r\n            .catch((err) => fetchError(err))\r\n    }, [filter, sort, fetchRequest, pizzasLoaded, fetchError])\r\n\r\n    switch (filter) {\r\n        case 'all': filter = 'Всі'; break;\r\n        case 'meat': filter = \"М'ясні\"; break;\r\n        case 'vegetable': filter = 'Овочеві'; break;\r\n        case 'spicy': filter = 'Гострі'; break;\r\n        default:\r\n            break;\r\n    }\r\n    if (loader) return <Loader />\r\n\r\n    return <main className=\"pizza-list__container\">\r\n        <section className=\"pizza-list__header\">\r\n            {filter} піцци\r\n        </section>\r\n        <section className=\"pizza-list\">\r\n            {renderPizzas(pizzas)}\r\n\r\n        </section>\r\n    </main>\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        pizzasLoaded: (data) => dispatch(fetchPizzas(data)),\r\n        fetchError: (err) => dispatch(fetchError(err)),\r\n        fetchRequest: () => dispatch(fetchRequest()),\r\n\r\n    }\r\n}\r\nconst mapStateToProps = ({ pizzaList: { filterPizzas: pizzas, filter, loader, sort } }) => {\r\n    return {\r\n        pizzas, filter, loader, sort\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PizzaList)","export default class PizzaService {\r\n    pizzas = [\r\n        {\r\n            name: \"Чізбургер-Піцца\",\r\n            img: './chizburger-pizza.png',\r\n            markup: {\r\n                thin: 0,\r\n                classic: 30,\r\n                small: 0,\r\n                medium: 15,\r\n                large: 45,\r\n            },\r\n            settings: {\r\n                size: 'small',\r\n                type: 'thin'\r\n            },\r\n            price: 101,\r\n            totalPrice: 101,\r\n            id: 1,\r\n            class: 'meat',\r\n            popularity: 0.3\r\n        },\r\n        {\r\n            name: \"Сирна\",\r\n            img: './cheeze.png',\r\n            markup: {\r\n                thin: 0,\r\n                classic: 26,\r\n                small: 0,\r\n                medium: 20,\r\n                large: 38,\r\n            },\r\n            settings: {\r\n                size: 'small',\r\n                type: 'thin',\r\n            },\r\n            price: 99,\r\n            totalPrice: 99,\r\n            id: 2,\r\n            class: 'vegetable',\r\n            popularity: 0.5,\r\n        },\r\n        {\r\n            name: \"Криветки по-азіатськи\",\r\n            img: './shrimp.png',\r\n            markup: {\r\n                thin: 0,\r\n                classic: 41,\r\n                small: 0,\r\n                medium: 29,\r\n                large: 65,\r\n            },\r\n            settings: {\r\n                size: 'small',\r\n                type: 'thin'\r\n            },\r\n            price: 95,\r\n            totalPrice: 95,\r\n            id: 3,\r\n            class: 'meat',\r\n            popularity: 0.99,\r\n        },\r\n        {\r\n            name: \"Сирне курча\",\r\n            img: './cheeze-chicken.png',\r\n            markup: {\r\n                thin: 0,\r\n                classic: 30,\r\n                small: 0,\r\n                medium: 15,\r\n                large: 25,\r\n            },\r\n            settings: {\r\n                size: 'small',\r\n                type: 'thin'\r\n            },\r\n            price: 95,\r\n            totalPrice: 95,\r\n            id: 4,\r\n            class: ['spicy', 'meat'],\r\n            popularity: 0.6\r\n        },\r\n    ]\r\n    getPizzas() {\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => resolve(this.pizzas), 600)\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport Header from '../Header/Header'\r\nimport Filter from '../Filter/FilterContainer'\r\nimport PizzaList from '../PizzaList/PizzaList'\r\n\r\nconst MainPage = () => {\r\n    return <>\r\n        <Header />\r\n        <Filter />\r\n        <PizzaList />\r\n    </>\r\n}\r\nexport default MainPage","import React from 'react'\r\nimport './CartItem.scss'\r\nimport { increasePizza, decreasePizza, deletePizza } from '../../actions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst CartItem = ({\r\n    name, total,\r\n    img,\r\n    settings,\r\n    count, id,\r\n    onIncrease,\r\n    onDecrease,\r\n    onDelete, }) => {\r\n\r\n    let size = settings.size\r\n    let type = settings.type\r\n\r\n    switch (settings.type) {\r\n        case 'thin': type = 'Тонке тісто'; break;\r\n        case 'classic': type = 'Товсте тісто'; break;\r\n        default: break;\r\n    }\r\n    switch (settings.size) {\r\n        case 'small': size = '26 см.'; break;\r\n        case 'medium': size = '30 см.'; break;\r\n        case 'large': size = '40 см.'; break;\r\n        default: break;\r\n    }\r\n    return (\r\n        <div className=\"cart-item\">\r\n            <div className=\"cart-item__info-block\">\r\n                <img src={img} className=\"cart-item__img\" alt=\"pizza\" />\r\n                <div className=\"cart-item__info\">\r\n                    <p className=\"cart-page__text\">{name}</p>\r\n                    <p className=\"cart-page__text cart-page__text--small_gray\">\r\n                        {`${type}, ${size}`}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div className=\"cart-item__counter-block\">\r\n                <i onClick={() => onDecrease(id)}\r\n                    className=\"fas fa-minus-circle cart-item__counter-icon\"></i>\r\n                <p className=\"cart-page__text cart-item__count\">{count}</p>\r\n                <i onClick={() => onIncrease(id)}\r\n                    className=\"fas fa-plus-circle cart-item__counter-icon\"></i>\r\n            </div>\r\n            <div className=\"cart-item__price\">\r\n                <p className=\"cart-page__text\">{total} ₴</p>\r\n            </div>\r\n            <div className=\"cart-item__close\">\r\n                <i onClick={() => onDelete(id)}\r\n                    className=\"far fa-times-circle cart-item__close-icon\"></i>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onIncrease: (id) => dispatch(increasePizza(id)),\r\n        onDecrease: (id) => dispatch(decreasePizza(id)),\r\n        onDelete: (id) => dispatch(deletePizza(id))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(CartItem)","import React from 'react'\r\nimport './CartList.scss'\r\nimport CartItem from '../CartItem/CartItem'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { clearCart } from '../../actions'\r\n\r\n\r\nconst CartList = ({ cartPizzas, total,\r\n    cartCount, onClearCart }) => {\r\n\r\n    const renderCartPizzas = (cartPizzas) => {\r\n        return cartPizzas.map((pizza) => {\r\n            return <CartItem {...pizza} key={pizza.id} />\r\n        })\r\n    }\r\n\r\n    return <section className=\"cart-page\">\r\n        <section className=\"cart-page__header\">\r\n            <div className=\"cart-page__title\">\r\n                <i className=\"fas fa-shopping-cart cart-page__cart-icon\"></i>\r\n                <p className=\"cart-page__text cart-page__text--title\">Корзина</p>\r\n            </div>\r\n            <div onClick={() => onClearCart()}\r\n                className=\"cart-page__clear\">\r\n                <span className=\"cart-page__clear-underscore\"></span>\r\n                <i className=\"far fa-trash-alt cart-page__trash-icon\"></i>\r\n                <p className=\"cart-page__text cart-page__text--small_gray\">\r\n                    Очистити корзину\r\n                </p>\r\n            </div>\r\n        </section>\r\n        <section className=\"cart-page__cart-list\">\r\n\r\n            {renderCartPizzas(cartPizzas)}\r\n\r\n        </section>\r\n        <section className=\"cart-page__info-block\">\r\n            <div className=\"cart-page__text-block\">\r\n                <span className=\"cart-page__text cart-page__text--thin\">Всього піц: </span>\r\n                <span className=\"cart-page__text\">{cartCount} шт</span>\r\n            </div>\r\n            <div className=\"cart-page__text-block\">\r\n                <span className=\"cart-page__text cart-page__text--thin\">Сума заказу: </span>\r\n                <span className=\"cart-page__text cart-page__text--orange\">{total} ₴</span>\r\n            </div>\r\n        </section>\r\n        <section className=\"cart-page__buttons-block\">\r\n            <Link to=\"/\">\r\n                <button className=\"cart-page__nav-button\">\r\n                    <span className=\"cart-page__text cart-page__text--small_gray\">\r\n                        Повернутись назад\r\n                    </span>\r\n                </button>\r\n            </Link>\r\n            <button className=\"cart-page__nav-button cart-page__nav-button--order\">\r\n                Оплатити\r\n            </button>\r\n        </section>\r\n    </section>\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onClearCart: () => dispatch(clearCart())\r\n    }\r\n}\r\nconst mapStateToProps = ({ shoppingCart: { cartPizzas, total, cartCount } }) => {\r\n    return { cartPizzas, total, cartCount }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CartList)","import React from 'react'\r\n\r\nimport CartList from '../CartList/CartList'\r\nimport Header from '../Header/Header'\r\nimport { Redirect } from 'react-router';\r\nimport { connect } from 'react-redux'\r\n\r\nconst CartPage = ({ emptyCart, logged }) => {\r\n\r\n    if (!logged) return <Redirect to=\"/cart-login\" />\r\n    if (emptyCart) return <Redirect to=\"/cart-empty\" />\r\n\r\n    return (\r\n        <>\r\n            <Header simpleHeader />\r\n            <CartList />\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ loginPage: { logged }, shoppingCart: { cartPizzas } }) => {\r\n    return {\r\n        logged,\r\n        emptyCart: cartPizzas.length === 0\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CartPage)","import React from 'react'\r\nimport './CartFailure.scss'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst CartFailure = ({ logout }) => {\r\n\r\n    let title = 'Корзина пуста 😕'\r\n    let subtitle = 'Схоже, що ви ще не вибрали жодної піци. Для того, щоб вибрати піцу, поверністья на головну сторінку'\r\n    if (logout) {\r\n        title = \"Ви не ввійшли у свій аккаунт 😕\"\r\n        subtitle = 'Схоже, що ви не авторизувались, для того, щоб увійти, натисність кнопку вгорі'\r\n    }\r\n\r\n    return <div className=\"cart-failure\">\r\n        <h2 className=\"cart-failure__title\">\r\n            {title}\r\n        </h2>\r\n        <p className=\"cart-failure__sub-title\">\r\n            {subtitle}\r\n        </p>\r\n        <img src=\"empty-cart.png\" className=\"cart-failure__img\" alt=\"empty-cart\" />\r\n\r\n        <Link to=\"/\">\r\n            <button className=\"cart-failure__back\">Повернутися назад</button>\r\n        </Link>\r\n\r\n    </div>\r\n}\r\n\r\nexport default CartFailure","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nimport CartFailure from '../CartFailure/CartFailure'\r\nimport Header from '../Header/Header'\r\n\r\nconst CartFailurePage = ({ logout, cartIsEmpty, login }) => {\r\n\r\n    if (!cartIsEmpty) return <Redirect to='/' />\r\n\r\n\r\n    return (\r\n        <>\r\n            <Header simpleHeader />\r\n            <CartFailure logout={logout} />\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ login, shoppingCart: { cartPizzas } }) => {\r\n    return {\r\n        login,\r\n        cartIsEmpty: cartPizzas.length === 0\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CartFailurePage)","import React from 'react'\r\nimport './Login.scss'\r\nimport { connect } from 'react-redux'\r\nimport { loginRequest } from '../../actions'\r\n\r\nconst Login = ({ onLogin }) => {\r\n    return <div className=\"login__container\">\r\n        <div className=\"box\">\r\n            <input\r\n                type=\"checkbox\"\r\n                id=\"toggle\"\r\n                className=\"box__toggle\"\r\n                hidden />\r\n            <img src=\"https://source.unsplash.com/zv3ckJKftC4/300x400\" alt=\"by Autumn Studio\" className=\"box__image\" />\r\n\r\n            <div className=\"form form--register\" action=\"\">\r\n                <h1 className=\"form__title\">Реєстрація</h1>\r\n\r\n                <div className=\"form__helper\">\r\n                    <input type=\"text\"\r\n                        name=\"user\"\r\n                        id=\"new-user\"\r\n                        placeholder=\"User\"\r\n                        className=\"form__input\" />\r\n                    <label className=\"form__label\" htmlFor=\"new-user\">\r\n                        Ім'я\r\n                    </label>\r\n                </div>\r\n\r\n                <div className=\"form__helper\">\r\n                    <input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Email\" className=\"form__input\" />\r\n                    <label className=\"form__label\" htmlFor=\"email\">Електрона скринька</label>\r\n                </div>\r\n\r\n                <div className=\"form__helper\">\r\n                    <input type=\"password\" name=\"password\" id=\"new-user-password\" placeholder=\"Password\" className=\"form__input\" />\r\n                    <label className=\"form__label\" htmlFor=\"new-user-password\">Пароль</label>\r\n                </div>\r\n\r\n                <div className=\"form__helper\">\r\n                    <input type=\"password\" name=\"password\" id=\"confirm-password\" placeholder=\"Confirm password\" className=\"form__input\" />\r\n                    <label className=\"form__label\" htmlFor=\"confirm-password\">Підтвердження паролю</label>\r\n                </div>\r\n\r\n                <button className=\"form__button\">Зареєструватися</button>\r\n\r\n                <p className=\"form__text\">Вже зареєстровані? <label htmlFor=\"toggle\" className=\"form__link\">Увійти в аккаунт!</label> </p>\r\n            </div>\r\n\r\n            <div className=\"form form--login\">\r\n                <h1 className=\"form__title\">Вхід</h1>\r\n\r\n                <div className=\"form__helper\">\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"user\"\r\n                        id=\"user\"\r\n                        placeholder=\"User\"\r\n                        className=\"form__input\" />\r\n                    <label className=\"form__label\" htmlFor=\"user\">\r\n                        Ім'я\r\n                    </label>\r\n                </div>\r\n\r\n                <div className=\"form__helper\">\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        id=\"password\"\r\n                        placeholder=\"Password\"\r\n                        className=\"form__input\" />\r\n                    <label className=\"form__label\" htmlFor=\"password\">\r\n                        Пароль\r\n                    </label>\r\n                </div>\r\n\r\n                <button onClick={() => onLogin('testNameBabak123', '123')}\r\n                    className=\"form__button\">\r\n                    Увійти\r\n                </button>\r\n\r\n                <p className=\"form__text\">Ще не зареєстровані? <label htmlFor=\"toggle\" className=\"form__link\">Пройти реєстрацію!</label> </p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onLogin: (nick, password) => dispatch(loginRequest(nick, password))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Login)","import React from 'react'\r\nimport Header from '../Header/Header'\r\nimport Login from '../Login/Login'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router'\r\n\r\nconst LoginPage = ({ logged }) => {\r\n\r\n    if (logged) return <Redirect to=\"/\" />\r\n\r\n    return (\r\n        <>\r\n            <Header simpleHeader />\r\n            <Login />\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ loginPage: { logged } }) => {\r\n    return {\r\n        logged\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(LoginPage)","import React from 'react';\nimport './App.scss';\nimport MainPage from '../Pages/MainPage'\nimport CartPage from '../Pages/CartPage'\nimport CartFailurePage from '../Pages/CartFailurePage';\nimport LoginPage from '../Pages/LoginPage'\n\nimport { Route } from 'react-router-dom'\n\nconst App = () => {\n  return <div className=\"wrapper\">\n    <Route path=\"/\" component={MainPage} exact />\n    <Route path=\"/cart\" component={CartPage} exact />\n    <Route path=\"/cart-empty\" component={CartFailurePage} exact />\n    <Route path=\"/cart-login\" render={() => <CartFailurePage logout />} exact />\n    <Route path=\"/login\" component={LoginPage} exact />\n  </div>\n}\n\nexport default App","const changeThicknessType = (state, id, type) => {\r\n    const { pizzaList: { filterPizzas } } = state\r\n    return filterPizzas.map((pizza) => {\r\n        if (pizza.id === id) {\r\n            const { size } = pizza.settings\r\n            const { markup, price } = pizza\r\n            const newId = `${pizza.initialId + type + size}`\r\n            return {\r\n                ...pizza,\r\n                totalPrice: price + markup[type] + markup[size],\r\n                settings: { type: type, size: size },\r\n                id: newId,\r\n                animation: false,\r\n            }\r\n        }\r\n        return pizza\r\n    })\r\n}\r\n\r\nconst changeSizeSettings = (state, id, size) => {\r\n    const { pizzaList: { filterPizzas } } = state\r\n    return filterPizzas.map((pizza) => {\r\n        if (pizza.id === id) {\r\n            const { type } = pizza.settings\r\n            const { markup, price } = pizza\r\n            const newId = `${pizza.initialId + type + size}`\r\n            return {\r\n                ...pizza,\r\n                totalPrice: price + markup[type] + markup[size],\r\n                settings: { type: type, size: size },\r\n                id: newId,\r\n                animation: false,\r\n            }\r\n        }\r\n        return pizza\r\n    })\r\n}\r\n\r\nconst filterItems = (listToFilter, filter) => {\r\n\r\n    const uniquePizzaId = listToFilter.map((item) => {\r\n        let { id, settings: { type, size } } = item\r\n        let newId = `${id + type + size}`\r\n        return {\r\n            ...item,\r\n            id: newId,\r\n            initialId: id,\r\n            animation: false,\r\n        }\r\n    })\r\n    if (filter === 'all') return uniquePizzaId\r\n    return uniquePizzaId.filter((pizza) => pizza.class.includes(filter))\r\n}\r\n\r\nconst sortItems = (listToSort, sortType) => {\r\n    if (sortType === 'cost') return listToSort.sort((a, b) => a.price > b.price ? 1 : -1);\r\n    if (sortType === 'popularity') return listToSort.sort((a, b) => a.popularity < b.popularity ? 1 : -1);\r\n    if (sortType === 'alphabet') return listToSort.sort((a, b) => a.name > b.name ? 1 : -1);\r\n    return listToSort\r\n}\r\n\r\n\r\n\r\n\r\nconst updatePizzaList = (state, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case 'FETCH_PIZZAS_REQUEST':\r\n            return {\r\n                ...state.pizzaList,\r\n                loader: true,\r\n            }\r\n        case 'FETCH_PIZZAS_SUCCES':\r\n            const pizzas = action.payload\r\n            const { sort, filter } = state.pizzaList\r\n            const filterPizzasList = filterItems(pizzas, filter)\r\n            const sortedAndFilteredList = sortItems(filterPizzasList, sort)\r\n\r\n            return {\r\n                ...state.pizzaList,\r\n                pizzas: pizzas,\r\n                filterPizzas: sortedAndFilteredList,\r\n                loader: false,\r\n            }\r\n        case 'FETCH_PIZZAS_FAILURE':\r\n            return {\r\n                ...state.pizzaList,\r\n                error: action.payload\r\n            }\r\n        case 'TYPE_PIZZA_CHOOSE':\r\n            const { id: pizzaIdType } = action.payload\r\n            const { type } = action.payload\r\n            const updatedTypeList = changeThicknessType(state, pizzaIdType, type)\r\n\r\n            return {\r\n                ...state.pizzaList,\r\n                filterPizzas: updatedTypeList,\r\n            }\r\n        case 'SIZE_PIZZA_CHOOSE':\r\n            const { id: pizzaIdSize } = action.payload\r\n            const { size } = action.payload\r\n            const updatedSizeList = changeSizeSettings(state, pizzaIdSize, size)\r\n            return {\r\n                ...state.pizzaList,\r\n                filterPizzas: updatedSizeList,\r\n            }\r\n\r\n        case 'FILTER_CHANGE':\r\n            const pizzaClass = action.payload\r\n            let listToFilter = state.pizzaList.pizzas\r\n            const filteredList = filterItems(listToFilter, pizzaClass)\r\n            return {\r\n                ...state.pizzaList,\r\n                filter: pizzaClass,\r\n                filterPizzas: filteredList\r\n            }\r\n        case 'SORT_CHANGE':\r\n            const sortType = action.payload;\r\n            const listToSort = state.pizzaList.filterPizzas.map((e) => e)\r\n            const sortedItems = sortItems(listToSort, sortType)\r\n            return {\r\n                ...state.pizzaList,\r\n                sort: sortType,\r\n                filterPizzas: sortedItems\r\n            }\r\n        case 'SORT_TOGGLE':\r\n            const { sortActive } = state.pizzaList\r\n            return {\r\n                ...state.pizzaList,\r\n                sortActive: !sortActive\r\n            }\r\n        case 'MOBILE_FILTER_TOGGLE':\r\n            const { mobileFilterActive } = state.pizzaList\r\n            return {\r\n                ...state.pizzaList,\r\n                sortActive: false,\r\n                mobileFilterActive: !mobileFilterActive\r\n            }\r\n\r\n        case 'ANIMATION_PIZZA_TOGGLE':\r\n            const currentPizzasList = state.pizzaList.filterPizzas\r\n            const pizzaIdToAnimate = action.payload\r\n            const newListToAnimate = currentPizzasList.map((item) => {\r\n                if (pizzaIdToAnimate === item.id) return {\r\n                    ...item,\r\n                    animation: true,\r\n                }\r\n                return item\r\n            })\r\n            return {\r\n                ...state.pizzaList,\r\n                filterPizzas: newListToAnimate\r\n            }\r\n        default: return state.pizzaList\r\n    }\r\n}\r\n\r\nexport default updatePizzaList","const createCartPizza = (state, pizzaId) => {\r\n    const { pizzaList: { filterPizzas } } = state\r\n    const selectedPizza = filterPizzas.find(({ id }) => id === pizzaId)\r\n\r\n    return {\r\n        name: selectedPizza.name,\r\n        total: selectedPizza.totalPrice,\r\n        settings: selectedPizza.settings,\r\n        img: selectedPizza.img,\r\n        count: 1,\r\n        id: selectedPizza.id,\r\n    }\r\n}\r\nconst isPizzaCartedChecker = (state, newCartedPizza) => {\r\n    const { id, settings: { type, size } } = newCartedPizza\r\n    const { cartPizzas } = state.shoppingCart\r\n    return cartPizzas\r\n        .find((pizza) => pizza.id === id\r\n            && pizza.settings.type === type\r\n            && pizza.settings.size === size)\r\n}\r\n\r\nconst increaseCartPizza = (state, cartedPizzaId, pizzaItem) => {\r\n    const { shoppingCart: { cartCount, total, cartPizzas } } = state\r\n    const newCartCount = cartCount + 1\r\n    const pizzaPricePerPiece = pizzaItem.total / pizzaItem.count\r\n    const newTotal = total + pizzaPricePerPiece\r\n\r\n    const updatedList = cartPizzas.map((pizza) => {\r\n        if (pizza.id === cartedPizzaId) return (\r\n            {\r\n                ...pizza,\r\n                count: ++pizza.count,\r\n                total: pizzaPricePerPiece + pizza.total\r\n            }\r\n        )\r\n        return pizza\r\n    })\r\n\r\n    return {\r\n        ...state.shoppingCart,\r\n        cartPizzas: updatedList,\r\n        total: newTotal,\r\n        cartCount: newCartCount,\r\n        cartPizzasKind: [\r\n            ...state.shoppingCart.cartPizzasKind,\r\n            pizzaItem.name\r\n        ]\r\n    }\r\n}\r\n\r\nconst decreaseCartPizza = (state, cartedPizzaId, pizzaItem) => {\r\n    const { shoppingCart: { cartCount, total, cartPizzas, cartPizzasKind } } = state\r\n\r\n    const newCartCount = cartCount - 1\r\n    const pizzaPricePerPiece = pizzaItem.total / pizzaItem.count\r\n    const newTotal = total - pizzaPricePerPiece\r\n\r\n    const updatedList = cartPizzas\r\n        .map((pizza) => {\r\n            if (pizza.id === cartedPizzaId) {\r\n                return {\r\n                    ...pizza,\r\n                    count: --pizza.count,\r\n                    total: pizza.total - pizzaPricePerPiece\r\n                }\r\n            }\r\n            return pizza\r\n        })\r\n    const newPizzaKindList = cartPizzasKind.map(e => e)\r\n    const indexOfPizzaKind = cartPizzasKind.lastIndexOf(pizzaItem.name)\r\n    if (indexOfPizzaKind > -1) newPizzaKindList.splice(indexOfPizzaKind, 1)\r\n\r\n    return {\r\n        ...state.shoppingCart,\r\n        cartPizzas: updatedList,\r\n        cartCount: newCartCount,\r\n        total: newTotal,\r\n        cartPizzasKind: newPizzaKindList\r\n    }\r\n}\r\n\r\nconst deletePizza = (state, deletedPizza, deletedPizzaId) => {\r\n    const { shoppingCart: { cartCount, total, cartPizzas, cartPizzasKind } } = state\r\n\r\n    const newList = cartPizzas.filter(({ id }) => id !== deletedPizzaId)\r\n    const newPizzaKindList = cartPizzasKind.map(e => e)\r\n    const indexOfPizzaKind = cartPizzasKind.indexOf(deletedPizza.name)\r\n    if (indexOfPizzaKind > -1) newPizzaKindList.splice(indexOfPizzaKind, deletedPizza.count)\r\n\r\n    return {\r\n        ...state.shoppingCart,\r\n        cartPizzas: newList,\r\n        total: total - deletedPizza.total,\r\n        cartCount: cartCount - deletedPizza.count,\r\n        cartPizzasKind: newPizzaKindList,\r\n    }\r\n}\r\n\r\n\r\nconst updateShoppingCart = (state, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n\r\n        case 'CART_PIZZA_ADD':\r\n            const actionAddPizzaId = action.payload\r\n            const newCartedPizza = createCartPizza(state, actionAddPizzaId)\r\n            const isPizzaCarted = isPizzaCartedChecker(state, newCartedPizza)\r\n\r\n            if (isPizzaCarted) return increaseCartPizza(state, actionAddPizzaId, newCartedPizza)\r\n\r\n            else {\r\n                const newCartCount = state.shoppingCart.cartCount + 1\r\n                const newTotal = state.shoppingCart.total + newCartedPizza.total\r\n                return {\r\n                    ...state.shoppingCart,\r\n                    cartCount: newCartCount,\r\n                    total: newTotal,\r\n                    cartPizzas: [\r\n                        ...state.shoppingCart.cartPizzas,\r\n                        newCartedPizza,\r\n                    ],\r\n                    cartPizzasKind: [\r\n                        ...state.shoppingCart.cartPizzasKind,\r\n                        newCartedPizza.name\r\n                    ],\r\n                }\r\n            }\r\n\r\n        case 'CART_PIZZA_INCREASE':\r\n            const { cartPizzas } = state.shoppingCart\r\n\r\n            const increaseId = action.payload\r\n            const pizzaToInc = cartPizzas.find(({ id }) => id === increaseId)\r\n\r\n            return increaseCartPizza(state, increaseId, pizzaToInc)\r\n\r\n        case 'CART_PIZZA_DECREASE': {\r\n            const { cartPizzas } = state.shoppingCart\r\n\r\n            const decreasePizzaId = action.payload\r\n            const pizzaToDec = cartPizzas.find(({ id }) => id === decreasePizzaId)\r\n\r\n            if (pizzaToDec.count <= 1) return deletePizza(state, pizzaToDec, decreasePizzaId)\r\n            return decreaseCartPizza(state, decreasePizzaId, pizzaToDec)\r\n        }\r\n\r\n        case 'CART_PIZZA_DELETE': {\r\n            const { cartPizzas } = state.shoppingCart\r\n\r\n            const deletedPizzaId = action.payload;\r\n            const deletedPizza = cartPizzas.find(({ id }) => id === deletedPizzaId)\r\n\r\n            return deletePizza(state, deletedPizza, deletedPizzaId)\r\n        }\r\n\r\n        case 'CART_CLEAR': {\r\n            return {\r\n                ...state.shoppingCart,\r\n                cartCount: 0,\r\n                total: 0,\r\n                cartPizzasKind: [],\r\n                cartPizzas: [],\r\n            }\r\n        }\r\n        default: return state.shoppingCart\r\n    }\r\n}\r\n\r\nexport default updateShoppingCart","import { act } from \"react-dom/test-utils\"\r\n\r\nconst updateLoginPage = (state, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_REQUEST': {\r\n            return {\r\n                ...state.loginPage,\r\n                logged: true,\r\n                password: action.payload.password,\r\n                nickName: action.payload.nick,\r\n            }\r\n        }\r\n        case 'LOG_OUT': {\r\n            return {\r\n                ...state.loginPage,\r\n                logged: false,\r\n                password: '',\r\n                nickName: '',\r\n            }\r\n        }\r\n        default:\r\n            return state.loginPage\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default updateLoginPage","import updatePizzaList from './pizza-list'\r\nimport updateShoppingCart from './shopping-cart'\r\nimport updateLoginPage from './login-page'\r\n\r\nconst initState = {\r\n\r\n    loginPage: {\r\n        logged: true,\r\n        nickName: 'babak',\r\n        password: '123321'\r\n    },\r\n    mobileMenuActive: false,\r\n\r\n    shoppingCart: {\r\n        cartPizzas: [],\r\n        cartCount: 0,\r\n        total: 0,\r\n        cartPizzasKind: [],\r\n    },\r\n    pizzaList: {\r\n        pizzas: [],\r\n        filterPizzas: [],\r\n        filter: \"all\",\r\n        sort: \"popularity\",\r\n        sortActive: false,\r\n        mobileFilterActive: false,\r\n        loader: true,\r\n        error: null,\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n\r\n        case 'MOBILE_MENU_TOGGLE':\r\n            return {\r\n                ...state,\r\n                mobileMenuActive: !state.mobileMenuActive\r\n            }\r\n        default:\r\n            return {\r\n                ...state,\r\n                pizzaList: updatePizzaList(state, action),\r\n                shoppingCart: updateShoppingCart(state, action),\r\n                loginPage: updateLoginPage(state, action)\r\n            }\r\n    }\r\n}\r\n\r\nexport default reducer\r\n\r\n","import { createStore } from 'redux'\r\nimport reducer from './reducers'\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport { Provider } from 'react-redux'\nimport { HashRouter as Router } from 'react-router-dom'\nimport store from './store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}