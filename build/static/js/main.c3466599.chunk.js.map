{"version":3,"sources":["components/Header/Header.js","actions.js","components/Filter/Filter.js","components/Filter/FilterContainer.js","components/Loader/Loader.js","components/PizzaItem/PizzaItem.js","components/PizzaItem/PizzaItemContainer.js","components/PizzaList/PizzaList.js","pizza-service.js","components/Pages/MainPage.js","components/CartItem/CartItem.js","components/CartList/CartList.js","components/Pages/CartPage.js","components/CartFailure/CartFailure.js","components/Pages/CartFailurePage.js","components/App/App.js","reducers/pizza-list.js","reducers/shopping-cart.js","reducers/index.js","store.js","index.js"],"names":["Header","cartButtonRender","onToggleMenu","mobileMenuClass","className","onClick","src","to","connect","shoppingCart","total","cartCount","mobileMenuActive","dispatch","type","simpleHeader","Filter","filterList","sortList","currentSort","onToggleSort","arrowClass","sortListClass","onToggleFilter","mobileFilterClass","pizzaList","filter","sort","sortActive","mobileFilterActive","onFilter","filterKey","payload","onSort","sortType","changeSort","sortListRendered","label","map","item","idx","key","filterListRendered","Loader","PizzaItem","name","price","img","thicknessSettingsRender","sizeSettingsRender","onCartPizza","id","renderCount","cartPizzasNameList","cartPizzasKind","onChooseType","choosePizzaType","onChooseSize","size","choosePizzaSize","addPizzaToCart","thickness","count","pizzaName","currentPizzasCount","length","getPizzaCount","thinClass","classicClass","thicknessSettings","smallPizzaClass","mediumPizzaClass","largePizzaClass","sizeSettings","pizzaService","pizzas","markup","thin","classic","small","medium","large","settings","totalPrice","class","popularity","Promise","resolve","setTimeout","filterPizzas","loader","pizzasLoaded","data","fetchError","err","fetchRequest","useEffect","getPizzas","then","catch","pizza","initialId","renderPizzas","MainPage","onIncrease","increasePizza","onDecrease","decreasePizza","onDelete","deletePizza","cartPizzas","onClearCart","renderCartPizzas","emptyCart","CartFailure","title","subtitle","logout","CartFailurePage","App","path","component","exact","CartPage","render","filterItems","listToFilter","uniquePizzaId","newId","includes","sortItems","listToSort","a","b","updatePizzaList","state","action","filterPizzasList","sortedAndFilteredList","error","updatedTypeList","changeThicknessType","updatedSizeList","changeSizeSettings","pizzaClass","filteredList","e","sortedItems","increaseCartPizza","cartedPizzaId","pizzaItem","newCartCount","pizzaPricePerPiece","newTotal","updatedList","deletedPizza","deletedPizzaId","newList","newPizzaKindList","indexOfPizzaKind","indexOf","splice","updateShoppingCart","actionAddPizzaId","newCartedPizza","pizzaId","selectedPizza","find","createCartPizza","isPizzaCartedChecker","increaseId","pizzaToInc","decreasePizzaId","pizzaToDec","lastIndexOf","decreaseCartPizza","initState","reducer","store","createStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c3466599.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Header.scss'\r\nimport { connect } from 'react-redux'\r\nimport { toggleMenuWindow } from '../../actions'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst HeaderContainer = ({\r\n    simpleHeader,\r\n    onToggleMenu,\r\n    mobileMenuActive,\r\n    total, cartCount\r\n}) => {\r\n    let mobileMenuClass = mobileMenuActive ?\r\n        'header__buttons-block header__buttons-block--active' : 'header__buttons-block'\r\n\r\n    const cartButtonRender = simpleHeader ?\r\n        null : (\r\n            <div className=\"cart\" onClick={() => onToggleMenu()}>\r\n                <div className=\"cart__price\">{total}₴</div>\r\n                <div className=\"cart__line\"></div>\r\n                <div className=\"cart__count\">\r\n                    <i className=\"fas fa-shopping-cart cart__icon\"></i>\r\n                    {cartCount}\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    return <Header\r\n        onToggleMenu={onToggleMenu}\r\n        mobileMenuClass={mobileMenuClass}\r\n        cartButtonRender={cartButtonRender}\r\n    />\r\n}\r\n\r\nconst Header = ({\r\n    cartButtonRender,\r\n    onToggleMenu,\r\n    mobileMenuClass,\r\n}) => {\r\n    return <header className=\"header\">\r\n        <div className=\"header__burger\"\r\n            onClick={() => onToggleMenu()}>\r\n            XXX\r\n        </div>\r\n\r\n\r\n        <section className=\"header__logo-block\">\r\n            <img src=\"./logo.svg\" className=\"header__logo\" />\r\n            <Link to=\"/\">\r\n                <section className=\"header__text-block\">\r\n                    <h1 className=\"header__title\">Pizza Delivery</h1>\r\n                    <p className=\"header__subtitle\">Найсмачніша піцца у нашому вимірі</p>\r\n                </section>\r\n            </Link>\r\n        </section>\r\n\r\n\r\n        <section className={mobileMenuClass}>\r\n            <section className=\"header__close\" onClick={() => onToggleMenu()}> X </section>\r\n            <section className=\"header__login\">Увійти</section>\r\n\r\n            <Link to=\"/cart\">\r\n                {cartButtonRender}\r\n            </Link>\r\n\r\n        </section>\r\n    </header>\r\n}\r\n\r\nconst mapStateToProps = ({ shoppingCart: { total, cartCount }, mobileMenuActive }) => {\r\n    return { mobileMenuActive, total, cartCount }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onToggleMenu: () => dispatch(toggleMenuWindow())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderContainer)","const fetchPizzas = (pizzas) => {\r\n    return {\r\n        type: 'FETCH_PIZZAS_SUCCES',\r\n        payload: pizzas\r\n    }\r\n}\r\nconst fetchError = (err) => {\r\n    return {\r\n        type: 'FETCH_PIZZAS_FAILURE',\r\n        payload: err\r\n    }\r\n}\r\nconst fetchRequest = () => {\r\n    return {\r\n        type: 'FETCH_PIZZAS_REQUEST'\r\n    }\r\n}\r\n\r\nconst choosePizzaType = (id, type, name) => {\r\n    return {\r\n        type: 'TYPE_PIZZA_CHOOSE',\r\n        payload: {\r\n            id,\r\n            type,\r\n            name,\r\n        }\r\n    }\r\n}\r\n\r\nconst choosePizzaSize = (id, size, name) => {\r\n    return {\r\n        type: 'SIZE_PIZZA_CHOOSE',\r\n        payload: {\r\n            id,\r\n            size,\r\n            name\r\n        }\r\n    }\r\n}\r\n\r\nconst changeFilter = (filter) => {\r\n    return {\r\n        type: 'FILTER_CHANGE',\r\n        payload: filter,\r\n    }\r\n}\r\nconst changeSort = (sortType) => {\r\n    return {\r\n        type: 'SORT_CHANGE',\r\n        payload: sortType,\r\n    }\r\n}\r\nconst toggleSortWindow = () => {\r\n    return {\r\n        type: 'SORT_TOGGLE'\r\n    }\r\n}\r\nconst toggleMenuWindow = () => {\r\n    return {\r\n        type: 'MOBILE_MENU_TOGGLE'\r\n    }\r\n}\r\nconst toggleFilterWindow = () => {\r\n    return {\r\n        type: 'MOBILE_FILTER_TOGGLE'\r\n    }\r\n}\r\nconst addPizzaToCart = (id) => {\r\n    return {\r\n        type: 'CART_PIZZA_ADD',\r\n        payload: id\r\n    }\r\n}\r\nconst increasePizza = (id) => {\r\n    return {\r\n        type: 'CART_PIZZA_INCREASE',\r\n        payload: id\r\n    }\r\n}\r\nconst decreasePizza = (id) => {\r\n    return {\r\n        type: 'CART_PIZZA_DECREASE',\r\n        payload: id\r\n    }\r\n}\r\n\r\nconst deletePizza = (id) => {\r\n    return {\r\n        type: 'CART_PIZZA_DELETE',\r\n        payload: id,\r\n    }\r\n}\r\nconst clearCart = () => {\r\n    return {\r\n        type: 'CART_CLEAR'\r\n    }\r\n}\r\nexport {\r\n    fetchRequest,\r\n    fetchPizzas,\r\n    fetchError,\r\n    choosePizzaType,\r\n    choosePizzaSize,\r\n    changeFilter,\r\n    changeSort,\r\n    toggleSortWindow,\r\n    toggleMenuWindow,\r\n    toggleFilterWindow,\r\n    addPizzaToCart,\r\n    increasePizza,\r\n    decreasePizza,\r\n    deletePizza,\r\n    clearCart,\r\n}","import React from 'react'\r\nimport './Filter.scss'\r\n\r\n\r\nconst Filter = ({ filterList, sortList,\r\n    currentSort, onToggleSort,\r\n    arrowClass, sortListClass,\r\n    onToggleFilter, mobileFilterClass }) => {\r\n\r\n    return <>\r\n        <section className=\"filter__mobile-trigger\"\r\n            onClick={onToggleFilter}>\r\n            Настройки пошуку\r\n    </section>\r\n        <section className={mobileFilterClass} >\r\n\r\n            <ul className=\"filter__filter-list\">\r\n                {filterList}\r\n            </ul>\r\n            <section className=\"filter__sort \" onClick={onToggleSort}>\r\n                <img src=\"./sort-arrow.svg\" className={arrowClass} />\r\n                <p className=\"filter__sort-text\">\r\n                    Сортувати за:\r\n                <span className=\"filter__sort-type\" > {currentSort}</span></p>\r\n                <ul className={sortListClass}>\r\n                    {sortList}\r\n                </ul>\r\n            </section>\r\n        </section>\r\n    </>\r\n}\r\n\r\n\r\n\r\nexport default Filter","import React from 'react'\r\nimport './Filter.scss'\r\nimport { connect } from 'react-redux'\r\nimport Filter from './Filter'\r\nimport {\r\n    changeFilter, changeSort,\r\n    toggleSortWindow,\r\n    toggleFilterWindow\r\n} from '../../actions'\r\n\r\n\r\nconst FilterContainer = ({ filter, sort,\r\n    onFilter, onSort,\r\n    sortActive, onToggleSort,\r\n    onToggleFilter, mobileFilterActive }) => {\r\n    let currentSort = sort\r\n\r\n    switch (currentSort) {\r\n        case 'popularity': currentSort = 'популярністю'; break;\r\n        case 'cost': currentSort = 'ціною'; break;\r\n        case 'alphabet': currentSort = 'алфавітом'; break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    const filterList = [\r\n        { type: 'all', label: \"Всі\" },\r\n        { type: 'meat', label: \"М'ясні\" },\r\n        { type: 'vegetable', label: \"Овочеві\" },\r\n        { type: 'spicy', label: 'Гострі' }\r\n    ]\r\n    const sortList = [\r\n        { type: 'popularity', label: \"Популярністю\" },\r\n        { type: 'cost', label: 'Ціною' },\r\n        { type: 'alphabet', label: \"Алфавітом\" }\r\n    ]\r\n\r\n    const sortListRendered = sortList.map((item, idx) => {\r\n        if (sort === item.type) return (\r\n            <li key={idx}\r\n                className=\"sort__item sort__item--active\"\r\n                onClick={() => onSort(item.type)}>\r\n                {item.label}\r\n            </li>\r\n        )\r\n        return <li key={idx}\r\n            className=\"sort__item\"\r\n            onClick={() => onSort(item.type)}>\r\n            {item.label}\r\n        </li>\r\n    });\r\n\r\n    const filterListRendered = filterList.map((item, idx) => {\r\n        if (item.type === filter) return (\r\n            <li key={idx}\r\n                onClick={() => onFilter(item.type)}\r\n                className=\"filter-list__item filter-list__item--active\">\r\n                {item.label}\r\n            </li>\r\n        )\r\n\r\n        return (\r\n            <li key={idx}\r\n                onClick={() => onFilter(item.type)}\r\n                className=\"filter-list__item\">\r\n                {item.label}\r\n            </li>\r\n        )\r\n    })\r\n\r\n    const mobileFilterClass = mobileFilterActive ?\r\n        'filter-container filter-container--active' : 'filter-container'\r\n    const sortListClass = sortActive ?\r\n        'sort__list sort__list--active' : 'sort__list'\r\n    const arrowClass = sortActive ?\r\n        'sort__arrow-disabled' : 'sort__arrow-active'\r\n\r\n\r\n\r\n    return <Filter filterList={filterListRendered}\r\n        sortList={sortListRendered}\r\n        currentSort={currentSort}\r\n        onSort={onSort}\r\n        onToggleSort={onToggleSort}\r\n        arrowClass={arrowClass}\r\n        sortListClass={sortListClass}\r\n        onToggleFilter={onToggleFilter}\r\n        mobileFilterClass={mobileFilterClass} />\r\n}\r\n\r\nconst mapStateToProps = ({ pizzaList: { filter, sort, sortActive, mobileFilterActive } }) => {\r\n    return { filter, sort, sortActive, mobileFilterActive }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onFilter: (filterKey) => dispatch(changeFilter(filterKey)),\r\n        onSort: (sortType) => dispatch(changeSort(sortType)),\r\n        onToggleSort: () => dispatch(toggleSortWindow()),\r\n        onToggleFilter: () => dispatch(toggleFilterWindow())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterContainer) ","import React from 'react'\r\nimport './Loader.scss'\r\n\r\nconst Loader = () => {\r\n    return <div className=\"lds-hourglass\"></div>\r\n}\r\n\r\nexport default Loader","import React from 'react'\r\nimport './PizzaItem.scss'\r\n\r\nconst PizzaItem = ({ name,\r\n    price, img,\r\n    thicknessSettingsRender,\r\n    sizeSettingsRender, onCartPizza,\r\n    id, renderCount }) => {\r\n\r\n\r\n    return <section className=\"pizza-item__container\">\r\n        <div className=\"pizza-item__image-block\">\r\n            <img src={img} className=\"pizza-item__image\" id=\"pizza-image\" />\r\n        </div>\r\n        <div className=\"pizza-item__title\">\r\n            <p className=\"pizza-item__text\">{name}</p>\r\n        </div>\r\n        <div className=\"pizza-settings__container pizza-item__text pizza-item__text--settings\">\r\n            {thicknessSettingsRender}\r\n            {sizeSettingsRender}\r\n\r\n        </div>\r\n        <div className=\"pizza-item__order\">\r\n            <p className=\"pizza-item__price pizza-item__text pizza-item__text--price\">{price} ₴</p>\r\n            <button onClick={() => onCartPizza(id)}\r\n                className=\"pizza-item__order-button\">\r\n                <img src=\"./plus.png\" className=\"pizza-item__plus\" />\r\n                <p className=\"pizza-item__order-text\">\r\n                    Добавити\r\n                </p>\r\n                {renderCount}\r\n            </button>\r\n        </div>\r\n    </section>\r\n}\r\n\r\nexport default PizzaItem","import React, { useEffect } from 'react'\r\nimport './PizzaItem.scss'\r\nimport PizzaItem from './PizzaItem'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { choosePizzaType, choosePizzaSize, addPizzaToCart } from '../../actions'\r\n\r\n\r\nconst PizzaItemContainer = ({ name, id,\r\n    price, img, thickness = 'thin',\r\n    size = 'small', onChooseType,\r\n    onChooseSize, onCartPizza,\r\n    cartPizzasNameList }) => {\r\n\r\n\r\n    const getPizzaCount = (cartPizzasNameList, pizzaName) => {\r\n        const currentPizzasCount = cartPizzasNameList.filter((name) => name === pizzaName)\r\n        if (currentPizzasCount.length > 0) return currentPizzasCount.length\r\n        return null\r\n    }\r\n\r\n    const thicknessSettings = (thickness) => {\r\n        let thinClass = \"pizza-settings__thickness\"\r\n        let classicClass = \"pizza-settings__thickness\"\r\n\r\n        if (thickness === 'classic') classicClass += ' pizza-settings__thickness--active'\r\n        if (thickness === 'thin') thinClass += ' pizza-settings__thickness--active'\r\n        return (\r\n            <>\r\n                <div className={thinClass} onClick={() => onChooseType(id, 'thin', name)}>тонка</div>\r\n                <div className={classicClass} onClick={() => onChooseType(id, 'classic', name)}>стандартна</div>\r\n            </>\r\n        )\r\n    }\r\n    const sizeSettings = (size) => {\r\n\r\n        let smallPizzaClass = 'pizza-settings__size';\r\n        let mediumPizzaClass = 'pizza-settings__size';\r\n        let largePizzaClass = 'pizza-settings__size';\r\n\r\n        if (size === 'small') smallPizzaClass += ' pizza-settings__size--active'\r\n        if (size === 'medium') mediumPizzaClass += ' pizza-settings__size--active'\r\n        if (size === 'large') largePizzaClass += ' pizza-settings__size--active'\r\n\r\n        return (\r\n            <>\r\n                <div className={smallPizzaClass} onClick={() => onChooseSize(id, 'small', name)}>26 см.</div>\r\n                <div className={mediumPizzaClass} onClick={() => onChooseSize(id, 'medium', name)}>30 см.</div>\r\n                <div className={largePizzaClass} onClick={() => onChooseSize(id, 'large', name)}>40 см.</div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const count = getPizzaCount(cartPizzasNameList, name)\r\n    const renderCount = count > 0 ?\r\n        <p className=\"pizza-item__order-count\">{count}</p> : null\r\n\r\n    return <PizzaItem name={name}\r\n        price={price}\r\n        img={img}\r\n        thicknessSettingsRender={thicknessSettings(thickness)}\r\n        sizeSettingsRender={sizeSettings(size)}\r\n        onCartPizza={onCartPizza}\r\n        id={id}\r\n        renderCount={renderCount}\r\n    />\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ shoppingCart: { cartPizzasKind: cartPizzasNameList } }) => {\r\n    return { cartPizzasNameList }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onChooseType: (id, type, name) => dispatch(choosePizzaType(id, type, name)),\r\n        onChooseSize: (id, size, name) => dispatch(choosePizzaSize(id, size, name)),\r\n        onCartPizza: (id) => {\r\n            dispatch(addPizzaToCart(id))\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PizzaItemContainer)","import React, { useEffect } from 'react'\r\nimport './PizzaList.scss'\r\nimport { connect } from 'react-redux'\r\n\r\nimport Loader from '../Loader/Loader'\r\nimport PizzaItem from '../PizzaItem/PizzaItemContainer'\r\nimport PizzaService from '../../pizza-service'\r\nimport { fetchPizzas, fetchError, fetchRequest, toggleMenuWindow } from '../../actions'\r\n\r\n\r\nconst pizzaService = new PizzaService()\r\n\r\nconst renderPizzas = (pizzas) => {\r\n    return pizzas.map((pizza) => {\r\n        return <PizzaItem\r\n            name={pizza.name}\r\n            price={pizza.totalPrice}\r\n            img={pizza.img}\r\n            key={pizza.id}\r\n            id={pizza.id}\r\n            thickness={pizza.settings.type}\r\n            size={pizza.settings.size}\r\n            initialId={pizza.initialId}\r\n        />\r\n    })\r\n}\r\nconst PizzaList = ({ pizzas,\r\n    sort,\r\n    fetchRequest,\r\n    pizzasLoaded,\r\n    filter,\r\n    fetchError,\r\n    loader, }) => {\r\n\r\n    switch (filter) {\r\n        case 'all': filter = 'Всі'; break;\r\n        case 'meat': filter = \"М'ясні\"; break;\r\n        case 'vegetable': filter = 'Овочеві'; break;\r\n        case 'spicy': filter = 'Гострі'; break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchRequest()\r\n        pizzaService.getPizzas()\r\n            .then((data) => pizzasLoaded(data))\r\n            .catch((err) => fetchError(err))\r\n    }, [filter, sort])\r\n\r\n    if (loader) return <Loader />\r\n\r\n    return <main className=\"pizza-list__container\">\r\n        <section className=\"pizza-list__header\">\r\n            {filter} піцци\r\n        </section>\r\n        <section className=\"pizza-list\">\r\n            {renderPizzas(pizzas)}\r\n\r\n        </section>\r\n    </main>\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        pizzasLoaded: (data) => dispatch(fetchPizzas(data)),\r\n        fetchError: (err) => dispatch(fetchError(err)),\r\n        fetchRequest: () => dispatch(fetchRequest()),\r\n\r\n    }\r\n}\r\nconst mapStateToProps = ({ pizzaList: { filterPizzas: pizzas, filter, loader, sort } }) => {\r\n    return {\r\n        pizzas, filter, loader, sort\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PizzaList)","export default class PizzaService {\r\n    pizzas = [\r\n        {\r\n            name: \"Чізбургер-Піцца\",\r\n            img: './chizburger-pizza.png',\r\n            markup: {\r\n                thin: 0,\r\n                classic: 30,\r\n                small: 0,\r\n                medium: 15,\r\n                large: 45,\r\n            },\r\n            settings: {\r\n                size: 'small',\r\n                type: 'thin'\r\n            },\r\n            price: 101,\r\n            totalPrice: 101,\r\n            id: 1,\r\n            class: 'meat',\r\n            popularity: 0.3\r\n        },\r\n        {\r\n            name: \"Сирна\",\r\n            img: './cheeze.png',\r\n            markup: {\r\n                thin: 0,\r\n                classic: 26,\r\n                small: 0,\r\n                medium: 20,\r\n                large: 38,\r\n            },\r\n            settings: {\r\n                size: 'small',\r\n                type: 'thin',\r\n            },\r\n            price: 99,\r\n            totalPrice: 99,\r\n            id: 2,\r\n            class: 'vegetable',\r\n            popularity: 0.5,\r\n        },\r\n        {\r\n            name: \"Криветки по-азіатськи\",\r\n            img: './shrimp.png',\r\n            markup: {\r\n                thin: 0,\r\n                classic: 41,\r\n                small: 0,\r\n                medium: 29,\r\n                large: 65,\r\n            },\r\n            settings: {\r\n                size: 'small',\r\n                type: 'thin'\r\n            },\r\n            price: 95,\r\n            totalPrice: 95,\r\n            id: 3,\r\n            class: 'meat',\r\n            popularity: 0.99,\r\n        },\r\n        {\r\n            name: \"Сирне курча\",\r\n            img: './cheeze-chicken.png',\r\n            markup: {\r\n                thin: 0,\r\n                classic: 30,\r\n                small: 0,\r\n                medium: 15,\r\n                large: 25,\r\n            },\r\n            settings: {\r\n                size: 'small',\r\n                type: 'thin'\r\n            },\r\n            price: 95,\r\n            totalPrice: 95,\r\n            id: 4,\r\n            class: ['spicy', 'meat'],\r\n            popularity: 0.6\r\n        },\r\n    ]\r\n    getPizzas() {\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => resolve(this.pizzas), 600)\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport Header from '../Header/Header'\r\nimport Filter from '../Filter/FilterContainer'\r\nimport PizzaList from '../PizzaList/PizzaList'\r\n\r\nconst MainPage = () => {\r\n    return <>\r\n        <Header />\r\n        <Filter />\r\n        <PizzaList />\r\n    </>\r\n}\r\nexport default MainPage","import React from 'react'\r\nimport './CartItem.scss'\r\nimport { increasePizza, decreasePizza, deletePizza } from '../../actions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst CartItem = ({\r\n    name, total,\r\n    img,\r\n    settings,\r\n    count, id,\r\n    onIncrease,\r\n    onDecrease,\r\n    onDelete, }) => {\r\n\r\n    let size = settings.size\r\n    let type = settings.type\r\n\r\n    switch (settings.type) {\r\n        case 'thin': type = 'Тонке тісто'; break;\r\n        case 'classic': type = 'Товсте тісто'; break;\r\n        default: break;\r\n    }\r\n    switch (settings.size) {\r\n        case 'small': size = '26 см.'; break;\r\n        case 'medium': size = '30 см.'; break;\r\n        case 'large': size = '40 см.'; break;\r\n        default: break;\r\n    }\r\n    return (\r\n        <div className=\"cart-item\">\r\n            <div className=\"cart-item__info-block\">\r\n                <img src={img} className=\"cart-item__img\" />\r\n                <div className=\"cart-item__info\">\r\n                    <p className=\"cart-page__text\">{name}</p>\r\n                    <p className=\"cart-page__text cart-page__text--small_gray\">\r\n                        {`${type}, ${size}`}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div className=\"cart-item__counter-block\">\r\n                <i onClick={() => onDecrease(id)}\r\n                    className=\"fas fa-minus-circle cart-item__counter-icon\"></i>\r\n                <p className=\"cart-page__text cart-item__count\">{count}</p>\r\n                <i onClick={() => onIncrease(id)}\r\n                    className=\"fas fa-plus-circle cart-item__counter-icon\"></i>\r\n            </div>\r\n            <div className=\"cart-item__price\">\r\n                <p className=\"cart-page__text\">{total} ₴</p>\r\n            </div>\r\n            <div className=\"cart-item__close\">\r\n                <i onClick={() => onDelete(id)}\r\n                    className=\"far fa-times-circle cart-item__close-icon\"></i>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onIncrease: (id) => dispatch(increasePizza(id)),\r\n        onDecrease: (id) => dispatch(decreasePizza(id)),\r\n        onDelete: (id) => dispatch(deletePizza(id))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(CartItem)","import React from 'react'\r\nimport './CartList.scss'\r\nimport CartItem from '../CartItem/CartItem'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { clearCart } from '../../actions'\r\n\r\n\r\nconst CartList = ({ cartPizzas, total,\r\n    cartCount, onClearCart }) => {\r\n\r\n    const renderCartPizzas = (cartPizzas) => {\r\n        return cartPizzas.map((pizza) => {\r\n            return <CartItem {...pizza} key={pizza.id} />\r\n        })\r\n    }\r\n\r\n    return <section className=\"cart-page\">\r\n        <section className=\"cart-page__header\">\r\n            <div className=\"cart-page__title\">\r\n                <i className=\"fas fa-shopping-cart cart-page__cart-icon\"></i>\r\n                <p className=\"cart-page__text cart-page__text--title\">Корзина</p>\r\n            </div>\r\n            <div onClick={() => onClearCart()}\r\n                className=\"cart-page__clear\">\r\n                <span className=\"cart-page__clear-underscore\"></span>\r\n                <i className=\"far fa-trash-alt cart-page__trash-icon\"></i>\r\n                <p className=\"cart-page__text cart-page__text--small_gray\">\r\n                    Очистити корзину\r\n                </p>\r\n            </div>\r\n        </section>\r\n        <section className=\"cart-page__cart-list\">\r\n\r\n            {renderCartPizzas(cartPizzas)}\r\n\r\n        </section>\r\n        <section className=\"cart-page__info-block\">\r\n            <div className=\"cart-page__text-block\">\r\n                <span className=\"cart-page__text cart-page__text--thin\">Всього піц: </span>\r\n                <span className=\"cart-page__text\">{cartCount} шт</span>\r\n            </div>\r\n            <div className=\"cart-page__text-block\">\r\n                <span className=\"cart-page__text cart-page__text--thin\">Сума заказу: </span>\r\n                <span className=\"cart-page__text cart-page__text--orange\">{total} ₴</span>\r\n            </div>\r\n        </section>\r\n        <section className=\"cart-page__buttons-block\">\r\n            <Link to=\"/\">\r\n                <button className=\"cart-page__nav-button\">\r\n                    <span className=\"cart-page__text cart-page__text--small_gray\">\r\n                        Повернутись назад\r\n                    </span>\r\n                </button>\r\n            </Link>\r\n            <button className=\"cart-page__nav-button cart-page__nav-button--order\">\r\n                Оплатити\r\n            </button>\r\n        </section>\r\n    </section>\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onClearCart: () => dispatch(clearCart())\r\n    }\r\n}\r\nconst mapStateToProps = ({ shoppingCart: { cartPizzas, total, cartCount } }) => {\r\n    return { cartPizzas, total, cartCount }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CartList)","import React from 'react'\r\n\r\nimport CartList from '../CartList/CartList'\r\nimport Header from '../Header/Header'\r\nimport { Redirect } from 'react-router';\r\nimport { connect } from 'react-redux'\r\n\r\nconst CartPage = ({ emptyCart }) => {\r\n\r\n    if (emptyCart) return <Redirect to=\"/cart-empty\" />\r\n\r\n    return (\r\n        <>\r\n            <Header simpleHeader />\r\n            <CartList />\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ shoppingCart: { cartPizzas } }) => {\r\n    return {\r\n        emptyCart: cartPizzas.length === 0\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CartPage)","import React from 'react'\r\nimport './CartFailure.scss'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst CartFailure = ({ logout }) => {\r\n\r\n    let title = 'Корзина пуста 😕'\r\n    let subtitle = 'Схоже, що ви ще не вибрали жодної піци. Для того, щоб вибрати піцу, поверністья на головну сторінку'\r\n    if (logout) {\r\n        title = \"Ви не ввійшли у свій аккаунт 😕\"\r\n        subtitle = 'Схоже, що ви не авторизувались, для того, щоб увійти, натисність кнопку вгорі'\r\n    }\r\n\r\n    return <div className=\"cart-failure\">\r\n        <h2 className=\"cart-failure__title\">\r\n            {title}\r\n        </h2>\r\n        <p className=\"cart-failure__sub-title\">\r\n            {subtitle}\r\n        </p>\r\n        <img src=\"empty-cart.png\" className=\"cart-failure__img\" />\r\n\r\n        <Link to=\"/\">\r\n            <button className=\"cart-failure__back\">Повернутися назад</button>\r\n        </Link>\r\n\r\n    </div>\r\n}\r\n\r\nexport default CartFailure","import React from 'react'\r\n\r\nimport CartFailure from '../CartFailure/CartFailure'\r\nimport Header from '../Header/Header'\r\n\r\nconst CartFailurePage = ({ logout }) => {\r\n    return (\r\n        <>\r\n            <Header simpleHeader />\r\n            <CartFailure logout={logout} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CartFailurePage","import React from 'react';\nimport './App.scss';\nimport MainPage from '../Pages/MainPage'\nimport CartPage from '../Pages/CartPage'\nimport CartFailurePage from '../Pages/CartFailurePage';\n\nimport { Route } from 'react-router-dom'\n\nconst App = () => {\n  return <div className=\"wrapper\">\n    <Route path=\"/\" component={MainPage} exact />\n    <Route path=\"/cart\" component={CartPage} exact />\n    <Route path=\"/cart-empty\" component={CartFailurePage} exact />\n    <Route path=\"/cart-login\" render={() => <CartFailurePage logout />} exact />\n  </div>\n}\n\nexport default App","const changeThicknessType = (state, id, type) => {\r\n    const { pizzaList: { filterPizzas } } = state\r\n    return filterPizzas.map((pizza) => {\r\n        if (pizza.id === id) {\r\n            const { size } = pizza.settings\r\n            const { markup, price } = pizza\r\n            const newId = `${pizza.initialId + type + size}`\r\n            return {\r\n                ...pizza,\r\n                totalPrice: price + markup[type] + markup[size],\r\n                settings: { type: type, size: size },\r\n                id: newId\r\n            }\r\n        }\r\n        return pizza\r\n    })\r\n}\r\n\r\nconst changeSizeSettings = (state, id, size) => {\r\n    const { pizzaList: { filterPizzas } } = state\r\n    return filterPizzas.map((pizza) => {\r\n        if (pizza.id === id) {\r\n            const { type } = pizza.settings\r\n            const { markup, price } = pizza\r\n            const newId = `${pizza.initialId + type + size}`\r\n            return {\r\n                ...pizza,\r\n                totalPrice: price + markup[type] + markup[size],\r\n                settings: { type: type, size: size },\r\n                id: newId\r\n            }\r\n        }\r\n        return pizza\r\n    })\r\n}\r\n\r\nconst filterItems = (listToFilter, filter) => {\r\n\r\n    const uniquePizzaId = listToFilter.map((item) => {\r\n        let { id, settings: { type, size } } = item\r\n        let newId = `${id + type + size}`\r\n        return {\r\n            ...item,\r\n            id: newId,\r\n            initialId: id,\r\n        }\r\n    })\r\n    if (filter === 'all') return uniquePizzaId\r\n    return uniquePizzaId.filter((pizza) => pizza.class.includes(filter))\r\n}\r\n\r\nconst sortItems = (listToSort, sortType) => {\r\n    if (sortType === 'cost') return listToSort.sort((a, b) => a.price > b.price ? 1 : -1);\r\n    if (sortType === 'popularity') return listToSort.sort((a, b) => a.popularity < b.popularity ? 1 : -1);\r\n    if (sortType === 'alphabet') return listToSort.sort((a, b) => a.name > b.name ? 1 : -1);\r\n    return listToSort\r\n}\r\n\r\n\r\n\r\n\r\nconst updatePizzaList = (state, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case 'FETCH_PIZZAS_REQUEST':\r\n            return {\r\n                ...state.pizzaList,\r\n                loader: true,\r\n            }\r\n        case 'FETCH_PIZZAS_SUCCES':\r\n            const pizzas = action.payload\r\n            const { sort, filter } = state.pizzaList\r\n            const filterPizzasList = filterItems(pizzas, filter)\r\n            const sortedAndFilteredList = sortItems(filterPizzasList, sort)\r\n\r\n            return {\r\n                ...state.pizzaList,\r\n                pizzas: pizzas,\r\n                filterPizzas: sortedAndFilteredList,\r\n                loader: false,\r\n            }\r\n        case 'FETCH_PIZZAS_FAILURE':\r\n            return {\r\n                ...state.pizzaList,\r\n                error: action.payload\r\n            }\r\n        case 'TYPE_PIZZA_CHOOSE':\r\n            const { id: pizzaIdType } = action.payload\r\n            const { type } = action.payload\r\n            const updatedTypeList = changeThicknessType(state, pizzaIdType, type)\r\n\r\n            return {\r\n                ...state.pizzaList,\r\n                filterPizzas: updatedTypeList,\r\n            }\r\n        case 'SIZE_PIZZA_CHOOSE':\r\n            const { id: pizzaIdSize } = action.payload\r\n            const { size } = action.payload\r\n            const updatedSizeList = changeSizeSettings(state, pizzaIdSize, size)\r\n            return {\r\n                ...state.pizzaList,\r\n                filterPizzas: updatedSizeList,\r\n            }\r\n\r\n        case 'FILTER_CHANGE':\r\n            const pizzaClass = action.payload\r\n            let listToFilter = state.pizzaList.pizzas\r\n            const filteredList = filterItems(listToFilter, pizzaClass)\r\n            return {\r\n                ...state.pizzaList,\r\n                filter: pizzaClass,\r\n                filterPizzas: filteredList\r\n            }\r\n        case 'SORT_CHANGE':\r\n            const sortType = action.payload;\r\n            const listToSort = state.pizzaList.filterPizzas.map((e) => e)\r\n            const sortedItems = sortItems(listToSort, sortType)\r\n            return {\r\n                ...state.pizzaList,\r\n                sort: sortType,\r\n                filterPizzas: sortedItems\r\n            }\r\n        case 'SORT_TOGGLE':\r\n            const { sortActive } = state.pizzaList\r\n            return {\r\n                ...state.pizzaList,\r\n                sortActive: !sortActive\r\n            }\r\n        case 'MOBILE_FILTER_TOGGLE':\r\n            const { mobileFilterActive } = state.pizzaList\r\n            return {\r\n                ...state.pizzaList,\r\n                sortActive: false,\r\n                mobileFilterActive: !mobileFilterActive\r\n            }\r\n\r\n        default: return state.pizzaList\r\n    }\r\n}\r\n\r\nexport default updatePizzaList","const createCartPizza = (state, pizzaId) => {\r\n    const { pizzaList: { filterPizzas } } = state\r\n    const selectedPizza = filterPizzas.find(({ id }) => id === pizzaId)\r\n\r\n    return {\r\n        name: selectedPizza.name,\r\n        total: selectedPizza.totalPrice,\r\n        settings: selectedPizza.settings,\r\n        img: selectedPizza.img,\r\n        count: 1,\r\n        id: selectedPizza.id,\r\n    }\r\n}\r\nconst isPizzaCartedChecker = (state, newCartedPizza) => {\r\n    const { id, settings: { type, size } } = newCartedPizza\r\n    const { cartPizzas } = state.shoppingCart\r\n    return cartPizzas\r\n        .find((pizza) => pizza.id === id\r\n            && pizza.settings.type === type\r\n            && pizza.settings.size === size)\r\n}\r\n\r\nconst increaseCartPizza = (state, cartedPizzaId, pizzaItem) => {\r\n    const { shoppingCart: { cartCount, total, cartPizzas } } = state\r\n    const newCartCount = cartCount + 1\r\n    const pizzaPricePerPiece = pizzaItem.total / pizzaItem.count\r\n    const newTotal = total + pizzaPricePerPiece\r\n\r\n    const updatedList = cartPizzas.map((pizza) => {\r\n        if (pizza.id === cartedPizzaId) return (\r\n            {\r\n                ...pizza,\r\n                count: ++pizza.count,\r\n                total: pizzaPricePerPiece + pizza.total\r\n            }\r\n        )\r\n        return pizza\r\n    })\r\n\r\n    return {\r\n        ...state.shoppingCart,\r\n        cartPizzas: updatedList,\r\n        total: newTotal,\r\n        cartCount: newCartCount,\r\n        cartPizzasKind: [\r\n            ...state.shoppingCart.cartPizzasKind,\r\n            pizzaItem.name\r\n        ]\r\n    }\r\n}\r\n\r\nconst decreaseCartPizza = (state, cartedPizzaId, pizzaItem) => {\r\n    const { shoppingCart: { cartCount, total, cartPizzas, cartPizzasKind } } = state\r\n\r\n    const newCartCount = cartCount - 1\r\n    const pizzaPricePerPiece = pizzaItem.total / pizzaItem.count\r\n    const newTotal = total - pizzaPricePerPiece\r\n\r\n    const updatedList = cartPizzas\r\n        .map((pizza) => {\r\n            if (pizza.id === cartedPizzaId) {\r\n                return {\r\n                    ...pizza,\r\n                    count: --pizza.count,\r\n                    total: pizza.total - pizzaPricePerPiece\r\n                }\r\n            }\r\n            return pizza\r\n        })\r\n    const newPizzaKindList = cartPizzasKind.map(e => e)\r\n    const indexOfPizzaKind = cartPizzasKind.lastIndexOf(pizzaItem.name)\r\n    if (indexOfPizzaKind > -1) newPizzaKindList.splice(indexOfPizzaKind, 1)\r\n\r\n    return {\r\n        ...state.shoppingCart,\r\n        cartPizzas: updatedList,\r\n        cartCount: newCartCount,\r\n        total: newTotal,\r\n        cartPizzasKind: newPizzaKindList\r\n    }\r\n}\r\n\r\nconst deletePizza = (state, deletedPizza, deletedPizzaId) => {\r\n    const { shoppingCart: { cartCount, total, cartPizzas, cartPizzasKind } } = state\r\n\r\n    const newList = cartPizzas.filter(({ id }) => id !== deletedPizzaId)\r\n    const newPizzaKindList = cartPizzasKind.map(e => e)\r\n    const indexOfPizzaKind = cartPizzasKind.indexOf(deletedPizza.name)\r\n    if (indexOfPizzaKind > -1) newPizzaKindList.splice(indexOfPizzaKind, deletedPizza.count)\r\n\r\n    return {\r\n        ...state.shoppingCart,\r\n        cartPizzas: newList,\r\n        total: total - deletedPizza.total,\r\n        cartCount: cartCount - deletedPizza.count,\r\n        cartPizzasKind: newPizzaKindList,\r\n    }\r\n}\r\n\r\n\r\nconst updateShoppingCart = (state, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n\r\n        case 'CART_PIZZA_ADD':\r\n            const actionAddPizzaId = action.payload\r\n            const newCartedPizza = createCartPizza(state, actionAddPizzaId)\r\n            const isPizzaCarted = isPizzaCartedChecker(state, newCartedPizza)\r\n\r\n            if (isPizzaCarted) return increaseCartPizza(state, actionAddPizzaId, newCartedPizza)\r\n\r\n            else {\r\n                const newCartCount = state.shoppingCart.cartCount + 1\r\n                const newTotal = state.shoppingCart.total + newCartedPizza.total\r\n                return {\r\n                    ...state.shoppingCart,\r\n                    cartCount: newCartCount,\r\n                    total: newTotal,\r\n                    cartPizzas: [\r\n                        ...state.shoppingCart.cartPizzas,\r\n                        newCartedPizza,\r\n                    ],\r\n                    cartPizzasKind: [\r\n                        ...state.shoppingCart.cartPizzasKind,\r\n                        newCartedPizza.name\r\n                    ],\r\n                }\r\n            }\r\n\r\n        case 'CART_PIZZA_INCREASE':\r\n            const { cartPizzas } = state.shoppingCart\r\n\r\n            const increaseId = action.payload\r\n            const pizzaToInc = cartPizzas.find(({ id }) => id === increaseId)\r\n\r\n            return increaseCartPizza(state, increaseId, pizzaToInc)\r\n\r\n        case 'CART_PIZZA_DECREASE': {\r\n            const { cartPizzas } = state.shoppingCart\r\n\r\n            const decreasePizzaId = action.payload\r\n            const pizzaToDec = cartPizzas.find(({ id }) => id === decreasePizzaId)\r\n\r\n            if (pizzaToDec.count <= 1) return deletePizza(state, pizzaToDec, decreasePizzaId)\r\n            return decreaseCartPizza(state, decreasePizzaId, pizzaToDec)\r\n        }\r\n\r\n        case 'CART_PIZZA_DELETE': {\r\n            const { cartPizzas } = state.shoppingCart\r\n\r\n            const deletedPizzaId = action.payload;\r\n            const deletedPizza = cartPizzas.find(({ id }) => id === deletedPizzaId)\r\n\r\n            return deletePizza(state, deletedPizza, deletedPizzaId)\r\n        }\r\n\r\n        case 'CART_CLEAR': {\r\n            return {\r\n                ...state.shoppingCart,\r\n                cartCount: 0,\r\n                total: 0,\r\n                cartPizzasKind: [],\r\n                cartPizzas: [],\r\n            }\r\n        }\r\n        default: return state.shoppingCart\r\n    }\r\n}\r\n\r\nexport default updateShoppingCart","import updatePizzaList from './pizza-list'\r\nimport updateShoppingCart from './shopping-cart'\r\n\r\nconst initState = {\r\n    mobileMenuActive: false,\r\n    shoppingCart: {\r\n        cartPizzas: [],\r\n        cartCount: 0,\r\n        total: 0,\r\n        cartPizzasKind: [],\r\n    },\r\n    pizzaList: {\r\n        pizzas: [],\r\n        filterPizzas: [],\r\n        filter: \"all\",\r\n        sort: \"popularity\",\r\n        sortActive: false,\r\n        mobileFilterActive: false,\r\n        loader: true,\r\n        error: null,\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'MOBILE_MENU_TOGGLE':\r\n            return {\r\n                ...state,\r\n                mobileMenuActive: !state.mobileMenuActive\r\n            }\r\n        default:\r\n            return {\r\n                ...state,\r\n                pizzaList: updatePizzaList(state, action),\r\n                shoppingCart: updateShoppingCart(state, action)\r\n            }\r\n    }\r\n}\r\n\r\nexport default reducer\r\n\r\n","import { createStore } from 'redux'\r\nimport reducer from './reducers'\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport { Provider } from 'react-redux'\nimport { HashRouter as Router } from 'react-router-dom'\nimport store from './store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}