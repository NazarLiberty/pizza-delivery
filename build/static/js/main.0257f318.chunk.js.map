{"version":3,"sources":["components/Header/Header.js","actions.js","components/Filter/Filter.js","components/Filter/FilterContainer.js","components/Loader/Loader.js","components/PizzaItem/PizzaItem.js","components/PizzaList/PizzaList.js","pizza-service.js","components/Pages/MainPage.js","components/CartItem/CartItem.js","components/CartList/CartList.js","components/Pages/CartPage.js","components/CartFailure/CartFailure.js","components/Pages/CartFailurePage.js","components/App/App.js","reducer.js","store.js","index.js"],"names":["Header","cartButtonRender","onToggleMenu","mobileMenuClass","className","onClick","src","to","connect","mobileMenuActive","total","cartCount","dispatch","type","simpleHeader","Filter","filterList","sortList","currentSort","onToggleSort","arrowClass","sortListClass","onToggleFilter","mobileFilterClass","filter","sort","sortActive","mobileFilterActive","onFilter","filterKey","payload","onSort","sortType","changeSort","sortListRendered","label","map","item","idx","key","filterListRendered","Loader","PizzaItem","name","price","img","thicknessSettingsRender","sizeSettingsRender","onCartPizza","id","renderCount","cartPizzas","cartPizzasKind","onChooseType","choosePizzaType","onChooseSize","size","choosePizzaSize","addPizzaToCart","thickness","count","pizzaId","currentPizza","length","getPizzaCount","thinClass","classicClass","thicknessSettings","smallPizzaClass","mediumPizzaClass","largePizzaClass","sizeSettings","pizzaService","pizzas","markup","thin","classic","small","medium","large","settings","totalPrice","class","popularity","Promise","resolve","setTimeout","state","filterPizzas","loader","pizzasLoaded","data","fetchError","err","fetchRequest","useEffect","getPizzas","then","catch","pizza","renderPizzas","MainPage","onIncrease","increasePizza","renderCartPizzas","emptyCart","CartFailure","title","subtitle","logout","CartFailurePage","App","path","component","exact","CartPage","render","initState","error","changeThicknessType","changeSizeSettings","filterItems","listToFilter","includes","sortItems","listToSort","a","b","createCartPizza","selectedPizza","find","initId","isPizzaCartedChecker","newCartedPizza","increaseCartPizza","newCartCount","newTotal","updatedList","reducer","action","filterPizzasList","sortedAndFilteredList","pizzaIdType","updatedType","pizzaIdSize","updatedSize","pizzaClass","filteredList","e","sortedItems","actionAddPizzaId","isPizzaCarted","console","log","store","createStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0257f318.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Header.scss'\r\nimport { connect } from 'react-redux'\r\nimport { toggleMenuWindow } from '../../actions'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst HeaderContainer = ({\r\n    simpleHeader,\r\n    onToggleMenu,\r\n    mobileMenuActive,\r\n    total, cartCount\r\n}) => {\r\n\r\n    let mobileMenuClass = mobileMenuActive ?\r\n        'header__buttons-block header__buttons-block--active' : 'header__buttons-block'\r\n\r\n    const cartButtonRender = simpleHeader ?\r\n        null : (\r\n            <div className=\"cart\">\r\n                <div className=\"cart__price\">{total}₴</div>\r\n                <div className=\"cart__line\"></div>\r\n                <div className=\"cart__count\">\r\n                    <i className=\"fas fa-shopping-cart cart__icon\"></i>\r\n                    {cartCount}\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    return <Header\r\n        onToggleMenu={onToggleMenu}\r\n        mobileMenuClass={mobileMenuClass}\r\n        cartButtonRender={cartButtonRender}\r\n    />\r\n}\r\n\r\nconst Header = ({\r\n    cartButtonRender,\r\n    onToggleMenu,\r\n    mobileMenuClass,\r\n}) => {\r\n    return <header className=\"header\">\r\n        <div className=\"header__burger\"\r\n            onClick={() => onToggleMenu()}>\r\n            XXX\r\n        </div>\r\n\r\n\r\n        <section className=\"header__logo-block\">\r\n            <img src=\"./logo.svg\" className=\"header__logo\" />\r\n            <Link to=\"/\">\r\n                <section className=\"header__text-block\">\r\n                    <h1 className=\"header__title\">Pizza Delivery</h1>\r\n                    <p className=\"header__subtitle\">Найсмачніша піцца у нашому вимірі</p>\r\n                </section>\r\n            </Link>\r\n        </section>\r\n\r\n\r\n        <section className={mobileMenuClass}>\r\n            <section className=\"header__close\" onClick={() => onToggleMenu()}> X </section>\r\n            <section className=\"header__login\">Увійти</section>\r\n\r\n            <Link to=\"/cart\">\r\n                {cartButtonRender}\r\n            </Link>\r\n\r\n        </section>\r\n    </header>\r\n}\r\n\r\nconst mapStateToProps = ({ mobileMenuActive, total, cartCount }) => {\r\n    return { mobileMenuActive, total, cartCount }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onToggleMenu: () => dispatch(toggleMenuWindow())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderContainer)","const fetchPizzas = (pizzas) => {\r\n    return {\r\n        type: 'FETCH_PIZZAS_SUCCES',\r\n        payload: pizzas\r\n    }\r\n}\r\nconst fetchError = (err) => {\r\n    return {\r\n        type: 'FETCH_PIZZAS_FAILURE',\r\n        payload: err\r\n    }\r\n}\r\nconst fetchRequest = () => {\r\n    return {\r\n        type: 'FETCH_PIZZAS_REQUEST'\r\n    }\r\n}\r\n\r\nconst choosePizzaType = (id, type) => {\r\n    return {\r\n        type: 'TYPE_PIZZA_CHOOSE',\r\n        payload: {\r\n            id,\r\n            type\r\n        }\r\n    }\r\n}\r\n\r\nconst choosePizzaSize = (id, size) => {\r\n    return {\r\n        type: 'SIZE_PIZZA_CHOOSE',\r\n        payload: {\r\n            id,\r\n            size\r\n        }\r\n    }\r\n}\r\n\r\nconst changeFilter = (filter) => {\r\n    return {\r\n        type: 'FILTER_CHANGE',\r\n        payload: filter,\r\n    }\r\n}\r\nconst changeSort = (sortType) => {\r\n    return {\r\n        type: 'SORT_CHANGE',\r\n        payload: sortType,\r\n    }\r\n}\r\nconst toggleSortWindow = () => {\r\n    return {\r\n        type: 'SORT_TOGGLE'\r\n    }\r\n}\r\nconst toggleMenuWindow = () => {\r\n    return {\r\n        type: 'MOBILE_MENU_TOGGLE'\r\n    }\r\n}\r\nconst toggleFilterWindow = () => {\r\n    return {\r\n        type: 'MOBILE_FILTER_TOGGLE'\r\n    }\r\n}\r\nconst addPizzaToCart = (id) => {\r\n    return {\r\n        type: 'CART_PIZZA_ADD',\r\n        payload: id\r\n    }\r\n}\r\nconst increasePizza = (id) => {\r\n    return {\r\n        type: 'CART_PIZZA_INCREASE',\r\n        payload: id\r\n    }\r\n}\r\nexport {\r\n    fetchRequest,\r\n    fetchPizzas,\r\n    fetchError,\r\n    choosePizzaType,\r\n    choosePizzaSize,\r\n    changeFilter,\r\n    changeSort,\r\n    toggleSortWindow,\r\n    toggleMenuWindow,\r\n    toggleFilterWindow,\r\n    addPizzaToCart,\r\n    increasePizza,\r\n}","import React from 'react'\r\nimport './Filter.scss'\r\n\r\n\r\nconst Filter = ({ filterList, sortList,\r\n    currentSort, onToggleSort,\r\n    arrowClass, sortListClass,\r\n    onToggleFilter, mobileFilterClass }) => {\r\n\r\n    return <>\r\n        <section className=\"filter__mobile-trigger\"\r\n            onClick={onToggleFilter}>\r\n            Настройки пошуку\r\n    </section>\r\n        <section className={mobileFilterClass} >\r\n\r\n            <ul className=\"filter__filter-list\">\r\n                {filterList}\r\n            </ul>\r\n            <section className=\"filter__sort \" onClick={onToggleSort}>\r\n                <img src=\"./sort-arrow.svg\" className={arrowClass} />\r\n                <p className=\"filter__sort-text\">\r\n                    Сортувати за:\r\n                <span className=\"filter__sort-type\" > {currentSort}</span></p>\r\n                <ul className={sortListClass}>\r\n                    {sortList}\r\n                </ul>\r\n            </section>\r\n        </section>\r\n    </>\r\n}\r\n\r\n\r\n\r\nexport default Filter","import React from 'react'\r\nimport './Filter.scss'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport Filter from './Filter'\r\nimport {\r\n    changeFilter, changeSort,\r\n    toggleSortWindow,\r\n    toggleFilterWindow\r\n} from '../../actions'\r\n\r\n\r\nconst FilterContainer = ({ filter, sort,\r\n    onFilter, onSort,\r\n    sortActive, onToggleSort,\r\n    onToggleFilter, mobileFilterActive }) => {\r\n    let currentSort = sort\r\n\r\n    switch (currentSort) {\r\n        case 'popularity': currentSort = 'популярністю'; break;\r\n        case 'cost': currentSort = 'ціною'; break;\r\n        case 'alphabet': currentSort = 'алфавітом'; break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    const filterList = [\r\n        { type: 'all', label: \"Всі\" },\r\n        { type: 'meat', label: \"М'ясні\" },\r\n        { type: 'vegetable', label: \"Овочеві\" },\r\n        { type: 'spicy', label: 'Гострі' }\r\n    ]\r\n    const sortList = [\r\n        { type: 'popularity', label: \"Популярністю\" },\r\n        { type: 'cost', label: 'Ціною' },\r\n        { type: 'alphabet', label: \"Алфавітом\" }\r\n    ]\r\n\r\n    const sortListRendered = sortList.map((item, idx) => {\r\n        if (sort === item.type) return (\r\n            <li key={idx}\r\n                className=\"sort__item sort__item--active\"\r\n                onClick={() => onSort(item.type)}>\r\n                {item.label}\r\n            </li>\r\n        )\r\n        return <li key={idx}\r\n            className=\"sort__item\"\r\n            onClick={() => onSort(item.type)}>\r\n            {item.label}\r\n        </li>\r\n    });\r\n\r\n    const filterListRendered = filterList.map((item, idx) => {\r\n        if (item.type === filter) return (\r\n            <li key={idx}\r\n                onClick={() => onFilter(item.type)}\r\n                className=\"filter-list__item filter-list__item--active\">\r\n                {item.label}\r\n            </li>\r\n        )\r\n\r\n        return (\r\n            <li key={idx}\r\n                onClick={() => onFilter(item.type)}\r\n                className=\"filter-list__item\">\r\n                {item.label}\r\n            </li>\r\n        )\r\n    })\r\n\r\n    const mobileFilterClass = mobileFilterActive ?\r\n        'filter-container filter-container--active' : 'filter-container'\r\n    const sortListClass = sortActive ?\r\n        'sort__list sort__list--active' : 'sort__list'\r\n    const arrowClass = sortActive ?\r\n        'sort__arrow-disabled' : 'sort__arrow-active'\r\n\r\n\r\n\r\n    return <Filter filterList={filterListRendered}\r\n        sortList={sortListRendered}\r\n        currentSort={currentSort}\r\n        onSort={onSort}\r\n        onToggleSort={onToggleSort}\r\n        arrowClass={arrowClass}\r\n        sortListClass={sortListClass}\r\n        onToggleFilter={onToggleFilter}\r\n        mobileFilterClass={mobileFilterClass} />\r\n}\r\n\r\nconst mapStateToProps = ({ filter, sort, sortActive, mobileFilterActive }) => {\r\n    return { filter, sort, sortActive, mobileFilterActive }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onFilter: (filterKey) => dispatch(changeFilter(filterKey)),\r\n        onSort: (sortType) => dispatch(changeSort(sortType)),\r\n        onToggleSort: () => dispatch(toggleSortWindow()),\r\n        onToggleFilter: () => dispatch(toggleFilterWindow())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterContainer) ","import React from 'react'\r\nimport './Loader.scss'\r\n\r\nconst Loader = () => {\r\n    return <div className=\"lds-hourglass\"></div>\r\n}\r\n\r\nexport default Loader","import React, { useEffect } from 'react'\r\nimport './PizzaItem.scss'\r\nimport { connect } from 'react-redux'\r\nimport { choosePizzaType, choosePizzaSize, addPizzaToCart } from '../../actions'\r\n\r\n\r\n\r\nconst PizzaItemContainer = ({ name, id,\r\n    price, img, thickness = 'thin',\r\n    size = 'small', onChooseType,\r\n    onChooseSize, onCartPizza,\r\n    cartPizzas }) => {\r\n\r\n\r\n    const getPizzaCount = (cartPizzas, pizzaId) => {\r\n        const currentPizza = cartPizzas.filter((id) => id === pizzaId)\r\n        if (currentPizza.length > 0) return currentPizza.length\r\n        return null\r\n    }\r\n\r\n    const thicknessSettings = (thickness) => {\r\n        let thinClass = \"pizza-settings__thickness\"\r\n        let classicClass = \"pizza-settings__thickness\"\r\n\r\n        if (thickness === 'classic') classicClass += ' pizza-settings__thickness--active'\r\n        if (thickness === 'thin') thinClass += ' pizza-settings__thickness--active'\r\n        return (\r\n            <>\r\n                <div className={thinClass} onClick={() => onChooseType(id, 'thin')}>тонка</div>\r\n                <div className={classicClass} onClick={() => onChooseType(id, 'classic')}>стандартна</div>\r\n            </>\r\n        )\r\n    }\r\n    const sizeSettings = (size) => {\r\n\r\n        let smallPizzaClass = 'pizza-settings__size';\r\n        let mediumPizzaClass = 'pizza-settings__size';\r\n        let largePizzaClass = 'pizza-settings__size';\r\n\r\n        if (size === 'small') smallPizzaClass += ' pizza-settings__size--active'\r\n        if (size === 'medium') mediumPizzaClass += ' pizza-settings__size--active'\r\n        if (size === 'large') largePizzaClass += ' pizza-settings__size--active'\r\n\r\n        return (\r\n            <>\r\n                <div className={smallPizzaClass} onClick={() => onChooseSize(id, 'small')}>26 см.</div>\r\n                <div className={mediumPizzaClass} onClick={() => onChooseSize(id, 'medium')}>30 см.</div>\r\n                <div className={largePizzaClass} onClick={() => onChooseSize(id, 'large')}>40 см.</div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const count = getPizzaCount(cartPizzas, id)\r\n    const renderCount = count > 0 ?\r\n        <p className=\"pizza-item__order-count\">{count}</p> : null\r\n\r\n    return <PizzaItem name={name}\r\n        price={price}\r\n        img={img}\r\n        thicknessSettingsRender={thicknessSettings(thickness)}\r\n        sizeSettingsRender={sizeSettings(size)}\r\n        onCartPizza={onCartPizza}\r\n        id={id}\r\n        renderCount={renderCount}\r\n    />\r\n}\r\n\r\n\r\nconst PizzaItem = ({ name,\r\n    price, img,\r\n    thicknessSettingsRender,\r\n    sizeSettingsRender, onCartPizza,\r\n    id, renderCount }) => {\r\n\r\n    return <section className=\"pizza-item__container\">\r\n        <div className=\"pizza-item__image-block\">\r\n            <img src={img} className=\"pizza-item__image\" />\r\n        </div>\r\n        <div className=\"pizza-item__title\">\r\n            <p className=\"pizza-item__text\">{name}</p>\r\n        </div>\r\n        <div className=\"pizza-settings__container pizza-item__text pizza-item__text--settings\">\r\n            {thicknessSettingsRender}\r\n            {sizeSettingsRender}\r\n\r\n        </div>\r\n        <div className=\"pizza-item__order\">\r\n            <p className=\"pizza-item__price pizza-item__text pizza-item__text--price\">{price} ₴</p>\r\n            <button onClick={() => onCartPizza(id)}\r\n                className=\"pizza-item__order-button\">\r\n                <img src=\"./plus.png\" className=\"pizza-item__plus\" />\r\n                <p className=\"pizza-item__order-text\">\r\n                    Добавити\r\n                </p>\r\n                {renderCount}\r\n            </button>\r\n        </div>\r\n    </section>\r\n}\r\nconst mapStateToProps = ({ cartPizzasKind: cartPizzas }) => {\r\n    return { cartPizzas }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onChooseType: (id, type) => dispatch(choosePizzaType(id, type)),\r\n        onChooseSize: (id, size) => dispatch(choosePizzaSize(id, size)),\r\n        onCartPizza: (id) => dispatch(addPizzaToCart(id))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PizzaItemContainer)","import React, { useEffect } from 'react'\r\nimport './PizzaList.scss'\r\nimport { connect } from 'react-redux'\r\n\r\nimport Loader from '../Loader/Loader'\r\nimport PizzaItem from '../PizzaItem/PizzaItem'\r\nimport PizzaService from '../../pizza-service'\r\nimport { fetchPizzas, fetchError, fetchRequest, toggleMenuWindow } from '../../actions'\r\n\r\n\r\nconst pizzaService = new PizzaService()\r\n\r\nconst renderPizzas = (pizzas) => {\r\n    return pizzas.map((pizza) => {\r\n        return <PizzaItem\r\n            name={pizza.name}\r\n            price={pizza.totalPrice}\r\n            img={pizza.img}\r\n            key={pizza.id}\r\n            id={pizza.id}\r\n            thickness={pizza.settings.type}\r\n            size={pizza.settings.size}\r\n        />\r\n    })\r\n}\r\nconst PizzaList = ({ pizzas,\r\n    sort,\r\n    fetchRequest,\r\n    pizzasLoaded,\r\n    filter,\r\n    fetchError,\r\n    loader,\r\n    onToggleMenu, }) => {\r\n\r\n    switch (filter) {\r\n        case 'all': filter = 'Всі'; break;\r\n        case 'meat': filter = \"М'ясні\"; break;\r\n        case 'vegetable': filter = 'Овочеві'; break;\r\n        case 'spicy': filter = 'Гострі'; break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchRequest()\r\n        pizzaService.getPizzas()\r\n            .then((data) => pizzasLoaded(data))\r\n            .catch((err) => fetchError(err))\r\n    }, [filter, sort])\r\n\r\n    if (loader) return <Loader />\r\n\r\n    return <main className=\"pizza-list__container\">\r\n        <section className=\"pizza-list__header\">\r\n            {filter} піцци\r\n        </section>\r\n        <section className=\"pizza-list\">\r\n            {renderPizzas(pizzas)}\r\n\r\n        </section>\r\n    </main>\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        pizzasLoaded: (data) => dispatch(fetchPizzas(data)),\r\n        fetchError: (err) => dispatch(fetchError(err)),\r\n        fetchRequest: () => dispatch(fetchRequest()),\r\n        onToggleMenu: () => dispatch(toggleMenuWindow())\r\n\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        pizzas: state.filterPizzas,\r\n        filterPizzas: state.filterPizzas,\r\n        filter: state.filter,\r\n        loader: state.loader,\r\n        sort: state.sort,\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PizzaList)","export default class PizzaService {\r\n    pizzas = [\r\n        {\r\n            name: \"Чізбургер-Піцца\",\r\n            img: './chizburger-pizza.png',\r\n            markup: {\r\n                thin: 0,\r\n                classic: 30,\r\n                small: 0,\r\n                medium: 15,\r\n                large: 45,\r\n            },\r\n            settings: {\r\n                size: 'small',\r\n                type: 'thin'\r\n            },\r\n            price: 101,\r\n            totalPrice: 101,\r\n            id: 1,\r\n            class: 'meat',\r\n            popularity: 0.3\r\n        },\r\n        {\r\n            name: \"Сирна\",\r\n            img: './cheeze.png',\r\n            markup: {\r\n                thin: 0,\r\n                classic: 26,\r\n                small: 0,\r\n                medium: 20,\r\n                large: 38,\r\n            },\r\n            settings: {\r\n                size: 'small',\r\n                type: 'thin',\r\n            },\r\n            price: 99,\r\n            totalPrice: 99,\r\n            id: 2,\r\n            class: 'vegetable',\r\n            popularity: 0.5,\r\n        },\r\n        {\r\n            name: \"Криветки по-азіатськи\",\r\n            img: './shrimp.png',\r\n            markup: {\r\n                thin: 0,\r\n                classic: 41,\r\n                small: 0,\r\n                medium: 29,\r\n                large: 65,\r\n            },\r\n            settings: {\r\n                size: 'small',\r\n                type: 'thin'\r\n            },\r\n            price: 95,\r\n            totalPrice: 95,\r\n            id: 3,\r\n            class: 'meat',\r\n            popularity: 0.99,\r\n        },\r\n        {\r\n            name: \"Сирне курча\",\r\n            img: './cheeze-chicken.png',\r\n            markup: {\r\n                thin: 0,\r\n                classic: 30,\r\n                small: 0,\r\n                medium: 15,\r\n                large: 25,\r\n            },\r\n            settings: {\r\n                size: 'small',\r\n                type: 'thin'\r\n            },\r\n            price: 95,\r\n            totalPrice: 95,\r\n            id: 4,\r\n            class: ['spicy', 'meat'],\r\n            popularity: 0.6\r\n        },\r\n    ]\r\n    getPizzas() {\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => resolve(this.pizzas), 600)\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport Header from '../Header/Header'\r\nimport Filter from '../Filter/FilterContainer'\r\nimport PizzaList from '../PizzaList/PizzaList'\r\n\r\nconst MainPage = () => {\r\n    return <>\r\n        <Header />\r\n        <Filter />\r\n        <PizzaList />\r\n    </>\r\n}\r\nexport default MainPage","import React from 'react'\r\nimport './CartItem.scss'\r\nimport { increasePizza } from '../../actions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst CartItem = ({\r\n    name, total,\r\n    img, id,\r\n    settings,\r\n    count,\r\n    onIncrease, }) => {\r\n\r\n\r\n    let size = settings.size\r\n    let type = settings.type\r\n\r\n    switch (settings.type) {\r\n        case 'thin': type = 'Тонке тісто'; break;\r\n        case 'classic': type = 'Товсте тісто'; break;\r\n        default: break;\r\n    }\r\n    switch (settings.size) {\r\n        case 'small': size = '26 см.'; break;\r\n        case 'medium': size = '30 см.'; break;\r\n        case 'large': size = '40 см.'; break;\r\n        default: break;\r\n    }\r\n\r\n    return (\r\n        <div className=\"cart-item\">\r\n            <div className=\"cart-item__info-block\">\r\n                <img src={img} className=\"cart-item__img\" />\r\n                <div className=\"cart-item__info\">\r\n                    <p className=\"cart-page__text\">{name}</p>\r\n                    <p className=\"cart-page__text cart-page__text--small_gray\">\r\n                        {`${type}, ${size}`}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div className=\"cart-item__counter-block\">\r\n                <i\r\n                    className=\"fas fa-minus-circle cart-item__counter-icon\"></i>\r\n                <p className=\"cart-page__text cart-item__count\">{count}</p>\r\n                <i onClick={() => onIncrease(id)}\r\n                    className=\"fas fa-plus-circle cart-item__counter-icon\"></i>\r\n            </div>\r\n            <div className=\"cart-item__price\">\r\n                <p className=\"cart-page__text\">{total} ₴</p>\r\n            </div>\r\n            <div className=\"cart-item__close\">\r\n                <i className=\"far fa-times-circle cart-item__close-icon\"></i>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onIncrease: (id) => dispatch(increasePizza(id))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(CartItem)","import React from 'react'\r\nimport './CartList.scss'\r\nimport CartItem from '../CartItem/CartItem'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst CartList = ({ cartPizzas, total, cartCount }) => {\r\n\r\n    const renderCartPizzas = (cartPizzas) => {\r\n        return cartPizzas.map((pizza) => {\r\n            return <CartItem {...pizza} key={pizza.id} />\r\n        })\r\n    }\r\n\r\n    return <section className=\"cart-page\">\r\n        <section className=\"cart-page__header\">\r\n            <div className=\"cart-page__title\">\r\n                <i className=\"fas fa-shopping-cart cart-page__cart-icon\"></i>\r\n                <p className=\"cart-page__text cart-page__text--title\">Корзина</p>\r\n            </div>\r\n            <div className=\"cart-page__clear\">\r\n                <span className=\"cart-page__clear-underscore\"></span>\r\n                <i className=\"far fa-trash-alt cart-page__trash-icon\"></i>\r\n                <p className=\"cart-page__text cart-page__text--small_gray\">\r\n                    Очистити корзину\r\n                </p>\r\n            </div>\r\n        </section>\r\n        <section className=\"cart-page__cart-list\">\r\n\r\n            {renderCartPizzas(cartPizzas)}\r\n\r\n        </section>\r\n        <section className=\"cart-page__info-block\">\r\n            <div className=\"cart-page__text-block\">\r\n                <span className=\"cart-page__text cart-page__text--thin\">Всього піц: </span>\r\n                <span className=\"cart-page__text\">{cartCount} шт</span>\r\n            </div>\r\n            <div className=\"cart-page__text-block\">\r\n                <span className=\"cart-page__text cart-page__text--thin\">Сума заказу: </span>\r\n                <span className=\"cart-page__text cart-page__text--orange\">{total} ₴</span>\r\n            </div>\r\n        </section>\r\n        <section className=\"cart-page__buttons-block\">\r\n            <Link to=\"/\">\r\n                <button className=\"cart-page__nav-button\">\r\n                    <span className=\"cart-page__text cart-page__text--small_gray\">\r\n                        Повернутись назад\r\n                    </span>\r\n                </button>\r\n            </Link>\r\n            <button className=\"cart-page__nav-button cart-page__nav-button--order\">\r\n                Оплатити\r\n            </button>\r\n        </section>\r\n    </section>\r\n}\r\n\r\nconst mapStateToProps = ({ cartPizzas, total, cartCount }) => {\r\n    return { cartPizzas, total, cartCount }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CartList)","import React from 'react'\r\n\r\nimport CartList from '../CartList/CartList'\r\nimport Header from '../Header/Header'\r\nimport { Redirect } from 'react-router';\r\nimport { connect } from 'react-redux'\r\n\r\nconst CartPage = ({ emptyCart }) => {\r\n\r\n    if (emptyCart) return <Redirect to=\"/cart-empty\" />\r\n\r\n    return (\r\n        <>\r\n            <Header simpleHeader />\r\n            <CartList />\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        emptyCart: state.cartPizzas.length === 0\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CartPage)","import React from 'react'\r\nimport './CartFailure.scss'\r\n\r\nconst CartFailure = ({ logout }) => {\r\n\r\n    let title = 'Корзина пуста 😕'\r\n    let subtitle = 'Схоже, що ви ще не вибрали жодної піци. Для того, щоб вибрати піцу, поверністья на головну сторінку'\r\n    if (logout) {\r\n        title = \"Ви не ввійшли у свій аккаунт 😕\"\r\n        subtitle = 'Схоже, що ви не авторизувались, для того, щоб увійти, натисність кнопку вгорі'\r\n    }\r\n\r\n    return <div className=\"cart-failure\">\r\n        <h2 className=\"cart-failure__title\">\r\n            {title}\r\n        </h2>\r\n        <p className=\"cart-failure__sub-title\">\r\n            {subtitle}\r\n        </p>\r\n        <img src=\"empty-cart.png\" className=\"cart-failure__img\" />\r\n        <button className=\"cart-failure__back\">Повернутися назад</button>\r\n    </div>\r\n}\r\n\r\nexport default CartFailure","import React from 'react'\r\n\r\nimport CartFailure from '../CartFailure/CartFailure'\r\nimport Header from '../Header/Header'\r\n\r\nconst CartFailurePage = ({ logout }) => {\r\n    return (\r\n        <>\r\n            <Header simpleHeader />\r\n            <CartFailure logout={logout} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CartFailurePage","import React from 'react';\nimport './App.scss';\nimport MainPage from '../Pages/MainPage'\nimport CartPage from '../Pages/CartPage'\nimport CartFailurePage from '../Pages/CartFailurePage';\n\nimport { Route } from 'react-router-dom'\n\nconst App = () => {\n  return <div className=\"wrapper\">\n    <Route path=\"/\" component={MainPage} exact />\n    <Route path=\"/cart\" component={CartPage} exact />\n    <Route path=\"/cart-empty\" component={CartFailurePage} exact />\n    <Route path=\"/cart-login\" render={() => <CartFailurePage logout />} exact />\n  </div>\n}\n\nexport default App","\r\nconst initState = {\r\n    pizzas: [],\r\n    cartPizzas: [],\r\n    filterPizzas: [],\r\n    cartPizzasKind: [],\r\n    cartCount: 0,\r\n    total: 0,\r\n    filter: \"all\",\r\n    sort: \"popularity\",\r\n    sortActive: false,\r\n    mobileMenuActive: false,\r\n    mobileFilterActive: false,\r\n    loader: true,\r\n    error: null,\r\n}\r\n\r\nconst changeThicknessType = (state, id, type) => {\r\n    return state.filterPizzas.map((pizza) => {\r\n        if (pizza.id === id) {\r\n            const { size } = pizza.settings\r\n            const { markup, price } = pizza\r\n            return {\r\n                ...pizza,\r\n                totalPrice: price + markup[type] + markup[size],\r\n                settings: { type: type, size: size }\r\n            }\r\n        }\r\n        return pizza\r\n    })\r\n}\r\n\r\nconst changeSizeSettings = (state, id, size) => {\r\n    return state.filterPizzas.map((pizza) => {\r\n        if (pizza.id === id) {\r\n            const { type } = pizza.settings\r\n            const { markup, price } = pizza\r\n            return {\r\n                ...pizza,\r\n                totalPrice: price + markup[type] + markup[size],\r\n                settings: { type: type, size: size }\r\n            }\r\n        }\r\n        return pizza\r\n    })\r\n}\r\n\r\nconst filterItems = (listToFilter, filter) => {\r\n    if (filter === 'all') return listToFilter\r\n    return listToFilter.filter((pizza) => pizza.class.includes(filter))\r\n}\r\n\r\nconst sortItems = (listToSort, sortType) => {\r\n    if (sortType === 'cost') return listToSort.sort((a, b) => a.price > b.price ? 1 : -1);\r\n    if (sortType === 'popularity') return listToSort.sort((a, b) => a.popularity < b.popularity ? 1 : -1);\r\n    if (sortType === 'alphabet') return listToSort.sort((a, b) => a.name > b.name ? 1 : -1);\r\n    return listToSort\r\n}\r\n\r\nconst createCartPizza = (state, pizzaId) => {\r\n    const selectedPizza = state.filterPizzas.find(({ id }) => id === pizzaId)\r\n    const { settings: { type, size }, id } = selectedPizza\r\n\r\n    return {\r\n        name: selectedPizza.name,\r\n        total: selectedPizza.totalPrice,\r\n        settings: selectedPizza.settings,\r\n        img: selectedPizza.img,\r\n        count: 1,\r\n        id: `${id}${type}${size}`,\r\n        initId: id,\r\n    }\r\n}\r\nconst isPizzaCartedChecker = (state, newCartedPizza) => {\r\n    const { id, settings: { type, size } } = newCartedPizza\r\n\r\n    return state.cartPizzas\r\n        .find((pizza) => pizza.id === id\r\n            && pizza.settings.type === type\r\n            && pizza.settings.size === size)\r\n}\r\n\r\nconst increaseCartPizza = (state, newCartedPizza) => {\r\n    const newCartCount = state.cartCount + 1\r\n    const newTotal = state.total + newCartedPizza.total\r\n\r\n    const updatedList = state.cartPizzas.map((pizza) => {\r\n        if (pizza.id === newCartedPizza.id) return (\r\n            {\r\n                ...pizza,\r\n                count: ++pizza.count,\r\n                total: newCartedPizza.total + pizza.total\r\n            }\r\n        )\r\n        return pizza\r\n    })\r\n    return {\r\n        ...state,\r\n        cartPizzas: updatedList,\r\n        total: newTotal,\r\n        cartCount: newCartCount,\r\n        cartPizzasKind: [\r\n            ...state.cartPizzasKind,\r\n            newCartedPizza.initId\r\n        ]\r\n    }\r\n}\r\n\r\nconst reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n\r\n        case 'FETCH_PIZZAS_REQUEST':\r\n            return {\r\n                ...state,\r\n                loader: true,\r\n            }\r\n        case 'FETCH_PIZZAS_SUCCES':\r\n            const pizzas = action.payload\r\n            const filterPizzasList = filterItems(pizzas, state.filter)\r\n            const sortedAndFilteredList = sortItems(filterPizzasList, state.sort)\r\n\r\n            return {\r\n                ...state,\r\n                pizzas: pizzas,\r\n                filterPizzas: sortedAndFilteredList,\r\n                loader: false,\r\n            }\r\n        case 'FETCH_PIZZAS_FAILURE':\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        case 'TYPE_PIZZA_CHOOSE':\r\n            const { id: pizzaIdType } = action.payload\r\n            const { type } = action.payload\r\n            const updatedType = changeThicknessType(state, pizzaIdType, type)\r\n            return {\r\n                ...state,\r\n                filterPizzas: updatedType\r\n            }\r\n        case 'SIZE_PIZZA_CHOOSE':\r\n            const { id: pizzaIdSize } = action.payload\r\n            const { size } = action.payload\r\n            const updatedSize = changeSizeSettings(state, pizzaIdSize, size)\r\n            return {\r\n                ...state,\r\n                filterPizzas: updatedSize\r\n            }\r\n        case 'FILTER_CHANGE':\r\n            const pizzaClass = action.payload\r\n            let listToFilter = state.pizzas\r\n            const filteredList = filterItems(listToFilter, pizzaClass)\r\n            return {\r\n                ...state,\r\n                filter: pizzaClass,\r\n                filterPizzas: filteredList\r\n            }\r\n        case 'SORT_CHANGE':\r\n            const sortType = action.payload;\r\n            const listToSort = state.filterPizzas.map((e) => e)\r\n            const sortedItems = sortItems(listToSort, sortType)\r\n            return {\r\n                ...state,\r\n                sort: sortType,\r\n                filterPizzas: sortedItems\r\n            }\r\n        case 'SORT_TOGGLE':\r\n            return {\r\n                ...state,\r\n                sortActive: !state.sortActive\r\n            }\r\n        case 'MOBILE_MENU_TOGGLE':\r\n            return {\r\n                ...state,\r\n                mobileMenuActive: !state.mobileMenuActive\r\n            }\r\n        case 'MOBILE_FILTER_TOGGLE':\r\n            return {\r\n                ...state,\r\n                sortActive: false,\r\n                mobileFilterActive: !state.mobileFilterActive\r\n            }\r\n        case 'CART_PIZZA_ADD':\r\n            const actionAddPizzaId = action.payload\r\n            const newCartedPizza = createCartPizza(state, actionAddPizzaId)\r\n            const isPizzaCarted = isPizzaCartedChecker(state, newCartedPizza)\r\n\r\n            if (isPizzaCarted) return increaseCartPizza(state, newCartedPizza)\r\n\r\n            else {\r\n                const newCartCount = state.cartCount + 1\r\n                const newTotal = state.total + newCartedPizza.total\r\n                return {\r\n                    ...state,\r\n                    cartCount: newCartCount,\r\n                    total: newTotal,\r\n                    cartPizzas: [\r\n                        ...state.cartPizzas,\r\n                        newCartedPizza,\r\n                    ],\r\n                    cartPizzasKind: [\r\n                        ...state.cartPizzasKind,\r\n                        newCartedPizza.initId\r\n                    ]\r\n                }\r\n            }\r\n        case 'CART_PIZZA_INCREASE':\r\n            console.log(action.payload)\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer","import { createStore } from 'redux'\r\nimport reducer from './reducer'\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport { Provider } from 'react-redux'\nimport { HashRouter as Router } from 'react-router-dom'\nimport store from './store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}