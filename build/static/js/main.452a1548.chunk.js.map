{"version":3,"sources":["components/Header/Header.js","actions.js","components/Filter/Filter.js","components/Filter/FilterContainer.js","components/Loader/Loader.js","components/PizzaItem/PizzaItem.js","components/PizzaItem/PizzaItemContainer.js","components/PizzaList/PizzaList.js","pizza-service.js","components/Pages/MainPage.js","components/CartItem/CartItem.js","components/CartList/CartList.js","components/Pages/CartPage.js","components/CartFailure/CartFailure.js","components/Pages/CartFailurePage.js","components/Login/Login.js","components/Pages/LoginPage.js","components/App/App.js","reducers/pizza-list.js","reducers/shopping-cart.js","reducers/index.js","store.js","index.js"],"names":["Header","cartButtonRender","onToggleMenu","mobileMenuClass","className","onClick","src","alt","to","connect","shoppingCart","total","cartCount","mobileMenuActive","dispatch","type","simpleHeader","Filter","filterList","sortList","currentSort","onToggleSort","arrowClass","sortListClass","onToggleFilter","mobileFilterClass","pizzaList","filter","sort","sortActive","mobileFilterActive","onFilter","filterKey","payload","onSort","sortType","changeSort","sortListRendered","label","map","item","idx","key","filterListRendered","Loader","PizzaItem","name","price","img","thicknessSettingsRender","sizeSettingsRender","onCartPizza","id","renderCount","pizzaItemImage","pizzaImageClass","ref","cartPizzasNameList","cartPizzasKind","onChooseType","choosePizzaType","onChooseSize","size","choosePizzaSize","toggleAddAnimation","addPizzaToCart","totalPrice","settings","thickness","animation","useRef","count","pizzaName","currentPizzasCount","length","getPizzaCount","thinClass","classicClass","thicknessSettings","smallPizzaClass","mediumPizzaClass","largePizzaClass","sizeSettings","pizzaService","pizzas","markup","thin","classic","small","medium","large","class","popularity","Promise","resolve","setTimeout","filterPizzas","loader","pizzasLoaded","data","fetchError","err","fetchRequest","useEffect","getPizzas","then","catch","pizza","renderPizzas","MainPage","onIncrease","increasePizza","onDecrease","decreasePizza","onDelete","deletePizza","cartPizzas","onClearCart","renderCartPizzas","emptyCart","CartFailure","title","subtitle","logout","CartFailurePage","Login","hidden","action","placeholder","htmlFor","LoginPage","App","path","component","exact","CartPage","render","filterItems","listToFilter","uniquePizzaId","newId","initialId","includes","sortItems","listToSort","a","b","updatePizzaList","state","filterPizzasList","sortedAndFilteredList","error","updatedTypeList","changeThicknessType","updatedSizeList","changeSizeSettings","pizzaClass","filteredList","e","sortedItems","currentPizzasList","pizzaIdToAnimate","newListToAnimate","increaseCartPizza","cartedPizzaId","pizzaItem","newCartCount","pizzaPricePerPiece","newTotal","updatedList","deletedPizza","deletedPizzaId","newList","newPizzaKindList","indexOfPizzaKind","indexOf","splice","updateShoppingCart","actionAddPizzaId","newCartedPizza","pizzaId","selectedPizza","find","createCartPizza","isPizzaCartedChecker","increaseId","pizzaToInc","decreasePizzaId","pizzaToDec","lastIndexOf","decreaseCartPizza","initState","reducer","store","createStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.452a1548.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Header.scss'\r\nimport { connect } from 'react-redux'\r\nimport { toggleMenuWindow } from '../../actions'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst HeaderContainer = ({\r\n    simpleHeader,\r\n    onToggleMenu,\r\n    mobileMenuActive,\r\n    total, cartCount\r\n}) => {\r\n    let mobileMenuClass = mobileMenuActive ?\r\n        'header__buttons-block header__buttons-block--active' : 'header__buttons-block'\r\n\r\n    const cartButtonRender = simpleHeader ?\r\n        null : (\r\n            <div className=\"cart\" onClick={() => onToggleMenu()}>\r\n                <div className=\"cart__price\">{total}₴</div>\r\n                <div className=\"cart__line\"></div>\r\n                <div className=\"cart__count\">\r\n                    <i className=\"fas fa-shopping-cart cart__icon\"></i>\r\n                    {cartCount}\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    return <Header\r\n        onToggleMenu={onToggleMenu}\r\n        mobileMenuClass={mobileMenuClass}\r\n        cartButtonRender={cartButtonRender}\r\n    />\r\n}\r\n\r\nconst Header = ({\r\n    cartButtonRender,\r\n    onToggleMenu,\r\n    mobileMenuClass,\r\n}) => {\r\n    return <header className=\"header\">\r\n        <div className=\"header__burger\"\r\n            onClick={() => onToggleMenu()}>\r\n            XXX\r\n        </div>\r\n\r\n\r\n        <section className=\"header__logo-block\">\r\n            <img src=\"./logo.svg\" className=\"header__logo\" alt=\"logo\" />\r\n            <Link to=\"/\">\r\n                <section className=\"header__text-block\">\r\n                    <h1 className=\"header__title\">Pizza Delivery</h1>\r\n                    <p className=\"header__subtitle\">Найсмачніша піцца у нашому вимірі</p>\r\n                </section>\r\n            </Link>\r\n        </section>\r\n\r\n\r\n        <section className={mobileMenuClass}>\r\n            <section className=\"header__close\" onClick={() => onToggleMenu()}> X </section>\r\n\r\n            <Link to=\"/login\">\r\n                <section className=\"header__login\">Увійти</section>\r\n            </Link>\r\n\r\n            <Link to=\"/cart\">\r\n                {cartButtonRender}\r\n            </Link>\r\n\r\n        </section>\r\n    </header>\r\n}\r\n\r\nconst mapStateToProps = ({ shoppingCart: { total, cartCount }, mobileMenuActive }) => {\r\n    return { mobileMenuActive, total, cartCount }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onToggleMenu: () => dispatch(toggleMenuWindow())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderContainer)","const fetchPizzas = (pizzas) => {\r\n    return {\r\n        type: 'FETCH_PIZZAS_SUCCES',\r\n        payload: pizzas\r\n    }\r\n}\r\nconst fetchError = (err) => {\r\n    return {\r\n        type: 'FETCH_PIZZAS_FAILURE',\r\n        payload: err\r\n    }\r\n}\r\nconst fetchRequest = () => {\r\n    return {\r\n        type: 'FETCH_PIZZAS_REQUEST'\r\n    }\r\n}\r\n\r\nconst choosePizzaType = (id, type, name) => {\r\n    return {\r\n        type: 'TYPE_PIZZA_CHOOSE',\r\n        payload: {\r\n            id,\r\n            type,\r\n            name,\r\n        }\r\n    }\r\n}\r\n\r\nconst choosePizzaSize = (id, size, name) => {\r\n    return {\r\n        type: 'SIZE_PIZZA_CHOOSE',\r\n        payload: {\r\n            id,\r\n            size,\r\n            name\r\n        }\r\n    }\r\n}\r\n\r\nconst changeFilter = (filter) => {\r\n    return {\r\n        type: 'FILTER_CHANGE',\r\n        payload: filter,\r\n    }\r\n}\r\nconst changeSort = (sortType) => {\r\n    return {\r\n        type: 'SORT_CHANGE',\r\n        payload: sortType,\r\n    }\r\n}\r\nconst toggleSortWindow = () => {\r\n    return {\r\n        type: 'SORT_TOGGLE'\r\n    }\r\n}\r\nconst toggleMenuWindow = () => {\r\n    return {\r\n        type: 'MOBILE_MENU_TOGGLE'\r\n    }\r\n}\r\nconst toggleFilterWindow = () => {\r\n    return {\r\n        type: 'MOBILE_FILTER_TOGGLE'\r\n    }\r\n}\r\nconst addPizzaToCart = (id) => {\r\n    return {\r\n        type: 'CART_PIZZA_ADD',\r\n        payload: id\r\n    }\r\n}\r\nconst increasePizza = (id) => {\r\n    return {\r\n        type: 'CART_PIZZA_INCREASE',\r\n        payload: id\r\n    }\r\n}\r\nconst decreasePizza = (id) => {\r\n    return {\r\n        type: 'CART_PIZZA_DECREASE',\r\n        payload: id\r\n    }\r\n}\r\n\r\nconst deletePizza = (id) => {\r\n    return {\r\n        type: 'CART_PIZZA_DELETE',\r\n        payload: id,\r\n    }\r\n}\r\nconst clearCart = () => {\r\n    return {\r\n        type: 'CART_CLEAR'\r\n    }\r\n}\r\nconst toggleAddAnimation = (id) => {\r\n    return {\r\n        type: 'ANIMATION_PIZZA_TOGGLE',\r\n        payload: id,\r\n    }\r\n}\r\nexport {\r\n    fetchRequest,\r\n    fetchPizzas,\r\n    fetchError,\r\n    choosePizzaType,\r\n    choosePizzaSize,\r\n    changeFilter,\r\n    changeSort,\r\n    toggleSortWindow,\r\n    toggleMenuWindow,\r\n    toggleFilterWindow,\r\n    addPizzaToCart,\r\n    increasePizza,\r\n    decreasePizza,\r\n    deletePizza,\r\n    clearCart,\r\n    toggleAddAnimation,\r\n}","import React from 'react'\r\nimport './Filter.scss'\r\n\r\n\r\nconst Filter = ({ filterList, sortList,\r\n    currentSort, onToggleSort,\r\n    arrowClass, sortListClass,\r\n    onToggleFilter, mobileFilterClass }) => {\r\n\r\n    return <>\r\n        <section className=\"filter__mobile-trigger\"\r\n            onClick={onToggleFilter}>\r\n            Настройки пошуку\r\n    </section>\r\n        <section className={mobileFilterClass} >\r\n\r\n            <ul className=\"filter__filter-list\">\r\n                {filterList}\r\n            </ul>\r\n            <section className=\"filter__sort \" onClick={onToggleSort}>\r\n                <img src=\"./sort-arrow.svg\" className={arrowClass} alt=\"arrow\" />\r\n                <p className=\"filter__sort-text\">\r\n                    Сортувати за:\r\n                <span className=\"filter__sort-type\" > {currentSort}</span></p>\r\n                <ul className={sortListClass}>\r\n                    {sortList}\r\n                </ul>\r\n            </section>\r\n        </section>\r\n    </>\r\n}\r\n\r\n\r\n\r\nexport default Filter","import React from 'react'\r\nimport './Filter.scss'\r\nimport { connect } from 'react-redux'\r\nimport Filter from './Filter'\r\nimport {\r\n    changeFilter, changeSort,\r\n    toggleSortWindow,\r\n    toggleFilterWindow\r\n} from '../../actions'\r\n\r\n\r\nconst FilterContainer = ({ filter, sort,\r\n    onFilter, onSort,\r\n    sortActive, onToggleSort,\r\n    onToggleFilter, mobileFilterActive }) => {\r\n    let currentSort = sort\r\n\r\n    switch (currentSort) {\r\n        case 'popularity': currentSort = 'популярністю'; break;\r\n        case 'cost': currentSort = 'ціною'; break;\r\n        case 'alphabet': currentSort = 'алфавітом'; break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    const filterList = [\r\n        { type: 'all', label: \"Всі\" },\r\n        { type: 'meat', label: \"М'ясні\" },\r\n        { type: 'vegetable', label: \"Овочеві\" },\r\n        { type: 'spicy', label: 'Гострі' }\r\n    ]\r\n    const sortList = [\r\n        { type: 'popularity', label: \"Популярністю\" },\r\n        { type: 'cost', label: 'Ціною' },\r\n        { type: 'alphabet', label: \"Алфавітом\" }\r\n    ]\r\n\r\n    const sortListRendered = sortList.map((item, idx) => {\r\n        if (sort === item.type) return (\r\n            <li key={idx}\r\n                className=\"sort__item sort__item--active\"\r\n                onClick={() => onSort(item.type)}>\r\n                {item.label}\r\n            </li>\r\n        )\r\n        return <li key={idx}\r\n            className=\"sort__item\"\r\n            onClick={() => onSort(item.type)}>\r\n            {item.label}\r\n        </li>\r\n    });\r\n\r\n    const filterListRendered = filterList.map((item, idx) => {\r\n        if (item.type === filter) return (\r\n            <li key={idx}\r\n                onClick={() => onFilter(item.type)}\r\n                className=\"filter-list__item filter-list__item--active\">\r\n                {item.label}\r\n            </li>\r\n        )\r\n\r\n        return (\r\n            <li key={idx}\r\n                onClick={() => onFilter(item.type)}\r\n                className=\"filter-list__item\">\r\n                {item.label}\r\n            </li>\r\n        )\r\n    })\r\n\r\n    const mobileFilterClass = mobileFilterActive ?\r\n        'filter-container filter-container--active' : 'filter-container'\r\n    const sortListClass = sortActive ?\r\n        'sort__list sort__list--active' : 'sort__list'\r\n    const arrowClass = sortActive ?\r\n        'sort__arrow-disabled' : 'sort__arrow-active'\r\n\r\n\r\n\r\n    return <Filter filterList={filterListRendered}\r\n        sortList={sortListRendered}\r\n        currentSort={currentSort}\r\n        onSort={onSort}\r\n        onToggleSort={onToggleSort}\r\n        arrowClass={arrowClass}\r\n        sortListClass={sortListClass}\r\n        onToggleFilter={onToggleFilter}\r\n        mobileFilterClass={mobileFilterClass} />\r\n}\r\n\r\nconst mapStateToProps = ({ pizzaList: { filter, sort, sortActive, mobileFilterActive } }) => {\r\n    return { filter, sort, sortActive, mobileFilterActive }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onFilter: (filterKey) => dispatch(changeFilter(filterKey)),\r\n        onSort: (sortType) => dispatch(changeSort(sortType)),\r\n        onToggleSort: () => dispatch(toggleSortWindow()),\r\n        onToggleFilter: () => dispatch(toggleFilterWindow())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterContainer) ","import React from 'react'\r\nimport './Loader.scss'\r\n\r\nconst Loader = () => {\r\n    return <div className=\"lds-hourglass\"></div>\r\n}\r\n\r\nexport default Loader","import React from 'react'\r\nimport './PizzaItem.scss'\r\n\r\nconst PizzaItem = ({ name,\r\n    price, img,\r\n    thicknessSettingsRender,\r\n    sizeSettingsRender, onCartPizza,\r\n    id, renderCount,\r\n    pizzaItemImage,\r\n    pizzaImageClass }) => {\r\n\r\n    return <section className=\"pizza-item__container\">\r\n        <div className=\"pizza-item__image-block\">\r\n            <img src={img} className=\"pizza-item__image-static\" alt=\"pizza\" />\r\n            <img src={img} className={pizzaImageClass} ref={pizzaItemImage} alt=\"pizza for animation\" />\r\n        </div>\r\n        <div className=\"pizza-item__title\">\r\n            <p className=\"pizza-item__text\">{name}</p>\r\n        </div>\r\n        <div className=\"pizza-settings__container pizza-item__text pizza-item__text--settings\">\r\n            {thicknessSettingsRender}\r\n            {sizeSettingsRender}\r\n\r\n        </div>\r\n        <div className=\"pizza-item__order\">\r\n            <p className=\"pizza-item__price pizza-item__text pizza-item__text--price\">{price} ₴</p>\r\n            <button onClick={() => onCartPizza(id)}\r\n                className=\"pizza-item__order-button\">\r\n                <img src=\"./plus.png\" className=\"pizza-item__plus\" alt=\"plus\" />\r\n                <p className=\"pizza-item__order-text\">\r\n                    Добавити\r\n                </p>\r\n                {renderCount}\r\n            </button>\r\n        </div>\r\n    </section>\r\n}\r\n\r\nexport default PizzaItem","import React, { useRef } from 'react'\r\nimport './PizzaItem.scss'\r\nimport PizzaItem from './PizzaItem'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { choosePizzaType, choosePizzaSize, addPizzaToCart, toggleAddAnimation } from '../../actions'\r\n\r\n\r\nconst PizzaItemContainer = ({\r\n    name, id,\r\n    totalPrice, img,\r\n    settings: { type: thickness = 'thin',\r\n        size = 'small' },\r\n    onChooseType,\r\n    onChooseSize,\r\n    onCartPizza,\r\n    cartPizzasNameList,\r\n    animation }) => {\r\n\r\n    const pizzaItemImage = useRef(null)\r\n\r\n    const getPizzaCount = (cartPizzasNameList, pizzaName) => {\r\n        const currentPizzasCount = cartPizzasNameList.filter((name) => name === pizzaName)\r\n        if (currentPizzasCount.length > 0) return currentPizzasCount.length\r\n        return null\r\n    }\r\n\r\n    const thicknessSettings = (thickness) => {\r\n        let thinClass = \"pizza-settings__thickness\"\r\n        let classicClass = \"pizza-settings__thickness\"\r\n\r\n        if (thickness === 'classic') classicClass += ' pizza-settings__thickness--active'\r\n        if (thickness === 'thin') thinClass += ' pizza-settings__thickness--active'\r\n        return (\r\n            <>\r\n                <div className={thinClass} onClick={() => onChooseType(id, 'thin', name)}>тонка</div>\r\n                <div className={classicClass} onClick={() => onChooseType(id, 'classic', name)}>стандартна</div>\r\n            </>\r\n        )\r\n    }\r\n    const sizeSettings = (size) => {\r\n\r\n        let smallPizzaClass = 'pizza-settings__size';\r\n        let mediumPizzaClass = 'pizza-settings__size';\r\n        let largePizzaClass = 'pizza-settings__size';\r\n\r\n        if (size === 'small') smallPizzaClass += ' pizza-settings__size--active'\r\n        if (size === 'medium') mediumPizzaClass += ' pizza-settings__size--active'\r\n        if (size === 'large') largePizzaClass += ' pizza-settings__size--active'\r\n\r\n        return (\r\n            <>\r\n                <div className={smallPizzaClass} onClick={() => onChooseSize(id, 'small', name)}>26 см.</div>\r\n                <div className={mediumPizzaClass} onClick={() => onChooseSize(id, 'medium', name)}>30 см.</div>\r\n                <div className={largePizzaClass} onClick={() => onChooseSize(id, 'large', name)}>40 см.</div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const count = getPizzaCount(cartPizzasNameList, name)\r\n    const renderCount = count > 0 ?\r\n        <p className=\"pizza-item__order-count\">{count}</p> : null\r\n\r\n    const pizzaImageClass = animation ?\r\n        'pizza-item__image pizza-item__image--animated' : 'pizza-item__image'\r\n\r\n    return <PizzaItem name={name}\r\n        price={totalPrice}\r\n        img={img}\r\n        thicknessSettingsRender={thicknessSettings(thickness)}\r\n        sizeSettingsRender={sizeSettings(size)}\r\n        onCartPizza={onCartPizza}\r\n        id={id}\r\n        renderCount={renderCount}\r\n        pizzaItemImage={pizzaItemImage}\r\n        pizzaImageClass={pizzaImageClass}\r\n    />\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ shoppingCart: { cartPizzasKind: cartPizzasNameList } }) => {\r\n    return { cartPizzasNameList }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onChooseType: (id, type, name) => dispatch(choosePizzaType(id, type, name)),\r\n        onChooseSize: (id, size, name) => dispatch(choosePizzaSize(id, size, name)),\r\n        onCartPizza: (id) => {\r\n            dispatch(toggleAddAnimation(id))\r\n            dispatch(addPizzaToCart(id))\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PizzaItemContainer)","import React, { useEffect } from 'react'\r\nimport './PizzaList.scss'\r\nimport { connect } from 'react-redux'\r\n\r\nimport Loader from '../Loader/Loader'\r\nimport PizzaItem from '../PizzaItem/PizzaItemContainer'\r\nimport PizzaService from '../../pizza-service'\r\nimport { fetchPizzas, fetchError, fetchRequest } from '../../actions'\r\n\r\n\r\nconst pizzaService = new PizzaService()\r\n\r\nconst renderPizzas = (pizzas) => {\r\n    return pizzas.map((pizza) => {\r\n        return <PizzaItem key={pizza.id}\r\n            {...pizza}\r\n        />\r\n    })\r\n}\r\nconst PizzaList = ({ pizzas,\r\n    sort,\r\n    fetchRequest,\r\n    pizzasLoaded,\r\n    filter,\r\n    fetchError,\r\n    loader, }) => {\r\n\r\n    useEffect(() => {\r\n        fetchRequest()\r\n        pizzaService.getPizzas()\r\n            .then((data) => pizzasLoaded(data))\r\n            .catch((err) => fetchError(err))\r\n    }, [filter, sort, fetchRequest, pizzasLoaded, fetchError])\r\n\r\n    switch (filter) {\r\n        case 'all': filter = 'Всі'; break;\r\n        case 'meat': filter = \"М'ясні\"; break;\r\n        case 'vegetable': filter = 'Овочеві'; break;\r\n        case 'spicy': filter = 'Гострі'; break;\r\n        default:\r\n            break;\r\n    }\r\n    if (loader) return <Loader />\r\n\r\n    return <main className=\"pizza-list__container\">\r\n        <section className=\"pizza-list__header\">\r\n            {filter} піцци\r\n        </section>\r\n        <section className=\"pizza-list\">\r\n            {renderPizzas(pizzas)}\r\n\r\n        </section>\r\n    </main>\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        pizzasLoaded: (data) => dispatch(fetchPizzas(data)),\r\n        fetchError: (err) => dispatch(fetchError(err)),\r\n        fetchRequest: () => dispatch(fetchRequest()),\r\n\r\n    }\r\n}\r\nconst mapStateToProps = ({ pizzaList: { filterPizzas: pizzas, filter, loader, sort } }) => {\r\n    return {\r\n        pizzas, filter, loader, sort\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PizzaList)","export default class PizzaService {\r\n    pizzas = [\r\n        {\r\n            name: \"Чізбургер-Піцца\",\r\n            img: './chizburger-pizza.png',\r\n            markup: {\r\n                thin: 0,\r\n                classic: 30,\r\n                small: 0,\r\n                medium: 15,\r\n                large: 45,\r\n            },\r\n            settings: {\r\n                size: 'small',\r\n                type: 'thin'\r\n            },\r\n            price: 101,\r\n            totalPrice: 101,\r\n            id: 1,\r\n            class: 'meat',\r\n            popularity: 0.3\r\n        },\r\n        {\r\n            name: \"Сирна\",\r\n            img: './cheeze.png',\r\n            markup: {\r\n                thin: 0,\r\n                classic: 26,\r\n                small: 0,\r\n                medium: 20,\r\n                large: 38,\r\n            },\r\n            settings: {\r\n                size: 'small',\r\n                type: 'thin',\r\n            },\r\n            price: 99,\r\n            totalPrice: 99,\r\n            id: 2,\r\n            class: 'vegetable',\r\n            popularity: 0.5,\r\n        },\r\n        {\r\n            name: \"Криветки по-азіатськи\",\r\n            img: './shrimp.png',\r\n            markup: {\r\n                thin: 0,\r\n                classic: 41,\r\n                small: 0,\r\n                medium: 29,\r\n                large: 65,\r\n            },\r\n            settings: {\r\n                size: 'small',\r\n                type: 'thin'\r\n            },\r\n            price: 95,\r\n            totalPrice: 95,\r\n            id: 3,\r\n            class: 'meat',\r\n            popularity: 0.99,\r\n        },\r\n        {\r\n            name: \"Сирне курча\",\r\n            img: './cheeze-chicken.png',\r\n            markup: {\r\n                thin: 0,\r\n                classic: 30,\r\n                small: 0,\r\n                medium: 15,\r\n                large: 25,\r\n            },\r\n            settings: {\r\n                size: 'small',\r\n                type: 'thin'\r\n            },\r\n            price: 95,\r\n            totalPrice: 95,\r\n            id: 4,\r\n            class: ['spicy', 'meat'],\r\n            popularity: 0.6\r\n        },\r\n    ]\r\n    getPizzas() {\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => resolve(this.pizzas), 600)\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport Header from '../Header/Header'\r\nimport Filter from '../Filter/FilterContainer'\r\nimport PizzaList from '../PizzaList/PizzaList'\r\n\r\nconst MainPage = () => {\r\n    return <>\r\n        <Header />\r\n        <Filter />\r\n        <PizzaList />\r\n    </>\r\n}\r\nexport default MainPage","import React from 'react'\r\nimport './CartItem.scss'\r\nimport { increasePizza, decreasePizza, deletePizza } from '../../actions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst CartItem = ({\r\n    name, total,\r\n    img,\r\n    settings,\r\n    count, id,\r\n    onIncrease,\r\n    onDecrease,\r\n    onDelete, }) => {\r\n\r\n    let size = settings.size\r\n    let type = settings.type\r\n\r\n    switch (settings.type) {\r\n        case 'thin': type = 'Тонке тісто'; break;\r\n        case 'classic': type = 'Товсте тісто'; break;\r\n        default: break;\r\n    }\r\n    switch (settings.size) {\r\n        case 'small': size = '26 см.'; break;\r\n        case 'medium': size = '30 см.'; break;\r\n        case 'large': size = '40 см.'; break;\r\n        default: break;\r\n    }\r\n    return (\r\n        <div className=\"cart-item\">\r\n            <div className=\"cart-item__info-block\">\r\n                <img src={img} className=\"cart-item__img\" alt=\"pizza\" />\r\n                <div className=\"cart-item__info\">\r\n                    <p className=\"cart-page__text\">{name}</p>\r\n                    <p className=\"cart-page__text cart-page__text--small_gray\">\r\n                        {`${type}, ${size}`}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div className=\"cart-item__counter-block\">\r\n                <i onClick={() => onDecrease(id)}\r\n                    className=\"fas fa-minus-circle cart-item__counter-icon\"></i>\r\n                <p className=\"cart-page__text cart-item__count\">{count}</p>\r\n                <i onClick={() => onIncrease(id)}\r\n                    className=\"fas fa-plus-circle cart-item__counter-icon\"></i>\r\n            </div>\r\n            <div className=\"cart-item__price\">\r\n                <p className=\"cart-page__text\">{total} ₴</p>\r\n            </div>\r\n            <div className=\"cart-item__close\">\r\n                <i onClick={() => onDelete(id)}\r\n                    className=\"far fa-times-circle cart-item__close-icon\"></i>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onIncrease: (id) => dispatch(increasePizza(id)),\r\n        onDecrease: (id) => dispatch(decreasePizza(id)),\r\n        onDelete: (id) => dispatch(deletePizza(id))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(CartItem)","import React from 'react'\r\nimport './CartList.scss'\r\nimport CartItem from '../CartItem/CartItem'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { clearCart } from '../../actions'\r\n\r\n\r\nconst CartList = ({ cartPizzas, total,\r\n    cartCount, onClearCart }) => {\r\n\r\n    const renderCartPizzas = (cartPizzas) => {\r\n        return cartPizzas.map((pizza) => {\r\n            return <CartItem {...pizza} key={pizza.id} />\r\n        })\r\n    }\r\n\r\n    return <section className=\"cart-page\">\r\n        <section className=\"cart-page__header\">\r\n            <div className=\"cart-page__title\">\r\n                <i className=\"fas fa-shopping-cart cart-page__cart-icon\"></i>\r\n                <p className=\"cart-page__text cart-page__text--title\">Корзина</p>\r\n            </div>\r\n            <div onClick={() => onClearCart()}\r\n                className=\"cart-page__clear\">\r\n                <span className=\"cart-page__clear-underscore\"></span>\r\n                <i className=\"far fa-trash-alt cart-page__trash-icon\"></i>\r\n                <p className=\"cart-page__text cart-page__text--small_gray\">\r\n                    Очистити корзину\r\n                </p>\r\n            </div>\r\n        </section>\r\n        <section className=\"cart-page__cart-list\">\r\n\r\n            {renderCartPizzas(cartPizzas)}\r\n\r\n        </section>\r\n        <section className=\"cart-page__info-block\">\r\n            <div className=\"cart-page__text-block\">\r\n                <span className=\"cart-page__text cart-page__text--thin\">Всього піц: </span>\r\n                <span className=\"cart-page__text\">{cartCount} шт</span>\r\n            </div>\r\n            <div className=\"cart-page__text-block\">\r\n                <span className=\"cart-page__text cart-page__text--thin\">Сума заказу: </span>\r\n                <span className=\"cart-page__text cart-page__text--orange\">{total} ₴</span>\r\n            </div>\r\n        </section>\r\n        <section className=\"cart-page__buttons-block\">\r\n            <Link to=\"/\">\r\n                <button className=\"cart-page__nav-button\">\r\n                    <span className=\"cart-page__text cart-page__text--small_gray\">\r\n                        Повернутись назад\r\n                    </span>\r\n                </button>\r\n            </Link>\r\n            <button className=\"cart-page__nav-button cart-page__nav-button--order\">\r\n                Оплатити\r\n            </button>\r\n        </section>\r\n    </section>\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onClearCart: () => dispatch(clearCart())\r\n    }\r\n}\r\nconst mapStateToProps = ({ shoppingCart: { cartPizzas, total, cartCount } }) => {\r\n    return { cartPizzas, total, cartCount }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CartList)","import React from 'react'\r\n\r\nimport CartList from '../CartList/CartList'\r\nimport Header from '../Header/Header'\r\nimport { Redirect } from 'react-router';\r\nimport { connect } from 'react-redux'\r\n\r\nconst CartPage = ({ emptyCart }) => {\r\n\r\n    if (emptyCart) return <Redirect to=\"/cart-empty\" />\r\n\r\n    return (\r\n        <>\r\n            <Header simpleHeader />\r\n            <CartList />\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ shoppingCart: { cartPizzas } }) => {\r\n    return {\r\n        emptyCart: cartPizzas.length === 0\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CartPage)","import React from 'react'\r\nimport './CartFailure.scss'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst CartFailure = ({ logout }) => {\r\n\r\n    let title = 'Корзина пуста 😕'\r\n    let subtitle = 'Схоже, що ви ще не вибрали жодної піци. Для того, щоб вибрати піцу, поверністья на головну сторінку'\r\n    if (logout) {\r\n        title = \"Ви не ввійшли у свій аккаунт 😕\"\r\n        subtitle = 'Схоже, що ви не авторизувались, для того, щоб увійти, натисність кнопку вгорі'\r\n    }\r\n\r\n    return <div className=\"cart-failure\">\r\n        <h2 className=\"cart-failure__title\">\r\n            {title}\r\n        </h2>\r\n        <p className=\"cart-failure__sub-title\">\r\n            {subtitle}\r\n        </p>\r\n        <img src=\"empty-cart.png\" className=\"cart-failure__img\" alt=\"empty-cart\" />\r\n\r\n        <Link to=\"/\">\r\n            <button className=\"cart-failure__back\">Повернутися назад</button>\r\n        </Link>\r\n\r\n    </div>\r\n}\r\n\r\nexport default CartFailure","import React from 'react'\r\n\r\nimport CartFailure from '../CartFailure/CartFailure'\r\nimport Header from '../Header/Header'\r\n\r\nconst CartFailurePage = ({ logout }) => {\r\n    return (\r\n        <>\r\n            <Header simpleHeader />\r\n            <CartFailure logout={logout} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CartFailurePage","import React from 'react'\r\nimport './Login.scss'\r\n\r\nconst Login = () => {\r\n    return <div className=\"container\">\r\n        <div className=\"box\">\r\n            <input\r\n                type=\"checkbox\"\r\n                id=\"toggle\"\r\n                className=\"box__toggle\"\r\n                hidden />\r\n            <img src=\"https://source.unsplash.com/zv3ckJKftC4/300x400\" alt=\"by Autumn Studio\" className=\"box__image\" />\r\n\r\n            <div className=\"form form--register\" action=\"\">\r\n                <h1 className=\"form__title\">Реєстрація</h1>\r\n\r\n                <div className=\"form__helper\">\r\n                    <input type=\"text\"\r\n                        name=\"user\"\r\n                        id=\"new-user\"\r\n                        placeholder=\"User\"\r\n                        className=\"form__input\" />\r\n                    <label className=\"form__label\" htmlFor=\"new-user\">\r\n                        Ім'я\r\n                    </label>\r\n                </div>\r\n\r\n                <div className=\"form__helper\">\r\n                    <input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Email\" className=\"form__input\" />\r\n                    <label className=\"form__label\" htmlFor=\"email\">Електрона скринька</label>\r\n                </div>\r\n\r\n                <div className=\"form__helper\">\r\n                    <input type=\"password\" name=\"password\" id=\"new-user-password\" placeholder=\"Password\" className=\"form__input\" />\r\n                    <label className=\"form__label\" htmlFor=\"new-user-password\">Пароль</label>\r\n                </div>\r\n\r\n                <div className=\"form__helper\">\r\n                    <input type=\"password\" name=\"password\" id=\"confirm-password\" placeholder=\"Confirm password\" className=\"form__input\" />\r\n                    <label className=\"form__label\" htmlFor=\"confirm-password\">Підтвердження паролю</label>\r\n                </div>\r\n\r\n                <button className=\"form__button\">Зареєструватися</button>\r\n\r\n                <p className=\"form__text\">Вже зареєстровані? <label htmlFor=\"toggle\" className=\"form__link\">Увійти в аккаунт!</label> </p>\r\n            </div>\r\n\r\n            <div className=\"form form--login\">\r\n                <h1 className=\"form__title\">Вхід</h1>\r\n\r\n                <div className=\"form__helper\">\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"user\"\r\n                        id=\"user\"\r\n                        placeholder=\"User\"\r\n                        className=\"form__input\" />\r\n                    <label className=\"form__label\" htmlFor=\"user\">\r\n                        Ім'я\r\n                    </label>\r\n                </div>\r\n\r\n                <div className=\"form__helper\">\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        id=\"password\"\r\n                        placeholder=\"Password\"\r\n                        className=\"form__input\" />\r\n                    <label className=\"form__label\" htmlFor=\"password\">\r\n                        Пароль\r\n                    </label>\r\n                </div>\r\n\r\n                <button className=\"form__button\">\r\n                    Увійти\r\n                </button>\r\n\r\n                <p className=\"form__text\">Ще не зареєстровані? <label htmlFor=\"toggle\" className=\"form__link\">Пройти реєстрацію!</label> </p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n}\r\n\r\nexport default Login","import React from 'react'\r\nimport Header from '../Header/Header'\r\nimport Login from '../Login/Login'\r\n\r\nconst LoginPage = () => {\r\n    return (\r\n        <>\r\n            <Header simpleHeader />\r\n            <Login />\r\n        </>\r\n    )\r\n}\r\nexport default LoginPage","import React from 'react';\nimport './App.scss';\nimport MainPage from '../Pages/MainPage'\nimport CartPage from '../Pages/CartPage'\nimport CartFailurePage from '../Pages/CartFailurePage';\nimport LoginPage from '../Pages/LoginPage'\n\nimport { Route } from 'react-router-dom'\n\nconst App = () => {\n  return <div className=\"wrapper\">\n    <Route path=\"/\" component={MainPage} exact />\n    <Route path=\"/cart\" component={CartPage} exact />\n    <Route path=\"/cart-empty\" component={CartFailurePage} exact />\n    <Route path=\"/cart-login\" render={() => <CartFailurePage logout />} exact />\n    <Route path=\"/login\" component={LoginPage} exact />\n  </div>\n}\n\nexport default App","const changeThicknessType = (state, id, type) => {\r\n    const { pizzaList: { filterPizzas } } = state\r\n    return filterPizzas.map((pizza) => {\r\n        if (pizza.id === id) {\r\n            const { size } = pizza.settings\r\n            const { markup, price } = pizza\r\n            const newId = `${pizza.initialId + type + size}`\r\n            return {\r\n                ...pizza,\r\n                totalPrice: price + markup[type] + markup[size],\r\n                settings: { type: type, size: size },\r\n                id: newId,\r\n                animation: false,\r\n            }\r\n        }\r\n        return pizza\r\n    })\r\n}\r\n\r\nconst changeSizeSettings = (state, id, size) => {\r\n    const { pizzaList: { filterPizzas } } = state\r\n    return filterPizzas.map((pizza) => {\r\n        if (pizza.id === id) {\r\n            const { type } = pizza.settings\r\n            const { markup, price } = pizza\r\n            const newId = `${pizza.initialId + type + size}`\r\n            return {\r\n                ...pizza,\r\n                totalPrice: price + markup[type] + markup[size],\r\n                settings: { type: type, size: size },\r\n                id: newId,\r\n                animation: false,\r\n            }\r\n        }\r\n        return pizza\r\n    })\r\n}\r\n\r\nconst filterItems = (listToFilter, filter) => {\r\n\r\n    const uniquePizzaId = listToFilter.map((item) => {\r\n        let { id, settings: { type, size } } = item\r\n        let newId = `${id + type + size}`\r\n        return {\r\n            ...item,\r\n            id: newId,\r\n            initialId: id,\r\n            animation: false,\r\n        }\r\n    })\r\n    if (filter === 'all') return uniquePizzaId\r\n    return uniquePizzaId.filter((pizza) => pizza.class.includes(filter))\r\n}\r\n\r\nconst sortItems = (listToSort, sortType) => {\r\n    if (sortType === 'cost') return listToSort.sort((a, b) => a.price > b.price ? 1 : -1);\r\n    if (sortType === 'popularity') return listToSort.sort((a, b) => a.popularity < b.popularity ? 1 : -1);\r\n    if (sortType === 'alphabet') return listToSort.sort((a, b) => a.name > b.name ? 1 : -1);\r\n    return listToSort\r\n}\r\n\r\n\r\n\r\n\r\nconst updatePizzaList = (state, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case 'FETCH_PIZZAS_REQUEST':\r\n            return {\r\n                ...state.pizzaList,\r\n                loader: true,\r\n            }\r\n        case 'FETCH_PIZZAS_SUCCES':\r\n            const pizzas = action.payload\r\n            const { sort, filter } = state.pizzaList\r\n            const filterPizzasList = filterItems(pizzas, filter)\r\n            const sortedAndFilteredList = sortItems(filterPizzasList, sort)\r\n\r\n            return {\r\n                ...state.pizzaList,\r\n                pizzas: pizzas,\r\n                filterPizzas: sortedAndFilteredList,\r\n                loader: false,\r\n            }\r\n        case 'FETCH_PIZZAS_FAILURE':\r\n            return {\r\n                ...state.pizzaList,\r\n                error: action.payload\r\n            }\r\n        case 'TYPE_PIZZA_CHOOSE':\r\n            const { id: pizzaIdType } = action.payload\r\n            const { type } = action.payload\r\n            const updatedTypeList = changeThicknessType(state, pizzaIdType, type)\r\n\r\n            return {\r\n                ...state.pizzaList,\r\n                filterPizzas: updatedTypeList,\r\n            }\r\n        case 'SIZE_PIZZA_CHOOSE':\r\n            const { id: pizzaIdSize } = action.payload\r\n            const { size } = action.payload\r\n            const updatedSizeList = changeSizeSettings(state, pizzaIdSize, size)\r\n            return {\r\n                ...state.pizzaList,\r\n                filterPizzas: updatedSizeList,\r\n            }\r\n\r\n        case 'FILTER_CHANGE':\r\n            const pizzaClass = action.payload\r\n            let listToFilter = state.pizzaList.pizzas\r\n            const filteredList = filterItems(listToFilter, pizzaClass)\r\n            return {\r\n                ...state.pizzaList,\r\n                filter: pizzaClass,\r\n                filterPizzas: filteredList\r\n            }\r\n        case 'SORT_CHANGE':\r\n            const sortType = action.payload;\r\n            const listToSort = state.pizzaList.filterPizzas.map((e) => e)\r\n            const sortedItems = sortItems(listToSort, sortType)\r\n            return {\r\n                ...state.pizzaList,\r\n                sort: sortType,\r\n                filterPizzas: sortedItems\r\n            }\r\n        case 'SORT_TOGGLE':\r\n            const { sortActive } = state.pizzaList\r\n            return {\r\n                ...state.pizzaList,\r\n                sortActive: !sortActive\r\n            }\r\n        case 'MOBILE_FILTER_TOGGLE':\r\n            const { mobileFilterActive } = state.pizzaList\r\n            return {\r\n                ...state.pizzaList,\r\n                sortActive: false,\r\n                mobileFilterActive: !mobileFilterActive\r\n            }\r\n\r\n        case 'ANIMATION_PIZZA_TOGGLE':\r\n            const currentPizzasList = state.pizzaList.filterPizzas\r\n            const pizzaIdToAnimate = action.payload\r\n            const newListToAnimate = currentPizzasList.map((item) => {\r\n                if (pizzaIdToAnimate === item.id) return {\r\n                    ...item,\r\n                    animation: true,\r\n                }\r\n                return item\r\n            })\r\n            return {\r\n                ...state.pizzaList,\r\n                filterPizzas: newListToAnimate\r\n            }\r\n        default: return state.pizzaList\r\n    }\r\n}\r\n\r\nexport default updatePizzaList","const createCartPizza = (state, pizzaId) => {\r\n    const { pizzaList: { filterPizzas } } = state\r\n    const selectedPizza = filterPizzas.find(({ id }) => id === pizzaId)\r\n\r\n    return {\r\n        name: selectedPizza.name,\r\n        total: selectedPizza.totalPrice,\r\n        settings: selectedPizza.settings,\r\n        img: selectedPizza.img,\r\n        count: 1,\r\n        id: selectedPizza.id,\r\n    }\r\n}\r\nconst isPizzaCartedChecker = (state, newCartedPizza) => {\r\n    const { id, settings: { type, size } } = newCartedPizza\r\n    const { cartPizzas } = state.shoppingCart\r\n    return cartPizzas\r\n        .find((pizza) => pizza.id === id\r\n            && pizza.settings.type === type\r\n            && pizza.settings.size === size)\r\n}\r\n\r\nconst increaseCartPizza = (state, cartedPizzaId, pizzaItem) => {\r\n    const { shoppingCart: { cartCount, total, cartPizzas } } = state\r\n    const newCartCount = cartCount + 1\r\n    const pizzaPricePerPiece = pizzaItem.total / pizzaItem.count\r\n    const newTotal = total + pizzaPricePerPiece\r\n\r\n    const updatedList = cartPizzas.map((pizza) => {\r\n        if (pizza.id === cartedPizzaId) return (\r\n            {\r\n                ...pizza,\r\n                count: ++pizza.count,\r\n                total: pizzaPricePerPiece + pizza.total\r\n            }\r\n        )\r\n        return pizza\r\n    })\r\n\r\n    return {\r\n        ...state.shoppingCart,\r\n        cartPizzas: updatedList,\r\n        total: newTotal,\r\n        cartCount: newCartCount,\r\n        cartPizzasKind: [\r\n            ...state.shoppingCart.cartPizzasKind,\r\n            pizzaItem.name\r\n        ]\r\n    }\r\n}\r\n\r\nconst decreaseCartPizza = (state, cartedPizzaId, pizzaItem) => {\r\n    const { shoppingCart: { cartCount, total, cartPizzas, cartPizzasKind } } = state\r\n\r\n    const newCartCount = cartCount - 1\r\n    const pizzaPricePerPiece = pizzaItem.total / pizzaItem.count\r\n    const newTotal = total - pizzaPricePerPiece\r\n\r\n    const updatedList = cartPizzas\r\n        .map((pizza) => {\r\n            if (pizza.id === cartedPizzaId) {\r\n                return {\r\n                    ...pizza,\r\n                    count: --pizza.count,\r\n                    total: pizza.total - pizzaPricePerPiece\r\n                }\r\n            }\r\n            return pizza\r\n        })\r\n    const newPizzaKindList = cartPizzasKind.map(e => e)\r\n    const indexOfPizzaKind = cartPizzasKind.lastIndexOf(pizzaItem.name)\r\n    if (indexOfPizzaKind > -1) newPizzaKindList.splice(indexOfPizzaKind, 1)\r\n\r\n    return {\r\n        ...state.shoppingCart,\r\n        cartPizzas: updatedList,\r\n        cartCount: newCartCount,\r\n        total: newTotal,\r\n        cartPizzasKind: newPizzaKindList\r\n    }\r\n}\r\n\r\nconst deletePizza = (state, deletedPizza, deletedPizzaId) => {\r\n    const { shoppingCart: { cartCount, total, cartPizzas, cartPizzasKind } } = state\r\n\r\n    const newList = cartPizzas.filter(({ id }) => id !== deletedPizzaId)\r\n    const newPizzaKindList = cartPizzasKind.map(e => e)\r\n    const indexOfPizzaKind = cartPizzasKind.indexOf(deletedPizza.name)\r\n    if (indexOfPizzaKind > -1) newPizzaKindList.splice(indexOfPizzaKind, deletedPizza.count)\r\n\r\n    return {\r\n        ...state.shoppingCart,\r\n        cartPizzas: newList,\r\n        total: total - deletedPizza.total,\r\n        cartCount: cartCount - deletedPizza.count,\r\n        cartPizzasKind: newPizzaKindList,\r\n    }\r\n}\r\n\r\n\r\nconst updateShoppingCart = (state, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n\r\n        case 'CART_PIZZA_ADD':\r\n            const actionAddPizzaId = action.payload\r\n            const newCartedPizza = createCartPizza(state, actionAddPizzaId)\r\n            const isPizzaCarted = isPizzaCartedChecker(state, newCartedPizza)\r\n\r\n            if (isPizzaCarted) return increaseCartPizza(state, actionAddPizzaId, newCartedPizza)\r\n\r\n            else {\r\n                const newCartCount = state.shoppingCart.cartCount + 1\r\n                const newTotal = state.shoppingCart.total + newCartedPizza.total\r\n                return {\r\n                    ...state.shoppingCart,\r\n                    cartCount: newCartCount,\r\n                    total: newTotal,\r\n                    cartPizzas: [\r\n                        ...state.shoppingCart.cartPizzas,\r\n                        newCartedPizza,\r\n                    ],\r\n                    cartPizzasKind: [\r\n                        ...state.shoppingCart.cartPizzasKind,\r\n                        newCartedPizza.name\r\n                    ],\r\n                }\r\n            }\r\n\r\n        case 'CART_PIZZA_INCREASE':\r\n            const { cartPizzas } = state.shoppingCart\r\n\r\n            const increaseId = action.payload\r\n            const pizzaToInc = cartPizzas.find(({ id }) => id === increaseId)\r\n\r\n            return increaseCartPizza(state, increaseId, pizzaToInc)\r\n\r\n        case 'CART_PIZZA_DECREASE': {\r\n            const { cartPizzas } = state.shoppingCart\r\n\r\n            const decreasePizzaId = action.payload\r\n            const pizzaToDec = cartPizzas.find(({ id }) => id === decreasePizzaId)\r\n\r\n            if (pizzaToDec.count <= 1) return deletePizza(state, pizzaToDec, decreasePizzaId)\r\n            return decreaseCartPizza(state, decreasePizzaId, pizzaToDec)\r\n        }\r\n\r\n        case 'CART_PIZZA_DELETE': {\r\n            const { cartPizzas } = state.shoppingCart\r\n\r\n            const deletedPizzaId = action.payload;\r\n            const deletedPizza = cartPizzas.find(({ id }) => id === deletedPizzaId)\r\n\r\n            return deletePizza(state, deletedPizza, deletedPizzaId)\r\n        }\r\n\r\n        case 'CART_CLEAR': {\r\n            return {\r\n                ...state.shoppingCart,\r\n                cartCount: 0,\r\n                total: 0,\r\n                cartPizzasKind: [],\r\n                cartPizzas: [],\r\n            }\r\n        }\r\n        default: return state.shoppingCart\r\n    }\r\n}\r\n\r\nexport default updateShoppingCart","import updatePizzaList from './pizza-list'\r\nimport updateShoppingCart from './shopping-cart'\r\n\r\nconst initState = {\r\n    mobileMenuActive: false,\r\n    shoppingCart: {\r\n        cartPizzas: [],\r\n        cartCount: 0,\r\n        total: 0,\r\n        cartPizzasKind: [],\r\n    },\r\n    pizzaList: {\r\n        pizzas: [],\r\n        filterPizzas: [],\r\n        filter: \"all\",\r\n        sort: \"popularity\",\r\n        sortActive: false,\r\n        mobileFilterActive: false,\r\n        loader: true,\r\n        error: null,\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'MOBILE_MENU_TOGGLE':\r\n            return {\r\n                ...state,\r\n                mobileMenuActive: !state.mobileMenuActive\r\n            }\r\n        default:\r\n            return {\r\n                ...state,\r\n                pizzaList: updatePizzaList(state, action),\r\n                shoppingCart: updateShoppingCart(state, action)\r\n            }\r\n    }\r\n}\r\n\r\nexport default reducer\r\n\r\n","import { createStore } from 'redux'\r\nimport reducer from './reducers'\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport { Provider } from 'react-redux'\nimport { HashRouter as Router } from 'react-router-dom'\nimport store from './store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}