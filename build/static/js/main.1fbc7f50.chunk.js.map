{"version":3,"sources":["components/Header/Header.js","actions.js","components/Filter/Filter.js","components/Filter/FilterContainer.js","components/Loader/Loader.js","components/PizzaItem/PizzaItem.js","components/PizzaItem/PizzaItemContainer.js","components/PizzaList/PizzaList.js","pizza-service.js","components/Pages/MainPage.js","components/CartItem/CartItem.js","components/CartList/CartList.js","components/Pages/CartPage.js","components/CartFailure/CartFailure.js","components/Pages/CartFailurePage.js","components/LoginModal/LoginModal.js","components/LoginModal/LoginModalContainer.js","components/Login/Login.js","components/Login/LoginContainer.js","components/Pages/LoginPage.js","components/App/App.js","reducers/pizza-list.js","reducers/shopping-cart.js","reducers/login-page.js","reducers/index.js","store.js","index.js"],"names":["Header","cartButtonRender","onToggleMenu","mobileMenuClass","loginButton","className","onClick","src","alt","to","connect","shoppingCart","total","cartCount","mobileMenuActive","loginPage","name","logged","dispatch","type","onLogout","simpleHeader","Filter","filterList","sortList","currentSort","onToggleSort","arrowClass","sortListClass","onToggleFilter","mobileFilterClass","pizzaList","filter","sort","sortActive","mobileFilterActive","onFilter","filterKey","payload","onSort","sortType","changeSort","sortListRendered","label","map","item","idx","key","filterListRendered","Loader","PizzaItem","addToCartButtonState","price","img","thicknessSettingsRender","sizeSettingsRender","id","renderCount","pizzaItemImage","pizzaImageClass","buttonElement","ref","cartPizzasNameList","cartPizzasKind","onChooseType","choosePizzaType","onChooseSize","size","choosePizzaSize","onCartPizza","toggleAddAnimation","addPizzaToCart","totalPrice","settings","thickness","animation","useRef","count","pizzaName","currentPizzasCount","length","getPizzaCount","thinClass","classicClass","thicknessSettings","smallPizzaClass","mediumPizzaClass","largePizzaClass","sizeSettings","pizzaService","pizzas","markup","thin","classic","small","medium","large","class","popularity","Promise","resolve","setTimeout","filterPizzas","loader","pizzasLoaded","data","fetchError","err","fetchRequest","useEffect","getPizzas","then","catch","pizza","renderPizzas","MainPage","onIncrease","increasePizza","onDecrease","decreasePizza","onDelete","deletePizza","cartPizzas","onClearCart","renderCartPizzas","emptyCart","CartFailure","title","subtitle","logout","cartIsEmpty","LoginModal","modalMessage","modalMessageClass","onModalClose","warningModal","email","style","color","Login","onLogin","logErrClass","regNameErrClass","onRegisterName","regEmailErrClass","onRegisterEmail","regPassErrClass","onRegisterPass","regConfPassErrClass","onRegisterConfPass","onRegisterSubmit","regName","regEmail","regPass","regConfPass","regNameInput","regEmailInput","regPassInput","regConfPassInput","logName","logPass","hidden","action","value","onChange","current","placeholder","htmlFor","loginErr","password","loginRequest","confirmPassword","registerRequest","useState","setRegName","setRegEmail","setRegPass","setRegConfPass","test","match","App","path","component","exact","CartPage","CartFailurePage","render","LoginPage","filterItems","listToFilter","uniquePizzaId","newId","initialId","includes","sortItems","listToSort","a","b","updatePizzaList","state","filterPizzasList","sortedAndFilteredList","error","updatedTypeList","changeThicknessType","updatedSizeList","changeSizeSettings","pizzaClass","filteredList","e","sortedItems","currentPizzasList","pizzaIdToAnimate","newListToAnimate","increaseCartPizza","cartedPizzaId","pizzaItem","newCartCount","pizzaPricePerPiece","newTotal","updatedList","deletedPizza","deletedPizzaId","newList","newPizzaKindList","indexOfPizzaKind","indexOf","splice","updateShoppingCart","actionAddPizzaId","newCartedPizza","pizzaId","selectedPizza","find","createCartPizza","isPizzaCartedChecker","increaseId","pizzaToInc","decreasePizzaId","pizzaToDec","lastIndexOf","decreaseCartPizza","isNameBusy","registerContainer","localStorage","userList","JSON","parse","toUpperCase","isEmailBusy","updateLoginPage","loginName","loginPassword","userToLogin","validationContainer","errorStatus","push","validationIsCorrect","usersList","newUsersList","stringify","setItem","newUser","setNewUser","initState","reducer","store","createStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1fbc7f50.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Header.scss'\r\nimport { connect } from 'react-redux'\r\nimport { toggleMenuWindow, logout } from '../../actions'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst HeaderContainer = ({\r\n    simpleHeader,\r\n    onToggleMenu,\r\n    mobileMenuActive,\r\n    total, cartCount,\r\n    name, logged,\r\n    onLogout,\r\n}) => {\r\n    let mobileMenuClass = mobileMenuActive ?\r\n        'header__buttons-block header__buttons-block--active' : 'header__buttons-block'\r\n\r\n    const cartButtonRender = simpleHeader ?\r\n        null : (\r\n            <div className=\"cart\" onClick={() => onToggleMenu()}>\r\n                <div className=\"cart__price\">{total}₴</div>\r\n                <div className=\"cart__line\"></div>\r\n                <div className=\"cart__count\">\r\n                    <i className=\"fas fa-shopping-cart cart__icon\"></i>\r\n                    {cartCount}\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    const loginButton = logged ?\r\n\r\n        <div className=\"header__welcome\">\r\n            <p>Ласкаво просимо - </p>\r\n            <p className=\" header__welcome header__welcome--nick\">\r\n                {name}!\r\n            </p>\r\n            <p className=\"header__logout\" onClick={() => onLogout()}>\r\n                Вийти\r\n            </p>\r\n        </div>\r\n        :\r\n        <Link to=\"/login\">\r\n            <section onClick={() => onToggleMenu()}\r\n                className=\"header__login\">\r\n                Увійти\r\n                </section>\r\n        </Link>\r\n\r\n\r\n    return <Header\r\n        onToggleMenu={onToggleMenu}\r\n        mobileMenuClass={mobileMenuClass}\r\n        cartButtonRender={cartButtonRender}\r\n        loginButton={loginButton}\r\n    />\r\n}\r\n\r\nconst Header = ({\r\n    cartButtonRender,\r\n    onToggleMenu,\r\n    mobileMenuClass,\r\n    loginButton\r\n}) => {\r\n    return <header className=\"header\">\r\n        <div className=\"header__burger\"\r\n            onClick={() => onToggleMenu()}>\r\n            <i className=\"fab fa-elementor\"></i>\r\n        </div>\r\n\r\n\r\n        <section className=\"header__logo-block\">\r\n            <img src=\"./logo.svg\" className=\"header__logo\" alt=\"logo\" />\r\n            <Link to=\"/\">\r\n                <section className=\"header__text-block\">\r\n                    <h1 className=\"header__title\">Pizza Delivery</h1>\r\n                    <p className=\"header__subtitle\">Найсмачніша піцца у нашому вимірі</p>\r\n                </section>\r\n            </Link>\r\n        </section>\r\n\r\n\r\n        <section className={mobileMenuClass}>\r\n            <section className=\"header__close\" onClick={() => onToggleMenu()}>\r\n                X\r\n            </section>\r\n\r\n            {loginButton}\r\n\r\n            <Link to=\"/cart\">\r\n                {cartButtonRender}\r\n            </Link>\r\n\r\n        </section>\r\n    </header>\r\n}\r\n\r\nconst mapStateToProps = ({\r\n    shoppingCart:\r\n    { total, cartCount },\r\n    mobileMenuActive,\r\n    loginPage:\r\n    { name, logged } }) => {\r\n    return {\r\n        mobileMenuActive,\r\n        total,\r\n        cartCount,\r\n        name,\r\n        logged\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onToggleMenu: () => dispatch(toggleMenuWindow()),\r\n        onLogout: () => dispatch(logout())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderContainer)","const fetchPizzas = (pizzas) => {\r\n    return {\r\n        type: 'FETCH_PIZZAS_SUCCES',\r\n        payload: pizzas\r\n    }\r\n}\r\nconst fetchError = (err) => {\r\n    return {\r\n        type: 'FETCH_PIZZAS_FAILURE',\r\n        payload: err\r\n    }\r\n}\r\nconst fetchRequest = () => {\r\n    return {\r\n        type: 'FETCH_PIZZAS_REQUEST'\r\n    }\r\n}\r\n\r\nconst choosePizzaType = (id, type, name) => {\r\n    return {\r\n        type: 'TYPE_PIZZA_CHOOSE',\r\n        payload: {\r\n            id,\r\n            type,\r\n            name,\r\n        }\r\n    }\r\n}\r\n\r\nconst choosePizzaSize = (id, size, name) => {\r\n    return {\r\n        type: 'SIZE_PIZZA_CHOOSE',\r\n        payload: {\r\n            id,\r\n            size,\r\n            name\r\n        }\r\n    }\r\n}\r\n\r\nconst changeFilter = (filter) => {\r\n    return {\r\n        type: 'FILTER_CHANGE',\r\n        payload: filter,\r\n    }\r\n}\r\nconst changeSort = (sortType) => {\r\n    return {\r\n        type: 'SORT_CHANGE',\r\n        payload: sortType,\r\n    }\r\n}\r\nconst toggleSortWindow = () => {\r\n    return {\r\n        type: 'SORT_TOGGLE'\r\n    }\r\n}\r\nconst toggleMenuWindow = () => {\r\n    return {\r\n        type: 'MOBILE_MENU_TOGGLE'\r\n    }\r\n}\r\nconst toggleFilterWindow = () => {\r\n    return {\r\n        type: 'MOBILE_FILTER_TOGGLE'\r\n    }\r\n}\r\nconst addPizzaToCart = (id) => {\r\n    return {\r\n        type: 'CART_PIZZA_ADD',\r\n        payload: id\r\n    }\r\n}\r\nconst increasePizza = (id) => {\r\n    return {\r\n        type: 'CART_PIZZA_INCREASE',\r\n        payload: id\r\n    }\r\n}\r\nconst decreasePizza = (id) => {\r\n    return {\r\n        type: 'CART_PIZZA_DECREASE',\r\n        payload: id\r\n    }\r\n}\r\n\r\nconst deletePizza = (id) => {\r\n    return {\r\n        type: 'CART_PIZZA_DELETE',\r\n        payload: id,\r\n    }\r\n}\r\nconst clearCart = () => {\r\n    return {\r\n        type: 'CART_CLEAR'\r\n    }\r\n}\r\nconst toggleAddAnimation = (id) => {\r\n    return {\r\n        type: 'ANIMATION_PIZZA_TOGGLE',\r\n        payload: id,\r\n    }\r\n}\r\n\r\nconst loginRequest = (name, password) => {\r\n    return {\r\n        type: 'LOGIN_REQUEST',\r\n        payload: {\r\n            name,\r\n            password\r\n        }\r\n    }\r\n}\r\nconst logout = () => {\r\n    return {\r\n        type: 'LOG_OUT'\r\n    }\r\n}\r\nconst registerRequest = (name, email, password, confirmPassword) => {\r\n    return {\r\n        type: 'REGISTER_REQUEST',\r\n        payload: {\r\n            name,\r\n            email,\r\n            password,\r\n            confirmPassword,\r\n        }\r\n    }\r\n}\r\nconst warningModalRemove = () => {\r\n    return {\r\n        type: 'WARNING_MODAL_REMOVE'\r\n    }\r\n}\r\nexport {\r\n    fetchRequest,\r\n    fetchPizzas,\r\n    fetchError,\r\n    choosePizzaType,\r\n    choosePizzaSize,\r\n    changeFilter,\r\n    changeSort,\r\n    toggleSortWindow,\r\n    toggleMenuWindow,\r\n    toggleFilterWindow,\r\n    addPizzaToCart,\r\n    increasePizza,\r\n    decreasePizza,\r\n    deletePizza,\r\n    clearCart,\r\n    toggleAddAnimation,\r\n    loginRequest,\r\n    logout,\r\n    registerRequest,\r\n    warningModalRemove,\r\n}","import React from 'react'\r\nimport './Filter.scss'\r\n\r\n\r\nconst Filter = ({ filterList, sortList,\r\n    currentSort, onToggleSort,\r\n    arrowClass, sortListClass,\r\n    onToggleFilter, mobileFilterClass }) => {\r\n\r\n    return <>\r\n        <section className=\"filter__mobile-trigger\"\r\n            onClick={onToggleFilter}>\r\n            Настройки пошуку\r\n    </section>\r\n        <section className={mobileFilterClass} >\r\n\r\n            <ul className=\"filter__filter-list\">\r\n                {filterList}\r\n            </ul>\r\n            <section className=\"filter__sort \" onClick={onToggleSort}>\r\n                <img src=\"./sort-arrow.svg\" className={arrowClass} alt=\"arrow\" />\r\n                <p className=\"filter__sort-text\">\r\n                    Сортувати за:\r\n                <span className=\"filter__sort-type\" > {currentSort}</span></p>\r\n                <ul className={sortListClass}>\r\n                    {sortList}\r\n                </ul>\r\n            </section>\r\n        </section>\r\n    </>\r\n}\r\n\r\n\r\n\r\nexport default Filter","import React from 'react'\r\nimport './Filter.scss'\r\nimport { connect } from 'react-redux'\r\nimport Filter from './Filter'\r\nimport {\r\n    changeFilter, changeSort,\r\n    toggleSortWindow,\r\n    toggleFilterWindow\r\n} from '../../actions'\r\n\r\n\r\nconst FilterContainer = ({ filter, sort,\r\n    onFilter, onSort,\r\n    sortActive, onToggleSort,\r\n    onToggleFilter, mobileFilterActive }) => {\r\n    let currentSort = sort\r\n\r\n    switch (currentSort) {\r\n        case 'popularity': currentSort = 'популярністю'; break;\r\n        case 'cost': currentSort = 'ціною'; break;\r\n        case 'alphabet': currentSort = 'алфавітом'; break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    const filterList = [\r\n        { type: 'all', label: \"Всі\" },\r\n        { type: 'meat', label: \"М'ясні\" },\r\n        { type: 'vegetable', label: \"Овочеві\" },\r\n        { type: 'spicy', label: 'Гострі' }\r\n    ]\r\n    const sortList = [\r\n        { type: 'popularity', label: \"Популярністю\" },\r\n        { type: 'cost', label: 'Ціною' },\r\n        { type: 'alphabet', label: \"Алфавітом\" }\r\n    ]\r\n\r\n    const sortListRendered = sortList.map((item, idx) => {\r\n        if (sort === item.type) return (\r\n            <li key={idx}\r\n                className=\"sort__item sort__item--active\"\r\n                onClick={() => onSort(item.type)}>\r\n                {item.label}\r\n            </li>\r\n        )\r\n        return <li key={idx}\r\n            className=\"sort__item\"\r\n            onClick={() => onSort(item.type)}>\r\n            {item.label}\r\n        </li>\r\n    });\r\n\r\n    const filterListRendered = filterList.map((item, idx) => {\r\n        if (item.type === filter) return (\r\n            <li key={idx}\r\n                onClick={() => onFilter(item.type)}\r\n                className=\"filter-list__item filter-list__item--active\">\r\n                {item.label}\r\n            </li>\r\n        )\r\n\r\n        return (\r\n            <li key={idx}\r\n                onClick={() => onFilter(item.type)}\r\n                className=\"filter-list__item\">\r\n                {item.label}\r\n            </li>\r\n        )\r\n    })\r\n\r\n    const mobileFilterClass = mobileFilterActive ?\r\n        'filter-container filter-container--active' : 'filter-container'\r\n    const sortListClass = sortActive ?\r\n        'sort__list sort__list--active' : 'sort__list'\r\n    const arrowClass = sortActive ?\r\n        'sort__arrow-disabled' : 'sort__arrow-active'\r\n\r\n\r\n\r\n    return <Filter filterList={filterListRendered}\r\n        sortList={sortListRendered}\r\n        currentSort={currentSort}\r\n        onSort={onSort}\r\n        onToggleSort={onToggleSort}\r\n        arrowClass={arrowClass}\r\n        sortListClass={sortListClass}\r\n        onToggleFilter={onToggleFilter}\r\n        mobileFilterClass={mobileFilterClass} />\r\n}\r\n\r\nconst mapStateToProps = ({ pizzaList: { filter, sort, sortActive, mobileFilterActive } }) => {\r\n    return { filter, sort, sortActive, mobileFilterActive }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onFilter: (filterKey) => dispatch(changeFilter(filterKey)),\r\n        onSort: (sortType) => dispatch(changeSort(sortType)),\r\n        onToggleSort: () => dispatch(toggleSortWindow()),\r\n        onToggleFilter: () => dispatch(toggleFilterWindow())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterContainer) ","import React from 'react'\r\nimport './Loader.scss'\r\n\r\nconst Loader = () => {\r\n    return <div className=\"lds-hourglass\"></div>\r\n}\r\n\r\nexport default Loader","import React from 'react'\r\nimport './PizzaItem.scss'\r\n\r\nconst PizzaItem = ({ name,\r\n    addToCartButtonState,\r\n    price, img,\r\n    thicknessSettingsRender,\r\n    sizeSettingsRender,\r\n    id, renderCount,\r\n    pizzaItemImage,\r\n    pizzaImageClass }) => {\r\n    const buttonElement = addToCartButtonState(id, renderCount)\r\n    return <section className=\"pizza-item__container\">\r\n        <div className=\"pizza-item__image-block\">\r\n            <img src={img} className=\"pizza-item__image-static\" alt=\"pizza\" />\r\n            <img src={img} className={pizzaImageClass} ref={pizzaItemImage} alt=\"pizza for animation\" />\r\n        </div>\r\n        <div className=\"pizza-item__title\">\r\n            <p className=\"pizza-item__text\">{name}</p>\r\n        </div>\r\n        <div className=\"pizza-settings__container pizza-item__text pizza-item__text--settings\">\r\n            {thicknessSettingsRender}\r\n            {sizeSettingsRender}\r\n\r\n        </div>\r\n        <div className=\"pizza-item__order\">\r\n            <p className=\"pizza-item__price pizza-item__text pizza-item__text--price\">{price} ₴</p>\r\n            {buttonElement}\r\n        </div>\r\n    </section>\r\n}\r\n\r\nexport default PizzaItem","import React, { useRef } from 'react'\r\nimport './PizzaItem.scss'\r\nimport PizzaItem from './PizzaItem'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { choosePizzaType, choosePizzaSize, addPizzaToCart, toggleAddAnimation } from '../../actions'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst PizzaItemContainer = ({\r\n    logged,\r\n    name, id,\r\n    totalPrice, img,\r\n    settings: { type: thickness = 'thin',\r\n        size = 'small' },\r\n    onChooseType,\r\n    onChooseSize,\r\n    onCartPizza,\r\n    cartPizzasNameList,\r\n    animation }) => {\r\n\r\n    const pizzaItemImage = useRef(null)\r\n\r\n    const getPizzaCount = (cartPizzasNameList, pizzaName) => {\r\n        const currentPizzasCount = cartPizzasNameList.filter((name) => name === pizzaName)\r\n        if (currentPizzasCount.length > 0) return currentPizzasCount.length\r\n        return null\r\n    }\r\n\r\n    const addToCartButtonState = (id, renderCount) => {\r\n        if (logged) return (\r\n            <button onClick={() => onCartPizza(id)}\r\n                className=\"pizza-item__order-button\">\r\n                <img src=\"./plus.png\" className=\"pizza-item__plus\" alt=\"plus\" />\r\n                <p className=\"pizza-item__order-text\">\r\n                    Добавити\r\n                </p>\r\n                {renderCount}\r\n            </button>\r\n        )\r\n        else return (\r\n            <Link to=\"/cart-login\">\r\n                <button className=\"pizza-item__order-button\">\r\n                    <img src=\"./plus.png\" className=\"pizza-item__plus\" alt=\"plus\" />\r\n                    <p className=\"pizza-item__order-text\">\r\n                        Добавити\r\n                </p>\r\n                    {renderCount}\r\n                </button>\r\n            </Link>\r\n        )\r\n    }\r\n\r\n    const thicknessSettings = (thickness) => {\r\n        let thinClass = \"pizza-settings__thickness\"\r\n        let classicClass = \"pizza-settings__thickness\"\r\n\r\n        if (thickness === 'classic') classicClass += ' pizza-settings__thickness--active'\r\n        if (thickness === 'thin') thinClass += ' pizza-settings__thickness--active'\r\n        return (\r\n            <>\r\n                <div className={thinClass} onClick={() => onChooseType(id, 'thin', name)}>тонка</div>\r\n                <div className={classicClass} onClick={() => onChooseType(id, 'classic', name)}>стандартна</div>\r\n            </>\r\n        )\r\n    }\r\n    const sizeSettings = (size) => {\r\n\r\n        let smallPizzaClass = 'pizza-settings__size';\r\n        let mediumPizzaClass = 'pizza-settings__size';\r\n        let largePizzaClass = 'pizza-settings__size';\r\n\r\n        if (size === 'small') smallPizzaClass += ' pizza-settings__size--active'\r\n        if (size === 'medium') mediumPizzaClass += ' pizza-settings__size--active'\r\n        if (size === 'large') largePizzaClass += ' pizza-settings__size--active'\r\n\r\n        return (\r\n            <>\r\n                <div className={smallPizzaClass} onClick={() => onChooseSize(id, 'small', name)}>26 см.</div>\r\n                <div className={mediumPizzaClass} onClick={() => onChooseSize(id, 'medium', name)}>30 см.</div>\r\n                <div className={largePizzaClass} onClick={() => onChooseSize(id, 'large', name)}>40 см.</div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const count = getPizzaCount(cartPizzasNameList, name)\r\n    const renderCount = count > 0 ?\r\n        <p className=\"pizza-item__order-count\">{count}</p> : null\r\n\r\n    const pizzaImageClass = animation ?\r\n        'pizza-item__image pizza-item__image--animated' : 'pizza-item__image'\r\n\r\n    return <PizzaItem name={name}\r\n        addToCartButtonState={addToCartButtonState}\r\n        price={totalPrice}\r\n        img={img}\r\n        thicknessSettingsRender={thicknessSettings(thickness)}\r\n        sizeSettingsRender={sizeSettings(size)}\r\n        onCartPizza={onCartPizza}\r\n        id={id}\r\n        renderCount={renderCount}\r\n        pizzaItemImage={pizzaItemImage}\r\n        pizzaImageClass={pizzaImageClass}\r\n    />\r\n}\r\n\r\n\r\nconst mapStateToProps = ({\r\n    shoppingCart:\r\n    { cartPizzasKind: cartPizzasNameList },\r\n    loginPage:\r\n    { logged }\r\n}) => {\r\n    return {\r\n        cartPizzasNameList,\r\n        logged\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onChooseType: (id, type, name) => dispatch(choosePizzaType(id, type, name)),\r\n        onChooseSize: (id, size, name) => dispatch(choosePizzaSize(id, size, name)),\r\n        onCartPizza: (id) => {\r\n            dispatch(toggleAddAnimation(id))\r\n            dispatch(addPizzaToCart(id))\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PizzaItemContainer)","import React, { useEffect } from 'react'\r\nimport './PizzaList.scss'\r\nimport { connect } from 'react-redux'\r\n\r\nimport Loader from '../Loader/Loader'\r\nimport PizzaItem from '../PizzaItem/PizzaItemContainer'\r\nimport PizzaService from '../../pizza-service'\r\nimport { fetchPizzas, fetchError, fetchRequest } from '../../actions'\r\n\r\n\r\nconst pizzaService = new PizzaService()\r\n\r\nconst renderPizzas = (pizzas) => {\r\n    return pizzas.map((pizza) => {\r\n        return <PizzaItem key={pizza.id}\r\n            {...pizza}\r\n        />\r\n    })\r\n}\r\nconst PizzaList = ({ pizzas,\r\n    sort,\r\n    fetchRequest,\r\n    pizzasLoaded,\r\n    filter,\r\n    fetchError,\r\n    loader, }) => {\r\n\r\n    useEffect(() => {\r\n        fetchRequest()\r\n        pizzaService.getPizzas()\r\n            .then((data) => pizzasLoaded(data))\r\n            .catch((err) => fetchError(err))\r\n    }, [filter, sort, fetchRequest, pizzasLoaded, fetchError])\r\n\r\n    switch (filter) {\r\n        case 'all': filter = 'Всі'; break;\r\n        case 'meat': filter = \"М'ясні\"; break;\r\n        case 'vegetable': filter = 'Овочеві'; break;\r\n        case 'spicy': filter = 'Гострі'; break;\r\n        default:\r\n            break;\r\n    }\r\n    if (loader) return <Loader />\r\n\r\n    return <main className=\"pizza-list__container\">\r\n        <section className=\"pizza-list__header\">\r\n            {filter} піцци\r\n        </section>\r\n        <section className=\"pizza-list\">\r\n            {renderPizzas(pizzas)}\r\n\r\n        </section>\r\n    </main>\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        pizzasLoaded: (data) => dispatch(fetchPizzas(data)),\r\n        fetchError: (err) => dispatch(fetchError(err)),\r\n        fetchRequest: () => dispatch(fetchRequest()),\r\n\r\n    }\r\n}\r\nconst mapStateToProps = ({ pizzaList: { filterPizzas: pizzas, filter, loader, sort } }) => {\r\n    return {\r\n        pizzas, filter, loader, sort\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PizzaList)","export default class PizzaService {\r\n    pizzas = [\r\n        {\r\n            name: \"Чізбургер-Піцца\",\r\n            img: './chizburger-pizza.png',\r\n            markup: {\r\n                thin: 0,\r\n                classic: 30,\r\n                small: 0,\r\n                medium: 15,\r\n                large: 45,\r\n            },\r\n            settings: {\r\n                size: 'small',\r\n                type: 'thin'\r\n            },\r\n            price: 101,\r\n            totalPrice: 101,\r\n            id: 1,\r\n            class: 'meat',\r\n            popularity: 0.3\r\n        },\r\n        {\r\n            name: \"Сирна\",\r\n            img: './cheeze.png',\r\n            markup: {\r\n                thin: 0,\r\n                classic: 26,\r\n                small: 0,\r\n                medium: 20,\r\n                large: 38,\r\n            },\r\n            settings: {\r\n                size: 'small',\r\n                type: 'thin',\r\n            },\r\n            price: 99,\r\n            totalPrice: 99,\r\n            id: 2,\r\n            class: 'vegetable',\r\n            popularity: 0.5,\r\n        },\r\n        {\r\n            name: \"Криветки по-азіатськи\",\r\n            img: './shrimp.png',\r\n            markup: {\r\n                thin: 0,\r\n                classic: 41,\r\n                small: 0,\r\n                medium: 29,\r\n                large: 65,\r\n            },\r\n            settings: {\r\n                size: 'small',\r\n                type: 'thin'\r\n            },\r\n            price: 95,\r\n            totalPrice: 95,\r\n            id: 3,\r\n            class: 'meat',\r\n            popularity: 0.99,\r\n        },\r\n        {\r\n            name: \"Сирне курча\",\r\n            img: './cheeze-chicken.png',\r\n            markup: {\r\n                thin: 0,\r\n                classic: 30,\r\n                small: 0,\r\n                medium: 15,\r\n                large: 25,\r\n            },\r\n            settings: {\r\n                size: 'small',\r\n                type: 'thin'\r\n            },\r\n            price: 95,\r\n            totalPrice: 95,\r\n            id: 4,\r\n            class: ['spicy', 'meat'],\r\n            popularity: 0.6\r\n        },\r\n    ]\r\n    getPizzas() {\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => resolve(this.pizzas), 600)\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport Header from '../Header/Header'\r\nimport Filter from '../Filter/FilterContainer'\r\nimport PizzaList from '../PizzaList/PizzaList'\r\n\r\nconst MainPage = () => {\r\n    return <>\r\n        <Header />\r\n        <Filter />\r\n        <PizzaList />\r\n    </>\r\n}\r\nexport default MainPage","import React from 'react'\r\nimport './CartItem.scss'\r\nimport { increasePizza, decreasePizza, deletePizza } from '../../actions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst CartItem = ({\r\n    name, total,\r\n    img,\r\n    settings,\r\n    count, id,\r\n    onIncrease,\r\n    onDecrease,\r\n    onDelete, }) => {\r\n\r\n    let size = settings.size\r\n    let type = settings.type\r\n\r\n    switch (settings.type) {\r\n        case 'thin': type = 'Тонке тісто'; break;\r\n        case 'classic': type = 'Товсте тісто'; break;\r\n        default: break;\r\n    }\r\n    switch (settings.size) {\r\n        case 'small': size = '26 см.'; break;\r\n        case 'medium': size = '30 см.'; break;\r\n        case 'large': size = '40 см.'; break;\r\n        default: break;\r\n    }\r\n    return (\r\n        <div className=\"cart-item\">\r\n            <div className=\"cart-item__info-block\">\r\n                <img src={img} className=\"cart-item__img\" alt=\"pizza\" />\r\n                <div className=\"cart-item__info\">\r\n                    <p className=\"cart-page__text\">{name}</p>\r\n                    <p className=\"cart-page__text cart-page__text--small_gray\">\r\n                        {`${type}, ${size}`}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div className=\"cart-item__counter-block\">\r\n                <i onClick={() => onDecrease(id)}\r\n                    className=\"fas fa-minus-circle cart-item__counter-icon\"></i>\r\n                <p className=\"cart-page__text cart-item__count\">{count}</p>\r\n                <i onClick={() => onIncrease(id)}\r\n                    className=\"fas fa-plus-circle cart-item__counter-icon\"></i>\r\n            </div>\r\n            <div className=\"cart-item__price\">\r\n                <p className=\"cart-page__text\">{total} ₴</p>\r\n            </div>\r\n            <div className=\"cart-item__close\">\r\n                <i onClick={() => onDelete(id)}\r\n                    className=\"far fa-times-circle cart-item__close-icon\"></i>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onIncrease: (id) => dispatch(increasePizza(id)),\r\n        onDecrease: (id) => dispatch(decreasePizza(id)),\r\n        onDelete: (id) => dispatch(deletePizza(id))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(CartItem)","import React from 'react'\r\nimport './CartList.scss'\r\nimport CartItem from '../CartItem/CartItem'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { clearCart } from '../../actions'\r\n\r\n\r\nconst CartList = ({ cartPizzas, total,\r\n    cartCount, onClearCart }) => {\r\n\r\n    const renderCartPizzas = (cartPizzas) => {\r\n        return cartPizzas.map((pizza) => {\r\n            return <CartItem {...pizza} key={pizza.id} />\r\n        })\r\n    }\r\n\r\n    return <section className=\"cart-page\">\r\n        <section className=\"cart-page__header\">\r\n            <div className=\"cart-page__title\">\r\n                <i className=\"fas fa-shopping-cart cart-page__cart-icon\"></i>\r\n                <p className=\"cart-page__text cart-page__text--title\">Корзина</p>\r\n            </div>\r\n            <div onClick={() => onClearCart()}\r\n                className=\"cart-page__clear\">\r\n                <span className=\"cart-page__clear-underscore\"></span>\r\n                <i className=\"far fa-trash-alt cart-page__trash-icon\"></i>\r\n                <p className=\"cart-page__text cart-page__text--small_gray\">\r\n                    Очистити корзину\r\n                </p>\r\n            </div>\r\n        </section>\r\n        <section className=\"cart-page__cart-list\">\r\n\r\n            {renderCartPizzas(cartPizzas)}\r\n\r\n        </section>\r\n        <section className=\"cart-page__info-block\">\r\n            <div className=\"cart-page__text-block\">\r\n                <span className=\"cart-page__text cart-page__text--thin\">Всього піц: </span>\r\n                <span className=\"cart-page__text\">{cartCount} шт</span>\r\n            </div>\r\n            <div className=\"cart-page__text-block\">\r\n                <span className=\"cart-page__text cart-page__text--thin\">Сума заказу: </span>\r\n                <span className=\"cart-page__text cart-page__text--orange\">{total} ₴</span>\r\n            </div>\r\n        </section>\r\n        <section className=\"cart-page__buttons-block\">\r\n            <Link to=\"/\">\r\n                <button className=\"cart-page__nav-button\">\r\n                    <span className=\"cart-page__text cart-page__text--small_gray\">\r\n                        Повернутись назад\r\n                    </span>\r\n                </button>\r\n            </Link>\r\n            <button className=\"cart-page__nav-button cart-page__nav-button--order\">\r\n                Оплатити\r\n            </button>\r\n        </section>\r\n    </section>\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onClearCart: () => dispatch(clearCart())\r\n    }\r\n}\r\nconst mapStateToProps = ({ shoppingCart: { cartPizzas, total, cartCount } }) => {\r\n    return { cartPizzas, total, cartCount }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CartList)","import React from 'react'\r\n\r\nimport CartList from '../CartList/CartList'\r\nimport Header from '../Header/Header'\r\nimport { Redirect } from 'react-router';\r\nimport { connect } from 'react-redux'\r\n\r\nconst CartPage = ({ emptyCart, logged }) => {\r\n\r\n    if (!logged) return <Redirect to=\"/cart-login\" />\r\n    if (emptyCart) return <Redirect to=\"/cart-empty\" />\r\n    if (!logged && !emptyCart) return <Redirect to=\"/cart-login\" />\r\n\r\n    return (\r\n        <>\r\n            <Header simpleHeader />\r\n            <CartList />\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ loginPage: { logged }, shoppingCart: { cartPizzas } }) => {\r\n    return {\r\n        logged,\r\n        emptyCart: cartPizzas.length === 0\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CartPage)","import React from 'react'\r\nimport './CartFailure.scss'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst CartFailure = ({ logout }) => {\r\n\r\n    let title = 'Корзина пуста 😕'\r\n    let subtitle = 'Схоже, що ви ще не вибрали жодної піци. Для того, щоб вибрати піцу, поверністья на головну сторінку'\r\n    if (logout) {\r\n        title = \"Ви не ввійшли у свій аккаунт 😕\"\r\n        subtitle = 'Схоже, що ви не авторизувались, для того, щоб зробити замовлення потрібно увійти, натисність кнопку вгорі'\r\n    }\r\n\r\n    return <div className=\"cart-failure\">\r\n        <h2 className=\"cart-failure__title\">\r\n            {title}\r\n        </h2>\r\n        <p className=\"cart-failure__sub-title\">\r\n            {subtitle}\r\n        </p>\r\n        <img src=\"empty-cart.png\" className=\"cart-failure__img\" alt=\"empty-cart\" />\r\n\r\n        <Link to=\"/\">\r\n            <button className=\"cart-failure__back\">Повернутися назад</button>\r\n        </Link>\r\n\r\n    </div>\r\n}\r\n\r\nexport default CartFailure","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nimport CartFailure from '../CartFailure/CartFailure'\r\nimport Header from '../Header/Header'\r\n\r\nconst CartFailurePage = ({ logout, cartIsEmpty, }) => {\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Header simpleHeader />\r\n            <CartFailure logout={logout} />\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ shoppingCart: { cartPizzas } }) => {\r\n    return {\r\n        cartIsEmpty: cartPizzas.length === 0\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CartFailurePage)","import React from 'react'\r\nimport './LoginModal.scss'\r\n\r\nconst LoginModal = ({ modalMessage, modalMessageClass, onModalClose }) => {\r\n    return <div className={modalMessageClass}>\r\n        <div className=\"login-modal\">\r\n            <div onClick={onModalClose}\r\n                className=\"login-modal__close\">\r\n                <i className=\"far fa-times-circle\"></i>\r\n            </div>\r\n            {modalMessage}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default LoginModal","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport LoginModal from './LoginModal'\r\nimport { warningModalRemove } from '../../actions'\r\n\r\nconst LoginModalContainer = ({ warningModal, onModalClose }) => {\r\n\r\n\r\n    let modalMessage = '';\r\n    if (warningModal.type === 'email') modalMessage = \"Вибачте, але ця електронна адреса вже зареєстрована у нашій системі\"\r\n    if (warningModal.type === 'name') modalMessage = \"Вибачте, але це ім'я вже зареєстроване у нашій системі\"\r\n    if (warningModal.type === 'form') modalMessage = \"Заповніть всі поля форми корректно, будьласка\"\r\n    if (warningModal.type === 'succes') {\r\n        const { name, email } = warningModal.payload\r\n        modalMessage = (\r\n            <span>\r\n                Вітаємо! Аккаунт з іменем\r\n                <span style={{ color: \"#fe1e1e\" }}> {name} </span>\r\n            був зареєстрований. Провірте вашу скриньку\r\n                <span style={{ color: \"#fe1e1e\" }}> {email} </span>\r\n             для підтвердження реєстрації!\r\n            </span>\r\n        )\r\n    }\r\n    const modalMessageClass = warningModal.type ?\r\n        'login-modal__container login-modal__container--active' : 'login-modal__container'\r\n\r\n\r\n    return <LoginModal\r\n        onModalClose={onModalClose}\r\n        modalMessage={modalMessage}\r\n        modalMessageClass={modalMessageClass} />\r\n}\r\n\r\nconst mapStateToProps = ({ loginPage: { warningModal } }) => {\r\n    return {\r\n        warningModal\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onModalClose: () => dispatch(warningModalRemove())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginModalContainer)\r\n","import React, { useRef } from 'react'\r\nimport './Login.scss'\r\nimport LoginModal from '../LoginModal/LoginModalContainer'\r\n\r\n\r\nconst Login = ({ onLogin,\r\n    logErrClass,\r\n    regNameErrClass,\r\n    onRegisterName,\r\n    regEmailErrClass,\r\n    onRegisterEmail,\r\n    regPassErrClass,\r\n    onRegisterPass,\r\n    regConfPassErrClass,\r\n    onRegisterConfPass,\r\n    onRegisterSubmit,\r\n    regName, regEmail,\r\n    regPass, regConfPass }) => {\r\n\r\n    const regNameInput = useRef(null)\r\n    const regEmailInput = useRef(null)\r\n    const regPassInput = useRef(null)\r\n    const regConfPassInput = useRef(null)\r\n    const logName = useRef(null)\r\n    const logPass = useRef(null)\r\n\r\n\r\n    return <div className=\"login__container\">\r\n        <LoginModal />\r\n        <div className=\"box\">\r\n            <input\r\n                type=\"checkbox\"\r\n                id=\"toggle\"\r\n                className=\"box__toggle\"\r\n                hidden />\r\n            <img src=\"https://source.unsplash.com/zv3ckJKftC4/300x400\" alt=\"by Autumn Studio\" className=\"box__image\" />\r\n\r\n            <div className=\"form form--register\" action=\"\">\r\n                <h1 className=\"form__title\">Реєстрація</h1>\r\n\r\n                <div className=\"form__helper\">\r\n\r\n                    <span className={regNameErrClass}>\r\n                        Ім'я може містити від 3 до 13 символів\r\n                    </span>\r\n\r\n                    <input type=\"text\"\r\n                        value={regName.value}\r\n                        onChange={() => onRegisterName(regNameInput.current.value)}\r\n                        name=\"user\"\r\n                        id=\"new-user\"\r\n                        placeholder=\"User\"\r\n                        className=\"form__input\"\r\n                        ref={regNameInput} />\r\n                    <label className=\"form__label\" htmlFor=\"new-user\">\r\n                        Ім'я\r\n                    </label>\r\n                </div>\r\n\r\n                <div className=\"form__helper\">\r\n                    <span className={regEmailErrClass}>\r\n                        Не вірний формат адреси\r\n                    </span>\r\n                    <input\r\n                        value={regEmail.value}\r\n                        ref={regEmailInput}\r\n                        onChange={() => onRegisterEmail(regEmailInput.current.value)}\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        id=\"email\"\r\n                        placeholder=\"Email\"\r\n                        className=\"form__input\" />\r\n                    <label className=\"form__label\" htmlFor=\"email\">Електрона скринька</label>\r\n                </div>\r\n\r\n                <div className=\"form__helper\">\r\n                    <span className={regPassErrClass}>\r\n                        Пароль повинен містити від 6 до 20 символів, цифри, та букви латинниці різних регістрів\r\n                    </span>\r\n                    <input\r\n                        value={regPass.value}\r\n                        ref={regPassInput}\r\n                        onChange={() => onRegisterPass(regPassInput.current.value)}\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        id=\"new-user-password\"\r\n                        placeholder=\"Password\"\r\n                        className=\"form__input\" />\r\n                    <label className=\"form__label\" htmlFor=\"new-user-password\">Пароль</label>\r\n                </div>\r\n\r\n                <div className=\"form__helper\">\r\n                    <span className={regConfPassErrClass}>\r\n                        Пароль не співпадає\r\n                    </span>\r\n                    <input\r\n                        value={regConfPass.value}\r\n                        ref={regConfPassInput}\r\n                        onChange={() => onRegisterConfPass(regConfPassInput.current.value)}\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        id=\"confirm-password\"\r\n                        placeholder=\"Confirm password\"\r\n                        className=\"form__input\" />\r\n                    <label className=\"form__label\" htmlFor=\"confirm-password\">Підтвердження паролю</label>\r\n                </div>\r\n\r\n                <button onClick={() => onRegisterSubmit(regName, regEmail, regPass, regConfPass)}\r\n                    className=\"form__button\">Зареєструватися</button>\r\n\r\n                <p className=\"form__text\">Вже зареєстровані? <label htmlFor=\"toggle\" className=\"form__link\">Увійти в аккаунт!</label> </p>\r\n            </div>\r\n\r\n            <div className=\"form form--login\">\r\n                <h1 className=\"form__title\">Вхід</h1>\r\n\r\n                <div className=\"form__helper\">\r\n\r\n                    <input\r\n                        ref={logName}\r\n                        type=\"text\"\r\n                        name=\"user\"\r\n                        id=\"user\"\r\n                        placeholder=\"User\"\r\n                        className=\"form__input\" />\r\n                    <label className=\"form__label\" htmlFor=\"user\">\r\n                        Ім'я\r\n                    </label>\r\n\r\n                </div>\r\n\r\n                <div className=\"form__helper\">\r\n                    <span className={logErrClass}>\r\n                        Ім'я або пароль не правильнi\r\n                    </span>\r\n                    <input\r\n                        ref={logPass}\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        id=\"password\"\r\n                        placeholder=\"Password\"\r\n                        className=\"form__input\" />\r\n                    <label className=\"form__label\" htmlFor=\"password\">\r\n                        Пароль\r\n                    </label>\r\n                </div>\r\n\r\n                <button onClick={() =>\r\n                    onLogin(logName.current.value,\r\n                        logPass.current.value)}\r\n                    className=\"form__button\">\r\n                    Увійти\r\n                </button>\r\n\r\n                <p className=\"form__text\">Ще не зареєстровані? <label htmlFor=\"toggle\" className=\"form__link\">Пройти реєстрацію!</label> </p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n}\r\n\r\n\r\nexport default Login","import React, { useState } from 'react'\r\nimport Login from './Login'\r\nimport './Login.scss'\r\nimport { connect } from 'react-redux'\r\nimport { loginRequest, registerRequest } from '../../actions'\r\n\r\n\r\n\r\nconst LoginContainer = ({ onLogin, onRegisterSubmit, loginErr }) => {\r\n\r\n    const [regName, setRegName] = useState({\r\n        value: '',\r\n        err: false,\r\n    })\r\n    const [regEmail, setRegEmail] = useState({\r\n        value: '',\r\n        err: false,\r\n    })\r\n    const [regPass, setRegPass] = useState({\r\n        value: '',\r\n        err: false,\r\n    })\r\n    const [regConfPass, setRegConfPass] = useState({\r\n        value: '',\r\n        err: false,\r\n    })\r\n    const onRegisterName = (value) => {\r\n        if (value.length >= 3 && value.length < 14) setRegName({\r\n            value: value,\r\n            err: false,\r\n        })\r\n        else setRegName({\r\n            value: value,\r\n            err: true,\r\n        })\r\n    }\r\n    const onRegisterEmail = (value) => {\r\n        const emailRegExp = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/\r\n        if (emailRegExp.test(value)) {\r\n            setRegEmail({\r\n                value: value,\r\n                err: false,\r\n            })\r\n        }\r\n        else setRegEmail({\r\n            value: value,\r\n            err: true,\r\n        })\r\n    }\r\n\r\n    const onRegisterPass = (value) => {\r\n        var passRegExp = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,20}$/;\r\n        if (value.match(passRegExp)) setRegPass({\r\n            value: value,\r\n            err: false,\r\n        })\r\n        else setRegPass({\r\n            value: value,\r\n            err: true,\r\n        })\r\n        if (value === regConfPass.value) setRegConfPass({\r\n            value: regConfPass.value,\r\n            err: false,\r\n        })\r\n        else setRegConfPass({\r\n            value: regConfPass.value,\r\n            err: true,\r\n        })\r\n    }\r\n    const onRegisterConfPass = (value) => {\r\n        if (value === regPass.value) setRegConfPass({\r\n            value: value,\r\n            err: false,\r\n        })\r\n        else setRegConfPass({\r\n            value: value,\r\n            err: true,\r\n        })\r\n    }\r\n\r\n    const logErrClass = loginErr ?\r\n        'log__err log__err--active' : 'log__err'\r\n\r\n    const regNameErrClass = regName.err ?\r\n        'reg__name-err reg__name-err--active' : 'reg__name-err'\r\n\r\n    const regEmailErrClass = regEmail.err ?\r\n        'reg__email-err reg__email-err--active' : 'reg__email-err'\r\n\r\n    const regPassErrClass = regPass.err ?\r\n        'reg__password-err reg__password-err--active' : 'reg__password-err'\r\n\r\n    const regConfPassErrClass = regConfPass.err ?\r\n        'reg__conf-password-err reg__conf-password-err--active' : 'reg__conf-password-err'\r\n\r\n\r\n    return <Login onLogin={onLogin}\r\n        logErrClass={logErrClass}\r\n        onRegisterName={onRegisterName}\r\n        regNameErrClass={regNameErrClass}\r\n        regEmailErrClass={regEmailErrClass}\r\n        onRegisterEmail={onRegisterEmail}\r\n        regPassErrClass={regPassErrClass}\r\n        onRegisterPass={onRegisterPass}\r\n        regConfPassErrClass={regConfPassErrClass}\r\n        onRegisterConfPass={onRegisterConfPass}\r\n        onRegisterSubmit={onRegisterSubmit}\r\n        regName={regName}\r\n        regEmail={regEmail}\r\n        regPass={regPass}\r\n        regConfPass={regConfPass} />\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onLogin: (name, password) => dispatch(loginRequest(name, password)),\r\n        onRegisterSubmit: (name, email, password, confirmPassword) => dispatch(\r\n            registerRequest(name, email, password, confirmPassword)\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ loginPage: { loginErr } }) => {\r\n    return {\r\n        loginErr\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginContainer)","import React from 'react'\r\nimport Header from '../Header/Header'\r\nimport Login from '../Login/LoginContainer'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router'\r\n\r\nconst LoginPage = ({ logged }) => {\r\n\r\n    if (logged) return <Redirect to=\"/\" />\r\n\r\n    return (\r\n        <>\r\n            <Header simpleHeader />\r\n            <Login />\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ loginPage: { logged } }) => {\r\n    return {\r\n        logged\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(LoginPage)","import React from 'react';\nimport './App.scss';\nimport MainPage from '../Pages/MainPage'\nimport CartPage from '../Pages/CartPage'\nimport CartFailurePage from '../Pages/CartFailurePage';\nimport LoginPage from '../Pages/LoginPage'\n\nimport { Route } from 'react-router-dom'\n\nconst App = () => {\n  return <div className=\"wrapper\">\n    <Route path=\"/\" component={MainPage} exact />\n    <Route path=\"/cart\" component={CartPage} exact />\n    <Route path=\"/cart-empty\" component={CartFailurePage} exact />\n    <Route path=\"/cart-login\" render={() => <CartFailurePage logout />} exact />\n    <Route path=\"/login\" component={LoginPage} exact />\n  </div>\n}\n\nexport default App","const changeThicknessType = (state, id, type) => {\r\n    const { pizzaList: { filterPizzas } } = state\r\n    return filterPizzas.map((pizza) => {\r\n        if (pizza.id === id) {\r\n            const { size } = pizza.settings\r\n            const { markup, price } = pizza\r\n            const newId = `${pizza.initialId + type + size}`\r\n            return {\r\n                ...pizza,\r\n                totalPrice: price + markup[type] + markup[size],\r\n                settings: { type: type, size: size },\r\n                id: newId,\r\n                animation: false,\r\n            }\r\n        }\r\n        return pizza\r\n    })\r\n}\r\n\r\nconst changeSizeSettings = (state, id, size) => {\r\n    const { pizzaList: { filterPizzas } } = state\r\n    return filterPizzas.map((pizza) => {\r\n        if (pizza.id === id) {\r\n            const { type } = pizza.settings\r\n            const { markup, price } = pizza\r\n            const newId = `${pizza.initialId + type + size}`\r\n            return {\r\n                ...pizza,\r\n                totalPrice: price + markup[type] + markup[size],\r\n                settings: { type: type, size: size },\r\n                id: newId,\r\n                animation: false,\r\n            }\r\n        }\r\n        return pizza\r\n    })\r\n}\r\n\r\nconst filterItems = (listToFilter, filter) => {\r\n\r\n    const uniquePizzaId = listToFilter.map((item) => {\r\n        let { id, settings: { type, size } } = item\r\n        let newId = `${id + type + size}`\r\n        return {\r\n            ...item,\r\n            id: newId,\r\n            initialId: id,\r\n            animation: false,\r\n        }\r\n    })\r\n    if (filter === 'all') return uniquePizzaId\r\n    return uniquePizzaId.filter((pizza) => pizza.class.includes(filter))\r\n}\r\n\r\nconst sortItems = (listToSort, sortType) => {\r\n    if (sortType === 'cost') return listToSort.sort((a, b) => a.price > b.price ? 1 : -1);\r\n    if (sortType === 'popularity') return listToSort.sort((a, b) => a.popularity < b.popularity ? 1 : -1);\r\n    if (sortType === 'alphabet') return listToSort.sort((a, b) => a.name > b.name ? 1 : -1);\r\n    return listToSort\r\n}\r\n\r\n\r\n\r\n\r\nconst updatePizzaList = (state, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case 'FETCH_PIZZAS_REQUEST':\r\n            return {\r\n                ...state.pizzaList,\r\n                loader: true,\r\n            }\r\n        case 'FETCH_PIZZAS_SUCCES':\r\n            const pizzas = action.payload\r\n            const { sort, filter } = state.pizzaList\r\n            const filterPizzasList = filterItems(pizzas, filter)\r\n            const sortedAndFilteredList = sortItems(filterPizzasList, sort)\r\n\r\n            return {\r\n                ...state.pizzaList,\r\n                pizzas: pizzas,\r\n                filterPizzas: sortedAndFilteredList,\r\n                loader: false,\r\n            }\r\n        case 'FETCH_PIZZAS_FAILURE':\r\n            return {\r\n                ...state.pizzaList,\r\n                error: action.payload\r\n            }\r\n        case 'TYPE_PIZZA_CHOOSE':\r\n            const { id: pizzaIdType } = action.payload\r\n            const { type } = action.payload\r\n            const updatedTypeList = changeThicknessType(state, pizzaIdType, type)\r\n\r\n            return {\r\n                ...state.pizzaList,\r\n                filterPizzas: updatedTypeList,\r\n            }\r\n        case 'SIZE_PIZZA_CHOOSE':\r\n            const { id: pizzaIdSize } = action.payload\r\n            const { size } = action.payload\r\n            const updatedSizeList = changeSizeSettings(state, pizzaIdSize, size)\r\n            return {\r\n                ...state.pizzaList,\r\n                filterPizzas: updatedSizeList,\r\n            }\r\n\r\n        case 'FILTER_CHANGE':\r\n            const pizzaClass = action.payload\r\n            let listToFilter = state.pizzaList.pizzas\r\n            const filteredList = filterItems(listToFilter, pizzaClass)\r\n            return {\r\n                ...state.pizzaList,\r\n                filter: pizzaClass,\r\n                filterPizzas: filteredList\r\n            }\r\n        case 'SORT_CHANGE':\r\n            const sortType = action.payload;\r\n            const listToSort = state.pizzaList.filterPizzas.map((e) => e)\r\n            const sortedItems = sortItems(listToSort, sortType)\r\n            return {\r\n                ...state.pizzaList,\r\n                sort: sortType,\r\n                filterPizzas: sortedItems\r\n            }\r\n        case 'SORT_TOGGLE':\r\n            const { sortActive } = state.pizzaList\r\n            return {\r\n                ...state.pizzaList,\r\n                sortActive: !sortActive\r\n            }\r\n        case 'MOBILE_FILTER_TOGGLE':\r\n            const { mobileFilterActive } = state.pizzaList\r\n            return {\r\n                ...state.pizzaList,\r\n                sortActive: false,\r\n                mobileFilterActive: !mobileFilterActive\r\n            }\r\n\r\n        case 'ANIMATION_PIZZA_TOGGLE':\r\n            const currentPizzasList = state.pizzaList.filterPizzas\r\n            const pizzaIdToAnimate = action.payload\r\n            const newListToAnimate = currentPizzasList.map((item) => {\r\n                if (pizzaIdToAnimate === item.id) return {\r\n                    ...item,\r\n                    animation: true,\r\n                }\r\n                return item\r\n            })\r\n            return {\r\n                ...state.pizzaList,\r\n                filterPizzas: newListToAnimate\r\n            }\r\n        default: return state.pizzaList\r\n    }\r\n}\r\n\r\nexport default updatePizzaList","const createCartPizza = (state, pizzaId) => {\r\n    const { pizzaList: { filterPizzas } } = state\r\n    const selectedPizza = filterPizzas.find(({ id }) => id === pizzaId)\r\n\r\n    return {\r\n        name: selectedPizza.name,\r\n        total: selectedPizza.totalPrice,\r\n        settings: selectedPizza.settings,\r\n        img: selectedPizza.img,\r\n        count: 1,\r\n        id: selectedPizza.id,\r\n    }\r\n}\r\nconst isPizzaCartedChecker = (state, newCartedPizza) => {\r\n    const { id, settings: { type, size } } = newCartedPizza\r\n    const { cartPizzas } = state.shoppingCart\r\n    return cartPizzas\r\n        .find((pizza) => pizza.id === id\r\n            && pizza.settings.type === type\r\n            && pizza.settings.size === size)\r\n}\r\n\r\nconst increaseCartPizza = (state, cartedPizzaId, pizzaItem) => {\r\n    const { shoppingCart: { cartCount, total, cartPizzas } } = state\r\n    const newCartCount = cartCount + 1\r\n    const pizzaPricePerPiece = pizzaItem.total / pizzaItem.count\r\n    const newTotal = total + pizzaPricePerPiece\r\n\r\n    const updatedList = cartPizzas.map((pizza) => {\r\n        if (pizza.id === cartedPizzaId) return (\r\n            {\r\n                ...pizza,\r\n                count: ++pizza.count,\r\n                total: pizzaPricePerPiece + pizza.total\r\n            }\r\n        )\r\n        return pizza\r\n    })\r\n\r\n    return {\r\n        ...state.shoppingCart,\r\n        cartPizzas: updatedList,\r\n        total: newTotal,\r\n        cartCount: newCartCount,\r\n        cartPizzasKind: [\r\n            ...state.shoppingCart.cartPizzasKind,\r\n            pizzaItem.name\r\n        ]\r\n    }\r\n}\r\n\r\nconst decreaseCartPizza = (state, cartedPizzaId, pizzaItem) => {\r\n    const { shoppingCart: { cartCount, total, cartPizzas, cartPizzasKind } } = state\r\n\r\n    const newCartCount = cartCount - 1\r\n    const pizzaPricePerPiece = pizzaItem.total / pizzaItem.count\r\n    const newTotal = total - pizzaPricePerPiece\r\n\r\n    const updatedList = cartPizzas\r\n        .map((pizza) => {\r\n            if (pizza.id === cartedPizzaId) {\r\n                return {\r\n                    ...pizza,\r\n                    count: --pizza.count,\r\n                    total: pizza.total - pizzaPricePerPiece\r\n                }\r\n            }\r\n            return pizza\r\n        })\r\n    const newPizzaKindList = cartPizzasKind.map(e => e)\r\n    const indexOfPizzaKind = cartPizzasKind.lastIndexOf(pizzaItem.name)\r\n    if (indexOfPizzaKind > -1) newPizzaKindList.splice(indexOfPizzaKind, 1)\r\n\r\n    return {\r\n        ...state.shoppingCart,\r\n        cartPizzas: updatedList,\r\n        cartCount: newCartCount,\r\n        total: newTotal,\r\n        cartPizzasKind: newPizzaKindList\r\n    }\r\n}\r\n\r\nconst deletePizza = (state, deletedPizza, deletedPizzaId) => {\r\n    const { shoppingCart: { cartCount, total, cartPizzas, cartPizzasKind } } = state\r\n\r\n    const newList = cartPizzas.filter(({ id }) => id !== deletedPizzaId)\r\n    const newPizzaKindList = cartPizzasKind.map(e => e)\r\n    const indexOfPizzaKind = cartPizzasKind.indexOf(deletedPizza.name)\r\n    if (indexOfPizzaKind > -1) newPizzaKindList.splice(indexOfPizzaKind, deletedPizza.count)\r\n\r\n    return {\r\n        ...state.shoppingCart,\r\n        cartPizzas: newList,\r\n        total: total - deletedPizza.total,\r\n        cartCount: cartCount - deletedPizza.count,\r\n        cartPizzasKind: newPizzaKindList,\r\n    }\r\n}\r\n\r\n\r\nconst updateShoppingCart = (state, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n\r\n        case 'CART_PIZZA_ADD':\r\n            const actionAddPizzaId = action.payload\r\n            const newCartedPizza = createCartPizza(state, actionAddPizzaId)\r\n            const isPizzaCarted = isPizzaCartedChecker(state, newCartedPizza)\r\n\r\n            if (isPizzaCarted) return increaseCartPizza(state, actionAddPizzaId, newCartedPizza)\r\n\r\n            else {\r\n                const newCartCount = state.shoppingCart.cartCount + 1\r\n                const newTotal = state.shoppingCart.total + newCartedPizza.total\r\n                return {\r\n                    ...state.shoppingCart,\r\n                    cartCount: newCartCount,\r\n                    total: newTotal,\r\n                    cartPizzas: [\r\n                        ...state.shoppingCart.cartPizzas,\r\n                        newCartedPizza,\r\n                    ],\r\n                    cartPizzasKind: [\r\n                        ...state.shoppingCart.cartPizzasKind,\r\n                        newCartedPizza.name\r\n                    ],\r\n                }\r\n            }\r\n\r\n        case 'CART_PIZZA_INCREASE':\r\n            const { cartPizzas } = state.shoppingCart\r\n\r\n            const increaseId = action.payload\r\n            const pizzaToInc = cartPizzas.find(({ id }) => id === increaseId)\r\n\r\n            return increaseCartPizza(state, increaseId, pizzaToInc)\r\n\r\n        case 'CART_PIZZA_DECREASE': {\r\n            const { cartPizzas } = state.shoppingCart\r\n\r\n            const decreasePizzaId = action.payload\r\n            const pizzaToDec = cartPizzas.find(({ id }) => id === decreasePizzaId)\r\n\r\n            if (pizzaToDec.count <= 1) return deletePizza(state, pizzaToDec, decreasePizzaId)\r\n            return decreaseCartPizza(state, decreasePizzaId, pizzaToDec)\r\n        }\r\n\r\n        case 'CART_PIZZA_DELETE': {\r\n            const { cartPizzas } = state.shoppingCart\r\n\r\n            const deletedPizzaId = action.payload;\r\n            const deletedPizza = cartPizzas.find(({ id }) => id === deletedPizzaId)\r\n\r\n            return deletePizza(state, deletedPizza, deletedPizzaId)\r\n        }\r\n\r\n        case 'CART_CLEAR': {\r\n            return {\r\n                ...state.shoppingCart,\r\n                cartCount: 0,\r\n                total: 0,\r\n                cartPizzasKind: [],\r\n                cartPizzas: [],\r\n            }\r\n        }\r\n        default: return state.shoppingCart\r\n    }\r\n}\r\n\r\nexport default updateShoppingCart","const setNewUser = (registerContainer, validationIsCorrect, state) => {\r\n    if (validationIsCorrect) {\r\n        if (isNameBusy(registerContainer)) return {\r\n            ...state.loginPage,\r\n            warningModal: { type: 'name' }\r\n        }\r\n        if (isEmailBusy(registerContainer)) return {\r\n            ...state.loginPage,\r\n            warningModal: { type: 'email' }\r\n        }\r\n        if (localStorage.userList) {\r\n            const usersList = JSON.parse(localStorage.userList)\r\n            usersList.push(registerContainer)\r\n            const newUsersList = JSON.stringify(usersList)\r\n            localStorage.setItem('userList', newUsersList)\r\n        }\r\n        else {\r\n            const newUser = JSON.stringify([registerContainer])\r\n            localStorage.setItem('userList', newUser)\r\n        }\r\n\r\n        return {\r\n            ...state.loginPage,\r\n            warningModal: { type: 'succes', payload: registerContainer }\r\n        }\r\n    }\r\n    else return {\r\n        ...state.loginPage,\r\n        warningModal: { type: 'form' }\r\n    }\r\n}\r\n\r\nconst isNameBusy = (registerContainer) => {\r\n    if (localStorage.userList) {\r\n        const usersList = JSON.parse(localStorage.userList)\r\n        return usersList.find(({ name }) => registerContainer.name.toUpperCase() === name.toUpperCase())\r\n    }\r\n    else return false\r\n}\r\n\r\nconst isEmailBusy = (registerContainer) => {\r\n    if (localStorage.userList) {\r\n        const usersList = JSON.parse(localStorage.userList)\r\n        return usersList.find(({ email }) => registerContainer.email.toUpperCase() === email.toUpperCase())\r\n    }\r\n    else return false\r\n}\r\n\r\nconst loginRequest = (loginName, loginPassword, state) => {\r\n    const usersList = JSON.parse(localStorage.userList)\r\n    const userToLogin = usersList.find(({ name, password }) =>\r\n        name.toUpperCase() === loginName.toUpperCase() && password === loginPassword)\r\n    if (userToLogin) {\r\n        return {\r\n            ...state.loginPage,\r\n            logged: true,\r\n            name: userToLogin.name,\r\n            loginErr: false,\r\n        }\r\n    }\r\n    else return {\r\n        ...state.loginPage,\r\n        logged: false,\r\n        name: null,\r\n        loginErr: true,\r\n    }\r\n}\r\n\r\n\r\n\r\nconst updateLoginPage = (state, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_REQUEST': {\r\n            const { name: loginName, password: loginPassword } = action.payload\r\n\r\n            if (localStorage.userList) {\r\n                return loginRequest(loginName, loginPassword, state)\r\n            }\r\n            else return {\r\n                ...state.loginPage,\r\n                loginErr: true,\r\n            }\r\n\r\n        }\r\n        case 'LOG_OUT': {\r\n\r\n            return {\r\n                ...state.loginPage,\r\n                loginErr: false,\r\n                logged: false,\r\n                name: null,\r\n            }\r\n        }\r\n        case 'REGISTER_REQUEST': {\r\n            const { name, password, email } = action.payload\r\n\r\n            const validationContainer = []\r\n            const registerContainer = {\r\n                name: name.value,\r\n                email: email.value,\r\n                password: password.value\r\n            }\r\n\r\n            for (let key in action.payload) {\r\n                let errorStatus = action.payload[key].err\r\n                let value = action.payload[key].value\r\n                if (!errorStatus && value) {\r\n                    validationContainer.push(true)\r\n                }\r\n                else validationContainer.push(false)\r\n            }\r\n            let validationIsCorrect = !validationContainer.includes(false)\r\n\r\n            return setNewUser(registerContainer, validationIsCorrect, state)\r\n\r\n        }\r\n        case 'WARNING_MODAL_REMOVE': {\r\n            return {\r\n                ...state.loginPage,\r\n                warningModal: {},\r\n            }\r\n        }\r\n        default:\r\n            return state.loginPage\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default updateLoginPage","import updatePizzaList from './pizza-list'\r\nimport updateShoppingCart from './shopping-cart'\r\nimport updateLoginPage from './login-page'\r\n\r\nconst initState = {\r\n\r\n    loginPage: {\r\n        logged: false,\r\n        name: null,\r\n        warningModal: {},\r\n        loginErr: false,\r\n    },\r\n    mobileMenuActive: false,\r\n\r\n    shoppingCart: {\r\n        cartPizzas: [],\r\n        cartCount: 0,\r\n        total: 0,\r\n        cartPizzasKind: [],\r\n    },\r\n    pizzaList: {\r\n        pizzas: [],\r\n        filterPizzas: [],\r\n        filter: \"all\",\r\n        sort: \"popularity\",\r\n        sortActive: false,\r\n        mobileFilterActive: false,\r\n        loader: true,\r\n        error: null,\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n\r\n        case 'MOBILE_MENU_TOGGLE':\r\n            return {\r\n                ...state,\r\n                mobileMenuActive: !state.mobileMenuActive\r\n            }\r\n        default:\r\n            return {\r\n                ...state,\r\n                pizzaList: updatePizzaList(state, action),\r\n                shoppingCart: updateShoppingCart(state, action),\r\n                loginPage: updateLoginPage(state, action)\r\n            }\r\n    }\r\n}\r\n\r\nexport default reducer\r\n\r\n","import { createStore } from 'redux'\r\nimport reducer from './reducers'\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport { Provider } from 'react-redux'\nimport { HashRouter as Router } from 'react-router-dom'\nimport store from './store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}